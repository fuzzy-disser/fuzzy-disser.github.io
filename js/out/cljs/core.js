// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__31709__delegate = function (args){
return console.log.apply(console,(function (){var G__31708 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__31708) : cljs.core.into_array.call(null,G__31708));
})());
};
var G__31709 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31710__i = 0, G__31710__a = new Array(arguments.length -  0);
while (G__31710__i < G__31710__a.length) {G__31710__a[G__31710__i] = arguments[G__31710__i + 0]; ++G__31710__i;}
  args = new cljs.core.IndexedSeq(G__31710__a,0);
} 
return G__31709__delegate.call(this,args);};
G__31709.cljs$lang$maxFixedArity = 0;
G__31709.cljs$lang$applyTo = (function (arglist__31711){
var args = cljs.core.seq(arglist__31711);
return G__31709__delegate(args);
});
G__31709.cljs$core$IFn$_invoke$arity$variadic = G__31709__delegate;
return G__31709;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__31713 = x;
return goog.isString(G__31713);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__31715 = x__$1;
return goog.typeOf(G__31715);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__23532__auto__ = ty;
if(cljs.core.truth_(and__23532__auto__)){
return ty.cljs$lang$type;
} else {
return and__23532__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__31717 = obj;
return goog.typeOf(G__31717);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__31719 = Symbol;
return goog.typeOf(G__31719);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__24431__auto___31721 = len;
var i_31722 = (0);
while(true){
if((i_31722 < n__24431__auto___31721)){
(new_arr[i_31722] = (arr[i_31722]));

var G__31723 = (i_31722 + (1));
i_31722 = G__31723;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__31724 = (i + (1));
i = G__31724;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__31733__delegate = function (array,i,idxs){
var G__31730 = aget;
var G__31731 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__31732 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__31730,G__31731,G__31732) : cljs.core.apply.call(null,G__31730,G__31731,G__31732));
};
var G__31733 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__31734__i = 0, G__31734__a = new Array(arguments.length -  2);
while (G__31734__i < G__31734__a.length) {G__31734__a[G__31734__i] = arguments[G__31734__i + 2]; ++G__31734__i;}
  idxs = new cljs.core.IndexedSeq(G__31734__a,0);
} 
return G__31733__delegate.call(this,array,i,idxs);};
G__31733.cljs$lang$maxFixedArity = 2;
G__31733.cljs$lang$applyTo = (function (arglist__31735){
var array = cljs.core.first(arglist__31735);
arglist__31735 = cljs.core.next(arglist__31735);
var i = cljs.core.first(arglist__31735);
var idxs = cljs.core.rest(arglist__31735);
return G__31733__delegate(array,i,idxs);
});
G__31733.cljs$core$IFn$_invoke$arity$variadic = G__31733__delegate;
return G__31733;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__31736 = null;
if (arguments.length > 2) {
var G__31737__i = 0, G__31737__a = new Array(arguments.length -  2);
while (G__31737__i < G__31737__a.length) {G__31737__a[G__31737__i] = arguments[G__31737__i + 2]; ++G__31737__i;}
G__31736 = new cljs.core.IndexedSeq(G__31737__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__31736);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__31746__delegate = function (array,idx,idx2,idxv){
var G__31742 = aset;
var G__31743 = (array[idx]);
var G__31744 = idx2;
var G__31745 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__31742,G__31743,G__31744,G__31745) : cljs.core.apply.call(null,G__31742,G__31743,G__31744,G__31745));
};
var G__31746 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__31747__i = 0, G__31747__a = new Array(arguments.length -  3);
while (G__31747__i < G__31747__a.length) {G__31747__a[G__31747__i] = arguments[G__31747__i + 3]; ++G__31747__i;}
  idxv = new cljs.core.IndexedSeq(G__31747__a,0);
} 
return G__31746__delegate.call(this,array,idx,idx2,idxv);};
G__31746.cljs$lang$maxFixedArity = 3;
G__31746.cljs$lang$applyTo = (function (arglist__31748){
var array = cljs.core.first(arglist__31748);
arglist__31748 = cljs.core.next(arglist__31748);
var idx = cljs.core.first(arglist__31748);
arglist__31748 = cljs.core.next(arglist__31748);
var idx2 = cljs.core.first(arglist__31748);
var idxv = cljs.core.rest(arglist__31748);
return G__31746__delegate(array,idx,idx2,idxv);
});
G__31746.cljs$core$IFn$_invoke$arity$variadic = G__31746__delegate;
return G__31746;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__31749 = null;
if (arguments.length > 3) {
var G__31750__i = 0, G__31750__a = new Array(arguments.length -  3);
while (G__31750__i < G__31750__a.length) {G__31750__a[G__31750__i] = arguments[G__31750__i + 3]; ++G__31750__i;}
G__31749 = new cljs.core.IndexedSeq(G__31750__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__31749);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__31756 = (function (a,x){
a.push(x);

return a;
});
var G__31757 = [];
var G__31758 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__31756,G__31757,G__31758) : cljs.core.reduce.call(null,G__31756,G__31757,G__31758));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__31759__i = 0, G__31759__a = new Array(arguments.length -  2);
while (G__31759__i < G__31759__a.length) {G__31759__a[G__31759__i] = arguments[G__31759__i + 2]; ++G__31759__i;}
  args = new cljs.core.IndexedSeq(G__31759__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__31760){
var obj = cljs.core.first(arglist__31760);
arglist__31760 = cljs.core.next(arglist__31760);
var s = cljs.core.first(arglist__31760);
var args = cljs.core.rest(arglist__31760);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj31762 = {};
return obj31762;
})();


cljs.core.IFn = (function (){var obj31764 = {};
return obj31764;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31810 = x__24188__auto__;
return goog.typeOf(G__31810);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31812 = x__24188__auto__;
return goog.typeOf(G__31812);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31814 = x__24188__auto__;
return goog.typeOf(G__31814);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31816 = x__24188__auto__;
return goog.typeOf(G__31816);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31818 = x__24188__auto__;
return goog.typeOf(G__31818);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31820 = x__24188__auto__;
return goog.typeOf(G__31820);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31822 = x__24188__auto__;
return goog.typeOf(G__31822);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31824 = x__24188__auto__;
return goog.typeOf(G__31824);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31826 = x__24188__auto__;
return goog.typeOf(G__31826);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31828 = x__24188__auto__;
return goog.typeOf(G__31828);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31830 = x__24188__auto__;
return goog.typeOf(G__31830);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31832 = x__24188__auto__;
return goog.typeOf(G__31832);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31834 = x__24188__auto__;
return goog.typeOf(G__31834);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31836 = x__24188__auto__;
return goog.typeOf(G__31836);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31838 = x__24188__auto__;
return goog.typeOf(G__31838);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31840 = x__24188__auto__;
return goog.typeOf(G__31840);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31842 = x__24188__auto__;
return goog.typeOf(G__31842);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31844 = x__24188__auto__;
return goog.typeOf(G__31844);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31846 = x__24188__auto__;
return goog.typeOf(G__31846);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31848 = x__24188__auto__;
return goog.typeOf(G__31848);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31850 = x__24188__auto__;
return goog.typeOf(G__31850);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._invoke[(function (){var G__31852 = x__24188__auto__;
return goog.typeOf(G__31852);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._invoke["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj31854 = {};
return obj31854;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__23532__auto__ = value;
if(and__23532__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__23532__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24188__auto__ = (((value == null))?null:value);
return (function (){var or__23544__auto__ = (cljs.core._clone[(function (){var G__31858 = x__24188__auto__;
return goog.typeOf(G__31858);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._clone["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj31860 = {};
return obj31860;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._count[(function (){var G__31864 = x__24188__auto__;
return goog.typeOf(G__31864);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._count["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj31866 = {};
return obj31866;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._empty[(function (){var G__31870 = x__24188__auto__;
return goog.typeOf(G__31870);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._empty["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj31872 = {};
return obj31872;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._conj[(function (){var G__31876 = x__24188__auto__;
return goog.typeOf(G__31876);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._conj["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj31878 = {};
return obj31878;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._nth[(function (){var G__31884 = x__24188__auto__;
return goog.typeOf(G__31884);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._nth["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._nth[(function (){var G__31886 = x__24188__auto__;
return goog.typeOf(G__31886);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._nth["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj31888 = {};
return obj31888;
})();


cljs.core.ISeq = (function (){var obj31890 = {};
return obj31890;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._first[(function (){var G__31894 = x__24188__auto__;
return goog.typeOf(G__31894);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._first["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._rest[(function (){var G__31898 = x__24188__auto__;
return goog.typeOf(G__31898);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._rest["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj31900 = {};
return obj31900;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._next[(function (){var G__31904 = x__24188__auto__;
return goog.typeOf(G__31904);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._next["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj31906 = {};
return obj31906;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._lookup[(function (){var G__31912 = x__24188__auto__;
return goog.typeOf(G__31912);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._lookup["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._lookup[(function (){var G__31914 = x__24188__auto__;
return goog.typeOf(G__31914);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._lookup["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj31916 = {};
return obj31916;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__31920 = x__24188__auto__;
return goog.typeOf(G__31920);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._assoc[(function (){var G__31924 = x__24188__auto__;
return goog.typeOf(G__31924);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._assoc["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj31926 = {};
return obj31926;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._dissoc[(function (){var G__31930 = x__24188__auto__;
return goog.typeOf(G__31930);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._dissoc["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj31932 = {};
return obj31932;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._key[(function (){var G__31936 = x__24188__auto__;
return goog.typeOf(G__31936);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._key["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._val[(function (){var G__31940 = x__24188__auto__;
return goog.typeOf(G__31940);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._val["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj31942 = {};
return obj31942;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._disjoin[(function (){var G__31946 = x__24188__auto__;
return goog.typeOf(G__31946);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._disjoin["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj31948 = {};
return obj31948;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._peek[(function (){var G__31952 = x__24188__auto__;
return goog.typeOf(G__31952);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._peek["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._pop[(function (){var G__31956 = x__24188__auto__;
return goog.typeOf(G__31956);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._pop["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj31958 = {};
return obj31958;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._assoc_n[(function (){var G__31962 = x__24188__auto__;
return goog.typeOf(G__31962);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj31964 = {};
return obj31964;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._deref[(function (){var G__31968 = x__24188__auto__;
return goog.typeOf(G__31968);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._deref["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj31970 = {};
return obj31970;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._deref_with_timeout[(function (){var G__31974 = x__24188__auto__;
return goog.typeOf(G__31974);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj31976 = {};
return obj31976;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._meta[(function (){var G__31980 = x__24188__auto__;
return goog.typeOf(G__31980);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._meta["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj31982 = {};
return obj31982;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._with_meta[(function (){var G__31986 = x__24188__auto__;
return goog.typeOf(G__31986);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._with_meta["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj31988 = {};
return obj31988;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._reduce[(function (){var G__31994 = x__24188__auto__;
return goog.typeOf(G__31994);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._reduce["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._reduce[(function (){var G__31996 = x__24188__auto__;
return goog.typeOf(G__31996);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._reduce["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj31998 = {};
return obj31998;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._kv_reduce[(function (){var G__32002 = x__24188__auto__;
return goog.typeOf(G__32002);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj32004 = {};
return obj32004;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._equiv[(function (){var G__32008 = x__24188__auto__;
return goog.typeOf(G__32008);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._equiv["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj32010 = {};
return obj32010;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._hash[(function (){var G__32014 = x__24188__auto__;
return goog.typeOf(G__32014);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._hash["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj32016 = {};
return obj32016;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._seq[(function (){var G__32020 = x__24188__auto__;
return goog.typeOf(G__32020);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._seq["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj32022 = {};
return obj32022;
})();


cljs.core.IList = (function (){var obj32024 = {};
return obj32024;
})();


cljs.core.IRecord = (function (){var obj32026 = {};
return obj32026;
})();


cljs.core.IReversible = (function (){var obj32028 = {};
return obj32028;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._rseq[(function (){var G__32032 = x__24188__auto__;
return goog.typeOf(G__32032);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._rseq["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj32034 = {};
return obj32034;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._sorted_seq[(function (){var G__32038 = x__24188__auto__;
return goog.typeOf(G__32038);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._sorted_seq_from[(function (){var G__32042 = x__24188__auto__;
return goog.typeOf(G__32042);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._entry_key[(function (){var G__32046 = x__24188__auto__;
return goog.typeOf(G__32046);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._entry_key["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._comparator[(function (){var G__32050 = x__24188__auto__;
return goog.typeOf(G__32050);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._comparator["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj32052 = {};
return obj32052;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__23532__auto__ = writer;
if(and__23532__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__23532__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24188__auto__ = (((writer == null))?null:writer);
return (function (){var or__23544__auto__ = (cljs.core._write[(function (){var G__32056 = x__24188__auto__;
return goog.typeOf(G__32056);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._write["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__23532__auto__ = writer;
if(and__23532__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__23532__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24188__auto__ = (((writer == null))?null:writer);
return (function (){var or__23544__auto__ = (cljs.core._flush[(function (){var G__32060 = x__24188__auto__;
return goog.typeOf(G__32060);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._flush["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj32062 = {};
return obj32062;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._pr_writer[(function (){var G__32066 = x__24188__auto__;
return goog.typeOf(G__32066);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj32068 = {};
return obj32068;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__23532__auto__ = d;
if(and__23532__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__23532__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24188__auto__ = (((d == null))?null:d);
return (function (){var or__23544__auto__ = (cljs.core._realized_QMARK_[(function (){var G__32072 = x__24188__auto__;
return goog.typeOf(G__32072);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj32074 = {};
return obj32074;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._notify_watches[(function (){var G__32078 = x__24188__auto__;
return goog.typeOf(G__32078);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._add_watch[(function (){var G__32082 = x__24188__auto__;
return goog.typeOf(G__32082);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._add_watch["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__23532__auto__ = this$;
if(and__23532__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__23532__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24188__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23544__auto__ = (cljs.core._remove_watch[(function (){var G__32086 = x__24188__auto__;
return goog.typeOf(G__32086);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj32088 = {};
return obj32088;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._as_transient[(function (){var G__32092 = x__24188__auto__;
return goog.typeOf(G__32092);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._as_transient["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj32094 = {};
return obj32094;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__23532__auto__ = tcoll;
if(and__23532__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__23532__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24188__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23544__auto__ = (cljs.core._conj_BANG_[(function (){var G__32098 = x__24188__auto__;
return goog.typeOf(G__32098);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__23532__auto__ = tcoll;
if(and__23532__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__23532__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24188__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23544__auto__ = (cljs.core._persistent_BANG_[(function (){var G__32102 = x__24188__auto__;
return goog.typeOf(G__32102);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj32104 = {};
return obj32104;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__23532__auto__ = tcoll;
if(and__23532__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__23532__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24188__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23544__auto__ = (cljs.core._assoc_BANG_[(function (){var G__32108 = x__24188__auto__;
return goog.typeOf(G__32108);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj32110 = {};
return obj32110;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__23532__auto__ = tcoll;
if(and__23532__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__23532__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24188__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23544__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__32114 = x__24188__auto__;
return goog.typeOf(G__32114);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj32116 = {};
return obj32116;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__23532__auto__ = tcoll;
if(and__23532__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__23532__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24188__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23544__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__32120 = x__24188__auto__;
return goog.typeOf(G__32120);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__23532__auto__ = tcoll;
if(and__23532__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__23532__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24188__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23544__auto__ = (cljs.core._pop_BANG_[(function (){var G__32124 = x__24188__auto__;
return goog.typeOf(G__32124);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj32126 = {};
return obj32126;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__23532__auto__ = tcoll;
if(and__23532__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__23532__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24188__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23544__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__32130 = x__24188__auto__;
return goog.typeOf(G__32130);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj32132 = {};
return obj32132;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__23532__auto__ = x;
if(and__23532__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__23532__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24188__auto__ = (((x == null))?null:x);
return (function (){var or__23544__auto__ = (cljs.core._compare[(function (){var G__32136 = x__24188__auto__;
return goog.typeOf(G__32136);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._compare["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj32138 = {};
return obj32138;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._drop_first[(function (){var G__32142 = x__24188__auto__;
return goog.typeOf(G__32142);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._drop_first["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj32144 = {};
return obj32144;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._chunked_first[(function (){var G__32148 = x__24188__auto__;
return goog.typeOf(G__32148);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._chunked_rest[(function (){var G__32152 = x__24188__auto__;
return goog.typeOf(G__32152);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj32154 = {};
return obj32154;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._chunked_next[(function (){var G__32158 = x__24188__auto__;
return goog.typeOf(G__32158);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj32160 = {};
return obj32160;
})();

cljs.core._name = (function _name(x){
if((function (){var and__23532__auto__ = x;
if(and__23532__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__23532__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24188__auto__ = (((x == null))?null:x);
return (function (){var or__23544__auto__ = (cljs.core._name[(function (){var G__32164 = x__24188__auto__;
return goog.typeOf(G__32164);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._name["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__23532__auto__ = x;
if(and__23532__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__23532__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24188__auto__ = (((x == null))?null:x);
return (function (){var or__23544__auto__ = (cljs.core._namespace[(function (){var G__32168 = x__24188__auto__;
return goog.typeOf(G__32168);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._namespace["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj32170 = {};
return obj32170;
})();


cljs.core.IReset = (function (){var obj32172 = {};
return obj32172;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._reset_BANG_[(function (){var G__32176 = x__24188__auto__;
return goog.typeOf(G__32176);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj32178 = {};
return obj32178;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._swap_BANG_[(function (){var G__32188 = x__24188__auto__;
return goog.typeOf(G__32188);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._swap_BANG_[(function (){var G__32190 = x__24188__auto__;
return goog.typeOf(G__32190);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._swap_BANG_[(function (){var G__32192 = x__24188__auto__;
return goog.typeOf(G__32192);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._swap_BANG_[(function (){var G__32194 = x__24188__auto__;
return goog.typeOf(G__32194);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj32196 = {};
return obj32196;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__23532__auto__ = o;
if(and__23532__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__23532__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24188__auto__ = (((o == null))?null:o);
return (function (){var or__23544__auto__ = (cljs.core._vreset_BANG_[(function (){var G__32200 = x__24188__auto__;
return goog.typeOf(G__32200);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj32202 = {};
return obj32202;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__23532__auto__ = coll;
if(and__23532__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__23532__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24188__auto__ = (((coll == null))?null:coll);
return (function (){var or__23544__auto__ = (cljs.core._iterator[(function (){var G__32206 = x__24188__auto__;
return goog.typeOf(G__32206);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._iterator["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__32209 = (4294967295);
var G__32210 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__32209,G__32210) : Math.imul.call(null,G__32209,G__32210));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__32213 = a;
var G__32214 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__32213,G__32214) : Math.imul.call(null,G__32213,G__32214));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__32215 = (i + (2));
var G__32216 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__32215;
h1 = G__32216;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj32218 = {};
return obj32218;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__32219 = (i + (1));
var G__32220 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__32219;
hash = G__32220;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj32224 = {};
return obj32224;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__32227 = o;
if(G__32227){
var bit__24218__auto__ = (G__32227.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24218__auto__) || (G__32227.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__32228 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32228) : Math.floor.call(null,G__32228));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__23532__auto__ = cljs.core.not(a.ns);
if(and__23532__auto__){
return b.ns;
} else {
return and__23532__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__32235 = a.ns;
var G__32236 = b.ns;
return goog.array.defaultCompare(G__32235,G__32236);
})();
if(((0) === nsc)){
var G__32237 = a.name;
var G__32238 = b.name;
return goog.array.defaultCompare(G__32237,G__32238);
} else {
return nsc;
}
}
} else {
var G__32239 = a.name;
var G__32240 = b.name;
return goog.array.defaultCompare(G__32239,G__32240);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__23965__auto__ = self__._hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__32242 = null;
var G__32242__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__32242__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__32242 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__32242__2.call(this,self__,coll);
case 3:
return G__32242__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32242.cljs$core$IFn$_invoke$arity$2 = G__32242__2;
G__32242.cljs$core$IFn$_invoke$arity$3 = G__32242__3;
return G__32242;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args32241){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32241)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__32290 = null;
var G__32290__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__32290__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__32290__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__32290__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__32290__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__32290__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__32290__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__32290__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__32290__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__32290__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__32290__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__32290__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__32290__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__32290__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__32290__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__32290__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__32290__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__32290__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__32290__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__32290__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__32290__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__32290__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32246 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__32247 = a;
var G__32248 = b;
var G__32249 = c;
var G__32250 = d;
var G__32251 = e;
var G__32252 = f;
var G__32253 = g;
var G__32254 = h;
var G__32255 = i;
var G__32256 = j;
var G__32257 = k;
var G__32258 = l;
var G__32259 = m;
var G__32260 = n;
var G__32261 = o;
var G__32262 = p;
var G__32263 = q;
var G__32264 = r;
var G__32265 = s;
var G__32266 = t;
var G__32267 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32246,G__32247,G__32248,G__32249,G__32250,G__32251,G__32252,G__32253,G__32254,G__32255,G__32256,G__32257,G__32258,G__32259,G__32260,G__32261,G__32262,G__32263,G__32264,G__32265,G__32266,G__32267) : cljs.core.apply.call(null,G__32246,G__32247,G__32248,G__32249,G__32250,G__32251,G__32252,G__32253,G__32254,G__32255,G__32256,G__32257,G__32258,G__32259,G__32260,G__32261,G__32262,G__32263,G__32264,G__32265,G__32266,G__32267));
});
G__32290 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__32290__1.call(this,self__);
case 2:
return G__32290__2.call(this,self__,a);
case 3:
return G__32290__3.call(this,self__,a,b);
case 4:
return G__32290__4.call(this,self__,a,b,c);
case 5:
return G__32290__5.call(this,self__,a,b,c,d);
case 6:
return G__32290__6.call(this,self__,a,b,c,d,e);
case 7:
return G__32290__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__32290__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__32290__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__32290__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__32290__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__32290__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__32290__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__32290__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__32290__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__32290__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__32290__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__32290__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__32290__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__32290__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__32290__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__32290__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32290.cljs$core$IFn$_invoke$arity$1 = G__32290__1;
G__32290.cljs$core$IFn$_invoke$arity$2 = G__32290__2;
G__32290.cljs$core$IFn$_invoke$arity$3 = G__32290__3;
G__32290.cljs$core$IFn$_invoke$arity$4 = G__32290__4;
G__32290.cljs$core$IFn$_invoke$arity$5 = G__32290__5;
G__32290.cljs$core$IFn$_invoke$arity$6 = G__32290__6;
G__32290.cljs$core$IFn$_invoke$arity$7 = G__32290__7;
G__32290.cljs$core$IFn$_invoke$arity$8 = G__32290__8;
G__32290.cljs$core$IFn$_invoke$arity$9 = G__32290__9;
G__32290.cljs$core$IFn$_invoke$arity$10 = G__32290__10;
G__32290.cljs$core$IFn$_invoke$arity$11 = G__32290__11;
G__32290.cljs$core$IFn$_invoke$arity$12 = G__32290__12;
G__32290.cljs$core$IFn$_invoke$arity$13 = G__32290__13;
G__32290.cljs$core$IFn$_invoke$arity$14 = G__32290__14;
G__32290.cljs$core$IFn$_invoke$arity$15 = G__32290__15;
G__32290.cljs$core$IFn$_invoke$arity$16 = G__32290__16;
G__32290.cljs$core$IFn$_invoke$arity$17 = G__32290__17;
G__32290.cljs$core$IFn$_invoke$arity$18 = G__32290__18;
G__32290.cljs$core$IFn$_invoke$arity$19 = G__32290__19;
G__32290.cljs$core$IFn$_invoke$arity$20 = G__32290__20;
G__32290.cljs$core$IFn$_invoke$arity$21 = G__32290__21;
G__32290.cljs$core$IFn$_invoke$arity$22 = G__32290__22;
return G__32290;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args32245){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32245)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__32268 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__32269 = a;
var G__32270 = b;
var G__32271 = c;
var G__32272 = d;
var G__32273 = e;
var G__32274 = f;
var G__32275 = g;
var G__32276 = h;
var G__32277 = i;
var G__32278 = j;
var G__32279 = k;
var G__32280 = l;
var G__32281 = m;
var G__32282 = n;
var G__32283 = o;
var G__32284 = p;
var G__32285 = q;
var G__32286 = r;
var G__32287 = s;
var G__32288 = t;
var G__32289 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32268,G__32269,G__32270,G__32271,G__32272,G__32273,G__32274,G__32275,G__32276,G__32277,G__32278,G__32279,G__32280,G__32281,G__32282,G__32283,G__32284,G__32285,G__32286,G__32287,G__32288,G__32289) : cljs.core.apply.call(null,G__32268,G__32269,G__32270,G__32271,G__32272,G__32273,G__32274,G__32275,G__32276,G__32277,G__32278,G__32279,G__32280,G__32281,G__32282,G__32283,G__32284,G__32285,G__32286,G__32287,G__32288,G__32289));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__32292 = x;
if(G__32292){
var bit__24225__auto__ = null;
if(cljs.core.truth_((function (){var or__23544__auto__ = bit__24225__auto__;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return G__32292.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__32292.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__32292);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__32292);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__32294 = value;
if(G__32294){
var bit__24225__auto__ = (G__32294.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24225__auto__) || (G__32294.cljs$core$ICloneable$)){
return true;
} else {
if((!G__32294.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__32294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__32294);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32296 = coll;
if(G__32296){
var bit__24218__auto__ = (G__32296.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24218__auto__) || (G__32296.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32298 = coll;
if(G__32298){
var bit__24218__auto__ = (G__32298.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24218__auto__) || (G__32298.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__32300 = coll;
if(G__32300){
var bit__24218__auto__ = (G__32300.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24218__auto__) || (G__32300.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__32302 = coll;
if(G__32302){
var bit__24218__auto__ = (G__32302.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24218__auto__) || (G__32302.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__32307__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__32308 = y;
var G__32309 = cljs.core.first(more);
var G__32310 = cljs.core.next(more);
x = G__32308;
y = G__32309;
more = G__32310;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32307 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32311__i = 0, G__32311__a = new Array(arguments.length -  2);
while (G__32311__i < G__32311__a.length) {G__32311__a[G__32311__i] = arguments[G__32311__i + 2]; ++G__32311__i;}
  more = new cljs.core.IndexedSeq(G__32311__a,0);
} 
return G__32307__delegate.call(this,x,y,more);};
G__32307.cljs$lang$maxFixedArity = 2;
G__32307.cljs$lang$applyTo = (function (arglist__32312){
var x = cljs.core.first(arglist__32312);
arglist__32312 = cljs.core.next(arglist__32312);
var y = cljs.core.first(arglist__32312);
var more = cljs.core.rest(arglist__32312);
return G__32307__delegate(x,y,more);
});
G__32307.cljs$core$IFn$_invoke$arity$variadic = G__32307__delegate;
return G__32307;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__32313 = null;
if (arguments.length > 2) {
var G__32314__i = 0, G__32314__a = new Array(arguments.length -  2);
while (G__32314__i < G__32314__a.length) {G__32314__a[G__32314__i] = arguments[G__32314__i + 2]; ++G__32314__i;}
G__32313 = new cljs.core.IndexedSeq(G__32314__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__32315 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__32315) : cljs.core.es6_iterator_seq.call(null,G__32315));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__32316 = (n + (1));
var G__32317 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__32318 = cljs.core.next(coll__$1);
n = G__32316;
hash_code = G__32317;
coll__$1 = G__32318;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__32319 = (n + (1));
var G__32320 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__32321 = cljs.core.next(coll__$1);
n = G__32319;
hash_code = G__32320;
coll__$1 = G__32321;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__32322 = o;
return goog.getUid(G__32322);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__32324 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32324) : cljs.core.deref.call(null,G__32324));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__32331 = val;
var G__32332 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32331,G__32332) : f.call(null,G__32331,G__32332));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32337 = nval;
var G__32338 = (n + (1));
val = G__32337;
n = G__32338;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__32333 = val__$1;
var G__32334 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32333,G__32334) : f.call(null,G__32333,G__32334));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32339 = nval;
var G__32340 = (n + (1));
val__$1 = G__32339;
n = G__32340;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__32335 = val__$1;
var G__32336 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32335,G__32336) : f.call(null,G__32335,G__32336));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32341 = nval;
var G__32342 = (n + (1));
val__$1 = G__32341;
n = G__32342;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__32349 = val;
var G__32350 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32349,G__32350) : f.call(null,G__32349,G__32350));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32355 = nval;
var G__32356 = (n + (1));
val = G__32355;
n = G__32356;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__32351 = val__$1;
var G__32352 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32351,G__32352) : f.call(null,G__32351,G__32352));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32357 = nval;
var G__32358 = (n + (1));
val__$1 = G__32357;
n = G__32358;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__32353 = val__$1;
var G__32354 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32353,G__32354) : f.call(null,G__32353,G__32354));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32359 = nval;
var G__32360 = (n + (1));
val__$1 = G__32359;
n = G__32360;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__32362 = x;
if(G__32362){
var bit__24225__auto__ = (G__32362.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24225__auto__) || (G__32362.cljs$core$ICounted$)){
return true;
} else {
if((!G__32362.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__32362);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__32362);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__32364 = x;
if(G__32364){
var bit__24225__auto__ = (G__32364.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24225__auto__) || (G__32364.cljs$core$IIndexed$)){
return true;
} else {
if((!G__32364.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__32364);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__32364);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__32365 = coll__$1;
var G__32366 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__32365,G__32366) : cljs.core.equiv_sequential.call(null,G__32365,G__32366));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__32367 = o;
var G__32368 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__32367,G__32368) : cljs.core.cons.call(null,G__32367,G__32368));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__32371 = coll__$1;
var G__32372 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__32371,G__32372) : cljs.core.equiv_sequential.call(null,G__32371,G__32372));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__32373 = cljs.core.List.EMPTY;
var G__32374 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__32373,G__32374) : cljs.core.with_meta.call(null,G__32373,G__32374));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__32375 = f;
var G__32376 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__32375,G__32376) : cljs.core.seq_reduce.call(null,G__32375,G__32376));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__32377 = f;
var G__32378 = start;
var G__32379 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__32377,G__32378,G__32379) : cljs.core.seq_reduce.call(null,G__32377,G__32378,G__32379));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__32380 = o;
var G__32381 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__32380,G__32381) : cljs.core.cons.call(null,G__32380,G__32381));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__32382 = sn;
s = G__32382;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__32387__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__32388 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__32389 = cljs.core.first(xs);
var G__32390 = cljs.core.next(xs);
coll = G__32388;
x = G__32389;
xs = G__32390;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__32387 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__32391__i = 0, G__32391__a = new Array(arguments.length -  2);
while (G__32391__i < G__32391__a.length) {G__32391__a[G__32391__i] = arguments[G__32391__i + 2]; ++G__32391__i;}
  xs = new cljs.core.IndexedSeq(G__32391__a,0);
} 
return G__32387__delegate.call(this,coll,x,xs);};
G__32387.cljs$lang$maxFixedArity = 2;
G__32387.cljs$lang$applyTo = (function (arglist__32392){
var coll = cljs.core.first(arglist__32392);
arglist__32392 = cljs.core.next(arglist__32392);
var x = cljs.core.first(arglist__32392);
var xs = cljs.core.rest(arglist__32392);
return G__32387__delegate(coll,x,xs);
});
G__32387.cljs$core$IFn$_invoke$arity$variadic = G__32387__delegate;
return G__32387;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__32393 = null;
if (arguments.length > 2) {
var G__32394__i = 0, G__32394__a = new Array(arguments.length -  2);
while (G__32394__i < G__32394__a.length) {G__32394__a[G__32394__i] = arguments[G__32394__i + 2]; ++G__32394__i;}
G__32393 = new cljs.core.IndexedSeq(G__32394__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__32393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__32395 = cljs.core.next(s);
var G__32396 = (acc + (1));
s = G__32395;
acc = G__32396;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__32398 = coll;
if(G__32398){
var bit__24218__auto__ = (G__32398.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24218__auto__) || (G__32398.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__32399 = cljs.core.next(coll);
var G__32400 = (n - (1));
coll = G__32399;
n = G__32400;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__32401 = cljs.core.next(coll);
var G__32402 = (n - (1));
var G__32403 = not_found;
coll = G__32401;
n = G__32402;
not_found = G__32403;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__32408 = coll;
if(G__32408){
var bit__24218__auto__ = (G__32408.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24218__auto__) || (G__32408.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__32409 = coll;
if(G__32409){
var bit__24225__auto__ = (G__32409.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24225__auto__) || (G__32409.cljs$core$ISeq$)){
return true;
} else {
if((!G__32409.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32409);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32409);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__32410 = coll;
if(G__32410){
var bit__24218__auto__ = (G__32410.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24218__auto__) || (G__32410.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__32411 = coll;
if(G__32411){
var bit__24225__auto__ = (G__32411.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24225__auto__) || (G__32411.cljs$core$ISeq$)){
return true;
} else {
if((!G__32411.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32411);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32411);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__32412 = (n__$1 - (1));
var G__32413 = cljs.core.rest(xs);
n__$1 = G__32412;
xs = G__32413;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__32416 = o;
if(G__32416){
var bit__24218__auto__ = (G__32416.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24218__auto__) || (G__32416.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__32417 = o;
if(G__32417){
var bit__24218__auto__ = (G__32417.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24218__auto__) || (G__32417.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__32421__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__32422 = ret;
var G__32423 = cljs.core.first(kvs);
var G__32424 = cljs.core.second(kvs);
var G__32425 = cljs.core.nnext(kvs);
coll = G__32422;
k = G__32423;
v = G__32424;
kvs = G__32425;
continue;
} else {
return ret;
}
break;
}
};
var G__32421 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__32426__i = 0, G__32426__a = new Array(arguments.length -  3);
while (G__32426__i < G__32426__a.length) {G__32426__a[G__32426__i] = arguments[G__32426__i + 3]; ++G__32426__i;}
  kvs = new cljs.core.IndexedSeq(G__32426__a,0);
} 
return G__32421__delegate.call(this,coll,k,v,kvs);};
G__32421.cljs$lang$maxFixedArity = 3;
G__32421.cljs$lang$applyTo = (function (arglist__32427){
var coll = cljs.core.first(arglist__32427);
arglist__32427 = cljs.core.next(arglist__32427);
var k = cljs.core.first(arglist__32427);
arglist__32427 = cljs.core.next(arglist__32427);
var v = cljs.core.first(arglist__32427);
var kvs = cljs.core.rest(arglist__32427);
return G__32421__delegate(coll,k,v,kvs);
});
G__32421.cljs$core$IFn$_invoke$arity$variadic = G__32421__delegate;
return G__32421;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__32428 = null;
if (arguments.length > 3) {
var G__32429__i = 0, G__32429__a = new Array(arguments.length -  3);
while (G__32429__i < G__32429__a.length) {G__32429__a[G__32429__i] = arguments[G__32429__i + 3]; ++G__32429__i;}
G__32428 = new cljs.core.IndexedSeq(G__32429__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__32428);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__32432__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__32433 = ret;
var G__32434 = cljs.core.first(ks);
var G__32435 = cljs.core.next(ks);
coll = G__32433;
k = G__32434;
ks = G__32435;
continue;
} else {
return ret;
}
}
break;
}
};
var G__32432 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32436__i = 0, G__32436__a = new Array(arguments.length -  2);
while (G__32436__i < G__32436__a.length) {G__32436__a[G__32436__i] = arguments[G__32436__i + 2]; ++G__32436__i;}
  ks = new cljs.core.IndexedSeq(G__32436__a,0);
} 
return G__32432__delegate.call(this,coll,k,ks);};
G__32432.cljs$lang$maxFixedArity = 2;
G__32432.cljs$lang$applyTo = (function (arglist__32437){
var coll = cljs.core.first(arglist__32437);
arglist__32437 = cljs.core.next(arglist__32437);
var k = cljs.core.first(arglist__32437);
var ks = cljs.core.rest(arglist__32437);
return G__32432__delegate(coll,k,ks);
});
G__32432.cljs$core$IFn$_invoke$arity$variadic = G__32432__delegate;
return G__32432;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__32438 = null;
if (arguments.length > 2) {
var G__32439__i = 0, G__32439__a = new Array(arguments.length -  2);
while (G__32439__i < G__32439__a.length) {G__32439__a[G__32439__i] = arguments[G__32439__i + 2]; ++G__32439__i;}
G__32438 = new cljs.core.IndexedSeq(G__32439__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__32438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__23544__auto__ = (function (){var G__32444 = f;
return goog.isFunction(G__32444);
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var G__32445 = f;
if(G__32445){
var bit__24225__auto__ = null;
if(cljs.core.truth_((function (){var or__23544__auto____$1 = bit__24225__auto__;
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
return G__32445.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__32445.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__32445);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__32445);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__32911 = null;
var G__32911__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__32911__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32447 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__32447) : self__.afn.call(null,G__32447));
});
var G__32911__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32448 = a;
var G__32449 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__32448,G__32449) : self__.afn.call(null,G__32448,G__32449));
});
var G__32911__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32450 = a;
var G__32451 = b;
var G__32452 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__32450,G__32451,G__32452) : self__.afn.call(null,G__32450,G__32451,G__32452));
});
var G__32911__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32453 = a;
var G__32454 = b;
var G__32455 = c;
var G__32456 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__32453,G__32454,G__32455,G__32456) : self__.afn.call(null,G__32453,G__32454,G__32455,G__32456));
});
var G__32911__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32457 = a;
var G__32458 = b;
var G__32459 = c;
var G__32460 = d;
var G__32461 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__32457,G__32458,G__32459,G__32460,G__32461) : self__.afn.call(null,G__32457,G__32458,G__32459,G__32460,G__32461));
});
var G__32911__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32462 = a;
var G__32463 = b;
var G__32464 = c;
var G__32465 = d;
var G__32466 = e;
var G__32467 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__32462,G__32463,G__32464,G__32465,G__32466,G__32467) : self__.afn.call(null,G__32462,G__32463,G__32464,G__32465,G__32466,G__32467));
});
var G__32911__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32468 = a;
var G__32469 = b;
var G__32470 = c;
var G__32471 = d;
var G__32472 = e;
var G__32473 = f;
var G__32474 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__32468,G__32469,G__32470,G__32471,G__32472,G__32473,G__32474) : self__.afn.call(null,G__32468,G__32469,G__32470,G__32471,G__32472,G__32473,G__32474));
});
var G__32911__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32475 = a;
var G__32476 = b;
var G__32477 = c;
var G__32478 = d;
var G__32479 = e;
var G__32480 = f;
var G__32481 = g;
var G__32482 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__32475,G__32476,G__32477,G__32478,G__32479,G__32480,G__32481,G__32482) : self__.afn.call(null,G__32475,G__32476,G__32477,G__32478,G__32479,G__32480,G__32481,G__32482));
});
var G__32911__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32483 = a;
var G__32484 = b;
var G__32485 = c;
var G__32486 = d;
var G__32487 = e;
var G__32488 = f;
var G__32489 = g;
var G__32490 = h;
var G__32491 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__32483,G__32484,G__32485,G__32486,G__32487,G__32488,G__32489,G__32490,G__32491) : self__.afn.call(null,G__32483,G__32484,G__32485,G__32486,G__32487,G__32488,G__32489,G__32490,G__32491));
});
var G__32911__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32492 = a;
var G__32493 = b;
var G__32494 = c;
var G__32495 = d;
var G__32496 = e;
var G__32497 = f;
var G__32498 = g;
var G__32499 = h;
var G__32500 = i;
var G__32501 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__32492,G__32493,G__32494,G__32495,G__32496,G__32497,G__32498,G__32499,G__32500,G__32501) : self__.afn.call(null,G__32492,G__32493,G__32494,G__32495,G__32496,G__32497,G__32498,G__32499,G__32500,G__32501));
});
var G__32911__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32502 = a;
var G__32503 = b;
var G__32504 = c;
var G__32505 = d;
var G__32506 = e;
var G__32507 = f;
var G__32508 = g;
var G__32509 = h;
var G__32510 = i;
var G__32511 = j;
var G__32512 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__32502,G__32503,G__32504,G__32505,G__32506,G__32507,G__32508,G__32509,G__32510,G__32511,G__32512) : self__.afn.call(null,G__32502,G__32503,G__32504,G__32505,G__32506,G__32507,G__32508,G__32509,G__32510,G__32511,G__32512));
});
var G__32911__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32513 = a;
var G__32514 = b;
var G__32515 = c;
var G__32516 = d;
var G__32517 = e;
var G__32518 = f;
var G__32519 = g;
var G__32520 = h;
var G__32521 = i;
var G__32522 = j;
var G__32523 = k;
var G__32524 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__32513,G__32514,G__32515,G__32516,G__32517,G__32518,G__32519,G__32520,G__32521,G__32522,G__32523,G__32524) : self__.afn.call(null,G__32513,G__32514,G__32515,G__32516,G__32517,G__32518,G__32519,G__32520,G__32521,G__32522,G__32523,G__32524));
});
var G__32911__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32525 = a;
var G__32526 = b;
var G__32527 = c;
var G__32528 = d;
var G__32529 = e;
var G__32530 = f;
var G__32531 = g;
var G__32532 = h;
var G__32533 = i;
var G__32534 = j;
var G__32535 = k;
var G__32536 = l;
var G__32537 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__32525,G__32526,G__32527,G__32528,G__32529,G__32530,G__32531,G__32532,G__32533,G__32534,G__32535,G__32536,G__32537) : self__.afn.call(null,G__32525,G__32526,G__32527,G__32528,G__32529,G__32530,G__32531,G__32532,G__32533,G__32534,G__32535,G__32536,G__32537));
});
var G__32911__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32538 = a;
var G__32539 = b;
var G__32540 = c;
var G__32541 = d;
var G__32542 = e;
var G__32543 = f;
var G__32544 = g;
var G__32545 = h;
var G__32546 = i;
var G__32547 = j;
var G__32548 = k;
var G__32549 = l;
var G__32550 = m;
var G__32551 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__32538,G__32539,G__32540,G__32541,G__32542,G__32543,G__32544,G__32545,G__32546,G__32547,G__32548,G__32549,G__32550,G__32551) : self__.afn.call(null,G__32538,G__32539,G__32540,G__32541,G__32542,G__32543,G__32544,G__32545,G__32546,G__32547,G__32548,G__32549,G__32550,G__32551));
});
var G__32911__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32552 = a;
var G__32553 = b;
var G__32554 = c;
var G__32555 = d;
var G__32556 = e;
var G__32557 = f;
var G__32558 = g;
var G__32559 = h;
var G__32560 = i;
var G__32561 = j;
var G__32562 = k;
var G__32563 = l;
var G__32564 = m;
var G__32565 = n;
var G__32566 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__32552,G__32553,G__32554,G__32555,G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563,G__32564,G__32565,G__32566) : self__.afn.call(null,G__32552,G__32553,G__32554,G__32555,G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563,G__32564,G__32565,G__32566));
});
var G__32911__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32567 = a;
var G__32568 = b;
var G__32569 = c;
var G__32570 = d;
var G__32571 = e;
var G__32572 = f;
var G__32573 = g;
var G__32574 = h;
var G__32575 = i;
var G__32576 = j;
var G__32577 = k;
var G__32578 = l;
var G__32579 = m;
var G__32580 = n;
var G__32581 = o;
var G__32582 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__32567,G__32568,G__32569,G__32570,G__32571,G__32572,G__32573,G__32574,G__32575,G__32576,G__32577,G__32578,G__32579,G__32580,G__32581,G__32582) : self__.afn.call(null,G__32567,G__32568,G__32569,G__32570,G__32571,G__32572,G__32573,G__32574,G__32575,G__32576,G__32577,G__32578,G__32579,G__32580,G__32581,G__32582));
});
var G__32911__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32583 = a;
var G__32584 = b;
var G__32585 = c;
var G__32586 = d;
var G__32587 = e;
var G__32588 = f;
var G__32589 = g;
var G__32590 = h;
var G__32591 = i;
var G__32592 = j;
var G__32593 = k;
var G__32594 = l;
var G__32595 = m;
var G__32596 = n;
var G__32597 = o;
var G__32598 = p;
var G__32599 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__32583,G__32584,G__32585,G__32586,G__32587,G__32588,G__32589,G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598,G__32599) : self__.afn.call(null,G__32583,G__32584,G__32585,G__32586,G__32587,G__32588,G__32589,G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598,G__32599));
});
var G__32911__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32600 = a;
var G__32601 = b;
var G__32602 = c;
var G__32603 = d;
var G__32604 = e;
var G__32605 = f;
var G__32606 = g;
var G__32607 = h;
var G__32608 = i;
var G__32609 = j;
var G__32610 = k;
var G__32611 = l;
var G__32612 = m;
var G__32613 = n;
var G__32614 = o;
var G__32615 = p;
var G__32616 = q;
var G__32617 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609,G__32610,G__32611,G__32612,G__32613,G__32614,G__32615,G__32616,G__32617) : self__.afn.call(null,G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609,G__32610,G__32611,G__32612,G__32613,G__32614,G__32615,G__32616,G__32617));
});
var G__32911__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32618 = a;
var G__32619 = b;
var G__32620 = c;
var G__32621 = d;
var G__32622 = e;
var G__32623 = f;
var G__32624 = g;
var G__32625 = h;
var G__32626 = i;
var G__32627 = j;
var G__32628 = k;
var G__32629 = l;
var G__32630 = m;
var G__32631 = n;
var G__32632 = o;
var G__32633 = p;
var G__32634 = q;
var G__32635 = r;
var G__32636 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__32618,G__32619,G__32620,G__32621,G__32622,G__32623,G__32624,G__32625,G__32626,G__32627,G__32628,G__32629,G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636) : self__.afn.call(null,G__32618,G__32619,G__32620,G__32621,G__32622,G__32623,G__32624,G__32625,G__32626,G__32627,G__32628,G__32629,G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636));
});
var G__32911__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32637 = a;
var G__32638 = b;
var G__32639 = c;
var G__32640 = d;
var G__32641 = e;
var G__32642 = f;
var G__32643 = g;
var G__32644 = h;
var G__32645 = i;
var G__32646 = j;
var G__32647 = k;
var G__32648 = l;
var G__32649 = m;
var G__32650 = n;
var G__32651 = o;
var G__32652 = p;
var G__32653 = q;
var G__32654 = r;
var G__32655 = s;
var G__32656 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__32637,G__32638,G__32639,G__32640,G__32641,G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655,G__32656) : self__.afn.call(null,G__32637,G__32638,G__32639,G__32640,G__32641,G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655,G__32656));
});
var G__32911__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__32657 = self__.afn;
var G__32658 = a;
var G__32659 = b;
var G__32660 = c;
var G__32661 = d;
var G__32662 = e;
var G__32663 = f;
var G__32664 = g;
var G__32665 = h;
var G__32666 = i;
var G__32667 = j;
var G__32668 = k;
var G__32669 = l;
var G__32670 = m;
var G__32671 = n;
var G__32672 = o;
var G__32673 = p;
var G__32674 = q;
var G__32675 = r;
var G__32676 = s;
var G__32677 = t;
var G__32678 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678) : cljs.core.apply.call(null,G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678));
});
G__32911 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__32911__1.call(this,self__);
case 2:
return G__32911__2.call(this,self__,a);
case 3:
return G__32911__3.call(this,self__,a,b);
case 4:
return G__32911__4.call(this,self__,a,b,c);
case 5:
return G__32911__5.call(this,self__,a,b,c,d);
case 6:
return G__32911__6.call(this,self__,a,b,c,d,e);
case 7:
return G__32911__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__32911__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__32911__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__32911__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__32911__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__32911__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__32911__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__32911__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__32911__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__32911__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__32911__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__32911__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__32911__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__32911__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__32911__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__32911__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32911.cljs$core$IFn$_invoke$arity$1 = G__32911__1;
G__32911.cljs$core$IFn$_invoke$arity$2 = G__32911__2;
G__32911.cljs$core$IFn$_invoke$arity$3 = G__32911__3;
G__32911.cljs$core$IFn$_invoke$arity$4 = G__32911__4;
G__32911.cljs$core$IFn$_invoke$arity$5 = G__32911__5;
G__32911.cljs$core$IFn$_invoke$arity$6 = G__32911__6;
G__32911.cljs$core$IFn$_invoke$arity$7 = G__32911__7;
G__32911.cljs$core$IFn$_invoke$arity$8 = G__32911__8;
G__32911.cljs$core$IFn$_invoke$arity$9 = G__32911__9;
G__32911.cljs$core$IFn$_invoke$arity$10 = G__32911__10;
G__32911.cljs$core$IFn$_invoke$arity$11 = G__32911__11;
G__32911.cljs$core$IFn$_invoke$arity$12 = G__32911__12;
G__32911.cljs$core$IFn$_invoke$arity$13 = G__32911__13;
G__32911.cljs$core$IFn$_invoke$arity$14 = G__32911__14;
G__32911.cljs$core$IFn$_invoke$arity$15 = G__32911__15;
G__32911.cljs$core$IFn$_invoke$arity$16 = G__32911__16;
G__32911.cljs$core$IFn$_invoke$arity$17 = G__32911__17;
G__32911.cljs$core$IFn$_invoke$arity$18 = G__32911__18;
G__32911.cljs$core$IFn$_invoke$arity$19 = G__32911__19;
G__32911.cljs$core$IFn$_invoke$arity$20 = G__32911__20;
G__32911.cljs$core$IFn$_invoke$arity$21 = G__32911__21;
G__32911.cljs$core$IFn$_invoke$arity$22 = G__32911__22;
return G__32911;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args32446){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32446)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__32679 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__32679) : self__.afn.call(null,G__32679));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__32680 = a;
var G__32681 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__32680,G__32681) : self__.afn.call(null,G__32680,G__32681));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__32682 = a;
var G__32683 = b;
var G__32684 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__32682,G__32683,G__32684) : self__.afn.call(null,G__32682,G__32683,G__32684));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__32685 = a;
var G__32686 = b;
var G__32687 = c;
var G__32688 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__32685,G__32686,G__32687,G__32688) : self__.afn.call(null,G__32685,G__32686,G__32687,G__32688));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__32689 = a;
var G__32690 = b;
var G__32691 = c;
var G__32692 = d;
var G__32693 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__32689,G__32690,G__32691,G__32692,G__32693) : self__.afn.call(null,G__32689,G__32690,G__32691,G__32692,G__32693));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__32694 = a;
var G__32695 = b;
var G__32696 = c;
var G__32697 = d;
var G__32698 = e;
var G__32699 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__32694,G__32695,G__32696,G__32697,G__32698,G__32699) : self__.afn.call(null,G__32694,G__32695,G__32696,G__32697,G__32698,G__32699));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__32700 = a;
var G__32701 = b;
var G__32702 = c;
var G__32703 = d;
var G__32704 = e;
var G__32705 = f;
var G__32706 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706) : self__.afn.call(null,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__32707 = a;
var G__32708 = b;
var G__32709 = c;
var G__32710 = d;
var G__32711 = e;
var G__32712 = f;
var G__32713 = g;
var G__32714 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__32707,G__32708,G__32709,G__32710,G__32711,G__32712,G__32713,G__32714) : self__.afn.call(null,G__32707,G__32708,G__32709,G__32710,G__32711,G__32712,G__32713,G__32714));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__32715 = a;
var G__32716 = b;
var G__32717 = c;
var G__32718 = d;
var G__32719 = e;
var G__32720 = f;
var G__32721 = g;
var G__32722 = h;
var G__32723 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723) : self__.afn.call(null,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__32724 = a;
var G__32725 = b;
var G__32726 = c;
var G__32727 = d;
var G__32728 = e;
var G__32729 = f;
var G__32730 = g;
var G__32731 = h;
var G__32732 = i;
var G__32733 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732,G__32733) : self__.afn.call(null,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732,G__32733));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__32734 = a;
var G__32735 = b;
var G__32736 = c;
var G__32737 = d;
var G__32738 = e;
var G__32739 = f;
var G__32740 = g;
var G__32741 = h;
var G__32742 = i;
var G__32743 = j;
var G__32744 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744) : self__.afn.call(null,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__32745 = a;
var G__32746 = b;
var G__32747 = c;
var G__32748 = d;
var G__32749 = e;
var G__32750 = f;
var G__32751 = g;
var G__32752 = h;
var G__32753 = i;
var G__32754 = j;
var G__32755 = k;
var G__32756 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__32745,G__32746,G__32747,G__32748,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756) : self__.afn.call(null,G__32745,G__32746,G__32747,G__32748,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__32757 = a;
var G__32758 = b;
var G__32759 = c;
var G__32760 = d;
var G__32761 = e;
var G__32762 = f;
var G__32763 = g;
var G__32764 = h;
var G__32765 = i;
var G__32766 = j;
var G__32767 = k;
var G__32768 = l;
var G__32769 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765,G__32766,G__32767,G__32768,G__32769) : self__.afn.call(null,G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765,G__32766,G__32767,G__32768,G__32769));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__32770 = a;
var G__32771 = b;
var G__32772 = c;
var G__32773 = d;
var G__32774 = e;
var G__32775 = f;
var G__32776 = g;
var G__32777 = h;
var G__32778 = i;
var G__32779 = j;
var G__32780 = k;
var G__32781 = l;
var G__32782 = m;
var G__32783 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__32770,G__32771,G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783) : self__.afn.call(null,G__32770,G__32771,G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__32784 = a;
var G__32785 = b;
var G__32786 = c;
var G__32787 = d;
var G__32788 = e;
var G__32789 = f;
var G__32790 = g;
var G__32791 = h;
var G__32792 = i;
var G__32793 = j;
var G__32794 = k;
var G__32795 = l;
var G__32796 = m;
var G__32797 = n;
var G__32798 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__32784,G__32785,G__32786,G__32787,G__32788,G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798) : self__.afn.call(null,G__32784,G__32785,G__32786,G__32787,G__32788,G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__32799 = a;
var G__32800 = b;
var G__32801 = c;
var G__32802 = d;
var G__32803 = e;
var G__32804 = f;
var G__32805 = g;
var G__32806 = h;
var G__32807 = i;
var G__32808 = j;
var G__32809 = k;
var G__32810 = l;
var G__32811 = m;
var G__32812 = n;
var G__32813 = o;
var G__32814 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814) : self__.afn.call(null,G__32799,G__32800,G__32801,G__32802,G__32803,G__32804,G__32805,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__32815 = a;
var G__32816 = b;
var G__32817 = c;
var G__32818 = d;
var G__32819 = e;
var G__32820 = f;
var G__32821 = g;
var G__32822 = h;
var G__32823 = i;
var G__32824 = j;
var G__32825 = k;
var G__32826 = l;
var G__32827 = m;
var G__32828 = n;
var G__32829 = o;
var G__32830 = p;
var G__32831 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822,G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831) : self__.afn.call(null,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822,G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__32832 = a;
var G__32833 = b;
var G__32834 = c;
var G__32835 = d;
var G__32836 = e;
var G__32837 = f;
var G__32838 = g;
var G__32839 = h;
var G__32840 = i;
var G__32841 = j;
var G__32842 = k;
var G__32843 = l;
var G__32844 = m;
var G__32845 = n;
var G__32846 = o;
var G__32847 = p;
var G__32848 = q;
var G__32849 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841,G__32842,G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849) : self__.afn.call(null,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841,G__32842,G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__32850 = a;
var G__32851 = b;
var G__32852 = c;
var G__32853 = d;
var G__32854 = e;
var G__32855 = f;
var G__32856 = g;
var G__32857 = h;
var G__32858 = i;
var G__32859 = j;
var G__32860 = k;
var G__32861 = l;
var G__32862 = m;
var G__32863 = n;
var G__32864 = o;
var G__32865 = p;
var G__32866 = q;
var G__32867 = r;
var G__32868 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868) : self__.afn.call(null,G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__32869 = a;
var G__32870 = b;
var G__32871 = c;
var G__32872 = d;
var G__32873 = e;
var G__32874 = f;
var G__32875 = g;
var G__32876 = h;
var G__32877 = i;
var G__32878 = j;
var G__32879 = k;
var G__32880 = l;
var G__32881 = m;
var G__32882 = n;
var G__32883 = o;
var G__32884 = p;
var G__32885 = q;
var G__32886 = r;
var G__32887 = s;
var G__32888 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__32869,G__32870,G__32871,G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878,G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888) : self__.afn.call(null,G__32869,G__32870,G__32871,G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878,G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__32889 = self__.afn;
var G__32890 = a;
var G__32891 = b;
var G__32892 = c;
var G__32893 = d;
var G__32894 = e;
var G__32895 = f;
var G__32896 = g;
var G__32897 = h;
var G__32898 = i;
var G__32899 = j;
var G__32900 = k;
var G__32901 = l;
var G__32902 = m;
var G__32903 = n;
var G__32904 = o;
var G__32905 = p;
var G__32906 = q;
var G__32907 = r;
var G__32908 = s;
var G__32909 = t;
var G__32910 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32889,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910) : cljs.core.apply.call(null,G__32889,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__32915 = o;
if(G__32915){
var bit__24225__auto__ = (G__32915.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24225__auto__) || (G__32915.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__32915.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32915);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32915);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__23532__auto__ = !((o == null));
if(and__23532__auto__){
var G__32919 = o;
if(G__32919){
var bit__24225__auto__ = (G__32919.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24225__auto__) || (G__32919.cljs$core$IMeta$)){
return true;
} else {
if((!G__32919.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32919);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32919);
}
} else {
return and__23532__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__32922__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__32923 = ret;
var G__32924 = cljs.core.first(ks);
var G__32925 = cljs.core.next(ks);
coll = G__32923;
k = G__32924;
ks = G__32925;
continue;
} else {
return ret;
}
}
break;
}
};
var G__32922 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32926__i = 0, G__32926__a = new Array(arguments.length -  2);
while (G__32926__i < G__32926__a.length) {G__32926__a[G__32926__i] = arguments[G__32926__i + 2]; ++G__32926__i;}
  ks = new cljs.core.IndexedSeq(G__32926__a,0);
} 
return G__32922__delegate.call(this,coll,k,ks);};
G__32922.cljs$lang$maxFixedArity = 2;
G__32922.cljs$lang$applyTo = (function (arglist__32927){
var coll = cljs.core.first(arglist__32927);
arglist__32927 = cljs.core.next(arglist__32927);
var k = cljs.core.first(arglist__32927);
var ks = cljs.core.rest(arglist__32927);
return G__32922__delegate(coll,k,ks);
});
G__32922.cljs$core$IFn$_invoke$arity$variadic = G__32922__delegate;
return G__32922;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__32928 = null;
if (arguments.length > 2) {
var G__32929__i = 0, G__32929__a = new Array(arguments.length -  2);
while (G__32929__i < G__32929__a.length) {G__32929__a[G__32929__i] = arguments[G__32929__i + 2]; ++G__32929__i;}
G__32928 = new cljs.core.IndexedSeq(G__32929__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__32928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32931 = x;
if(G__32931){
var bit__24225__auto__ = (G__32931.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24225__auto__) || (G__32931.cljs$core$ICollection$)){
return true;
} else {
if((!G__32931.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__32931);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__32931);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32933 = x;
if(G__32933){
var bit__24225__auto__ = (G__32933.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24225__auto__) || (G__32933.cljs$core$ISet$)){
return true;
} else {
if((!G__32933.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__32933);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__32933);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__32935 = x;
if(G__32935){
var bit__24225__auto__ = (G__32935.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24225__auto__) || (G__32935.cljs$core$IAssociative$)){
return true;
} else {
if((!G__32935.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__32935);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__32935);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__32937 = x;
if(G__32937){
var bit__24225__auto__ = (G__32937.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24225__auto__) || (G__32937.cljs$core$ISequential$)){
return true;
} else {
if((!G__32937.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__32937);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__32937);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__32939 = x;
if(G__32939){
var bit__24225__auto__ = (G__32939.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24225__auto__) || (G__32939.cljs$core$ISorted$)){
return true;
} else {
if((!G__32939.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__32939);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__32939);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__32941 = x;
if(G__32941){
var bit__24225__auto__ = (G__32941.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24225__auto__) || (G__32941.cljs$core$IReduce$)){
return true;
} else {
if((!G__32941.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__32941);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__32941);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32943 = x;
if(G__32943){
var bit__24225__auto__ = (G__32943.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24225__auto__) || (G__32943.cljs$core$IMap$)){
return true;
} else {
if((!G__32943.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__32943);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__32943);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__32945 = x;
if(G__32945){
var bit__24225__auto__ = (G__32945.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24225__auto__) || (G__32945.cljs$core$IVector$)){
return true;
} else {
if((!G__32945.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__32945);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__32945);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__32947 = x;
if(G__32947){
var bit__24218__auto__ = (G__32947.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24218__auto__) || (G__32947.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj32953 = {};
return obj32953;
});
var js_obj__1 = (function() { 
var G__32956__delegate = function (keyvals){
var G__32954 = goog.object.create;
var G__32955 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__32954,G__32955) : cljs.core.apply.call(null,G__32954,G__32955));
};
var G__32956 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__32957__i = 0, G__32957__a = new Array(arguments.length -  0);
while (G__32957__i < G__32957__a.length) {G__32957__a[G__32957__i] = arguments[G__32957__i + 0]; ++G__32957__i;}
  keyvals = new cljs.core.IndexedSeq(G__32957__a,0);
} 
return G__32956__delegate.call(this,keyvals);};
G__32956.cljs$lang$maxFixedArity = 0;
G__32956.cljs$lang$applyTo = (function (arglist__32958){
var keyvals = cljs.core.seq(arglist__32958);
return G__32956__delegate(keyvals);
});
G__32956.cljs$core$IFn$_invoke$arity$variadic = G__32956__delegate;
return G__32956;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__32959 = null;
if (arguments.length > 0) {
var G__32960__i = 0, G__32960__a = new Array(arguments.length -  0);
while (G__32960__i < G__32960__a.length) {G__32960__a[G__32960__i] = arguments[G__32960__i + 0]; ++G__32960__i;}
G__32959 = new cljs.core.IndexedSeq(G__32960__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__32959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__32963_32965 = obj;
var G__32964_32966 = ((function (G__32963_32965,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__32963_32965,keys))
;
goog.object.forEach(G__32963_32965,G__32964_32966);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__32967 = (i__$1 + (1));
var G__32968 = (j__$1 + (1));
var G__32969 = (len__$1 - (1));
i__$1 = G__32967;
j__$1 = G__32968;
len__$1 = G__32969;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__32970 = (i__$1 - (1));
var G__32971 = (j__$1 - (1));
var G__32972 = (len__$1 - (1));
i__$1 = G__32970;
j__$1 = G__32971;
len__$1 = G__32972;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj32974 = {};
return obj32974;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__32976 = s;
if(G__32976){
var bit__24225__auto__ = (G__32976.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24225__auto__) || (G__32976.cljs$core$ISeq$)){
return true;
} else {
if((!G__32976.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32976);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32976);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__32978 = s;
if(G__32978){
var bit__24225__auto__ = (G__32978.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24225__auto__) || (G__32978.cljs$core$ISeqable$)){
return true;
} else {
if((!G__32978.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__32978);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__32978);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__23544__auto__ = cljs.core.fn_QMARK_(f);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var G__32982 = f;
if(G__32982){
var bit__24225__auto__ = (G__32982.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24225__auto__) || (G__32982.cljs$core$IFn$)){
return true;
} else {
if((!G__32982.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__32982);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__32982);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__32995 = n;
return isNaN(G__32995);
})())) && (!((n === Infinity))) && (((function (){var G__32996 = n;
return parseFloat(G__32996);
})() === (function (){var G__32997 = n;
var G__32998 = (10);
return parseInt(G__32997,G__32998);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__32999__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__33000 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__33001 = etc;
s = G__33000;
xs = G__33001;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__32999 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33002__i = 0, G__33002__a = new Array(arguments.length -  2);
while (G__33002__i < G__33002__a.length) {G__33002__a[G__33002__i] = arguments[G__33002__i + 2]; ++G__33002__i;}
  more = new cljs.core.IndexedSeq(G__33002__a,0);
} 
return G__32999__delegate.call(this,x,y,more);};
G__32999.cljs$lang$maxFixedArity = 2;
G__32999.cljs$lang$applyTo = (function (arglist__33003){
var x = cljs.core.first(arglist__33003);
arglist__33003 = cljs.core.next(arglist__33003);
var y = cljs.core.first(arglist__33003);
var more = cljs.core.rest(arglist__33003);
return G__32999__delegate(x,y,more);
});
G__32999.cljs$core$IFn$_invoke$arity$variadic = G__32999__delegate;
return G__32999;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__33004 = null;
if (arguments.length > 2) {
var G__33005__i = 0, G__33005__a = new Array(arguments.length -  2);
while (G__33005__i < G__33005__a.length) {G__33005__a[G__33005__i] = arguments[G__33005__i + 2]; ++G__33005__i;}
G__33004 = new cljs.core.IndexedSeq(G__33005__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__33009 = x;
if(G__33009){
var bit__24218__auto__ = (G__33009.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24218__auto__) || (G__33009.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__33010 = x;
var G__33011 = y;
return goog.array.defaultCompare(G__33010,G__33011);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__33016 = xs;
var G__33017 = ys;
var G__33018 = len;
var G__33019 = (n + (1));
xs = G__33016;
ys = G__33017;
len = G__33018;
n = G__33019;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__33024 = x;
var G__33025 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33024,G__33025) : f.call(null,G__33024,G__33025));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__33026 = y;
var G__33027 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33026,G__33027) : f.call(null,G__33026,G__33027));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__33033 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__33033) : cljs.core.to_array.call(null,G__33033));
})();
var G__33034_33036 = a;
var G__33035_33037 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__33034_33036,G__33035_33037);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__33043 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__33043) : keyfn.call(null,G__33043));
})(),(function (){var G__33044 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__33044) : keyfn.call(null,G__33044));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__33050 = f;
var G__33051 = cljs.core.first(s);
var G__33052 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__33050,G__33051,G__33052) : cljs.core.reduce.call(null,G__33050,G__33051,G__33052));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__33053 = val__$1;
var G__33054 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33053,G__33054) : f.call(null,G__33053,G__33054));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__33055 = nval;
var G__33056 = cljs.core.next(coll__$1);
val__$1 = G__33055;
coll__$1 = G__33056;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__33060 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__33060) : cljs.core.to_array.call(null,G__33060));
})();
var G__33061_33063 = a;
goog.array.shuffle(G__33061_33063);

var G__33062 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__33062) : cljs.core.vec.call(null,G__33062));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__33066 = coll;
if(G__33066){
var bit__24218__auto__ = (G__33066.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24218__auto__) || (G__33066.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__33067 = coll;
if(G__33067){
var bit__24218__auto__ = (G__33067.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24218__auto__) || (G__33067.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__33076 = null;
var G__33076__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__33076__1 = (function (x){
var G__33073 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__33073) : cf.call(null,G__33073));
});
var G__33076__2 = (function (x,y){
var G__33074 = x;
var G__33075 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33074,G__33075) : f.call(null,G__33074,G__33075));
});
G__33076 = function(x,y){
switch(arguments.length){
case 0:
return G__33076__0.call(this);
case 1:
return G__33076__1.call(this,x);
case 2:
return G__33076__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33076.cljs$core$IFn$_invoke$arity$0 = G__33076__0;
G__33076.cljs$core$IFn$_invoke$arity$1 = G__33076__1;
G__33076.cljs$core$IFn$_invoke$arity$2 = G__33076__2;
return G__33076;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__33083 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33083) : xform.call(null,G__33083));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__33084 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__33084) : f__$1.call(null,G__33084));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__33085__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__33085 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33086__i = 0, G__33086__a = new Array(arguments.length -  2);
while (G__33086__i < G__33086__a.length) {G__33086__a[G__33086__i] = arguments[G__33086__i + 2]; ++G__33086__i;}
  more = new cljs.core.IndexedSeq(G__33086__a,0);
} 
return G__33085__delegate.call(this,x,y,more);};
G__33085.cljs$lang$maxFixedArity = 2;
G__33085.cljs$lang$applyTo = (function (arglist__33087){
var x = cljs.core.first(arglist__33087);
arglist__33087 = cljs.core.next(arglist__33087);
var y = cljs.core.first(arglist__33087);
var more = cljs.core.rest(arglist__33087);
return G__33085__delegate(x,y,more);
});
G__33085.cljs$core$IFn$_invoke$arity$variadic = G__33085__delegate;
return G__33085;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__33088 = null;
if (arguments.length > 2) {
var G__33089__i = 0, G__33089__a = new Array(arguments.length -  2);
while (G__33089__i < G__33089__a.length) {G__33089__a[G__33089__i] = arguments[G__33089__i + 2]; ++G__33089__i;}
G__33088 = new cljs.core.IndexedSeq(G__33089__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33088);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__33090__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__33090 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33091__i = 0, G__33091__a = new Array(arguments.length -  2);
while (G__33091__i < G__33091__a.length) {G__33091__a[G__33091__i] = arguments[G__33091__i + 2]; ++G__33091__i;}
  more = new cljs.core.IndexedSeq(G__33091__a,0);
} 
return G__33090__delegate.call(this,x,y,more);};
G__33090.cljs$lang$maxFixedArity = 2;
G__33090.cljs$lang$applyTo = (function (arglist__33092){
var x = cljs.core.first(arglist__33092);
arglist__33092 = cljs.core.next(arglist__33092);
var y = cljs.core.first(arglist__33092);
var more = cljs.core.rest(arglist__33092);
return G__33090__delegate(x,y,more);
});
G__33090.cljs$core$IFn$_invoke$arity$variadic = G__33090__delegate;
return G__33090;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__33093 = null;
if (arguments.length > 2) {
var G__33094__i = 0, G__33094__a = new Array(arguments.length -  2);
while (G__33094__i < G__33094__a.length) {G__33094__a[G__33094__i] = arguments[G__33094__i + 2]; ++G__33094__i;}
G__33093 = new cljs.core.IndexedSeq(G__33094__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__33095__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__33095 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33096__i = 0, G__33096__a = new Array(arguments.length -  2);
while (G__33096__i < G__33096__a.length) {G__33096__a[G__33096__i] = arguments[G__33096__i + 2]; ++G__33096__i;}
  more = new cljs.core.IndexedSeq(G__33096__a,0);
} 
return G__33095__delegate.call(this,x,y,more);};
G__33095.cljs$lang$maxFixedArity = 2;
G__33095.cljs$lang$applyTo = (function (arglist__33097){
var x = cljs.core.first(arglist__33097);
arglist__33097 = cljs.core.next(arglist__33097);
var y = cljs.core.first(arglist__33097);
var more = cljs.core.rest(arglist__33097);
return G__33095__delegate(x,y,more);
});
G__33095.cljs$core$IFn$_invoke$arity$variadic = G__33095__delegate;
return G__33095;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__33098 = null;
if (arguments.length > 2) {
var G__33099__i = 0, G__33099__a = new Array(arguments.length -  2);
while (G__33099__i < G__33099__a.length) {G__33099__a[G__33099__i] = arguments[G__33099__i + 2]; ++G__33099__i;}
G__33098 = new cljs.core.IndexedSeq(G__33099__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33098);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__33104__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__33104 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33105__i = 0, G__33105__a = new Array(arguments.length -  2);
while (G__33105__i < G__33105__a.length) {G__33105__a[G__33105__i] = arguments[G__33105__i + 2]; ++G__33105__i;}
  more = new cljs.core.IndexedSeq(G__33105__a,0);
} 
return G__33104__delegate.call(this,x,y,more);};
G__33104.cljs$lang$maxFixedArity = 2;
G__33104.cljs$lang$applyTo = (function (arglist__33106){
var x = cljs.core.first(arglist__33106);
arglist__33106 = cljs.core.next(arglist__33106);
var y = cljs.core.first(arglist__33106);
var more = cljs.core.rest(arglist__33106);
return G__33104__delegate(x,y,more);
});
G__33104.cljs$core$IFn$_invoke$arity$variadic = G__33104__delegate;
return G__33104;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__33107 = null;
if (arguments.length > 2) {
var G__33108__i = 0, G__33108__a = new Array(arguments.length -  2);
while (G__33108__i < G__33108__a.length) {G__33108__a[G__33108__i] = arguments[G__33108__i + 2]; ++G__33108__i;}
G__33107 = new cljs.core.IndexedSeq(G__33108__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33107);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__33109__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__33110 = y;
var G__33111 = cljs.core.first(more);
var G__33112 = cljs.core.next(more);
x = G__33110;
y = G__33111;
more = G__33112;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33109 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33113__i = 0, G__33113__a = new Array(arguments.length -  2);
while (G__33113__i < G__33113__a.length) {G__33113__a[G__33113__i] = arguments[G__33113__i + 2]; ++G__33113__i;}
  more = new cljs.core.IndexedSeq(G__33113__a,0);
} 
return G__33109__delegate.call(this,x,y,more);};
G__33109.cljs$lang$maxFixedArity = 2;
G__33109.cljs$lang$applyTo = (function (arglist__33114){
var x = cljs.core.first(arglist__33114);
arglist__33114 = cljs.core.next(arglist__33114);
var y = cljs.core.first(arglist__33114);
var more = cljs.core.rest(arglist__33114);
return G__33109__delegate(x,y,more);
});
G__33109.cljs$core$IFn$_invoke$arity$variadic = G__33109__delegate;
return G__33109;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__33115 = null;
if (arguments.length > 2) {
var G__33116__i = 0, G__33116__a = new Array(arguments.length -  2);
while (G__33116__i < G__33116__a.length) {G__33116__a[G__33116__i] = arguments[G__33116__i + 2]; ++G__33116__i;}
G__33115 = new cljs.core.IndexedSeq(G__33116__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__33117__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__33118 = y;
var G__33119 = cljs.core.first(more);
var G__33120 = cljs.core.next(more);
x = G__33118;
y = G__33119;
more = G__33120;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33117 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33121__i = 0, G__33121__a = new Array(arguments.length -  2);
while (G__33121__i < G__33121__a.length) {G__33121__a[G__33121__i] = arguments[G__33121__i + 2]; ++G__33121__i;}
  more = new cljs.core.IndexedSeq(G__33121__a,0);
} 
return G__33117__delegate.call(this,x,y,more);};
G__33117.cljs$lang$maxFixedArity = 2;
G__33117.cljs$lang$applyTo = (function (arglist__33122){
var x = cljs.core.first(arglist__33122);
arglist__33122 = cljs.core.next(arglist__33122);
var y = cljs.core.first(arglist__33122);
var more = cljs.core.rest(arglist__33122);
return G__33117__delegate(x,y,more);
});
G__33117.cljs$core$IFn$_invoke$arity$variadic = G__33117__delegate;
return G__33117;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__33123 = null;
if (arguments.length > 2) {
var G__33124__i = 0, G__33124__a = new Array(arguments.length -  2);
while (G__33124__i < G__33124__a.length) {G__33124__a[G__33124__i] = arguments[G__33124__i + 2]; ++G__33124__i;}
G__33123 = new cljs.core.IndexedSeq(G__33124__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33123);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__33125__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__33126 = y;
var G__33127 = cljs.core.first(more);
var G__33128 = cljs.core.next(more);
x = G__33126;
y = G__33127;
more = G__33128;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33125 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33129__i = 0, G__33129__a = new Array(arguments.length -  2);
while (G__33129__i < G__33129__a.length) {G__33129__a[G__33129__i] = arguments[G__33129__i + 2]; ++G__33129__i;}
  more = new cljs.core.IndexedSeq(G__33129__a,0);
} 
return G__33125__delegate.call(this,x,y,more);};
G__33125.cljs$lang$maxFixedArity = 2;
G__33125.cljs$lang$applyTo = (function (arglist__33130){
var x = cljs.core.first(arglist__33130);
arglist__33130 = cljs.core.next(arglist__33130);
var y = cljs.core.first(arglist__33130);
var more = cljs.core.rest(arglist__33130);
return G__33125__delegate(x,y,more);
});
G__33125.cljs$core$IFn$_invoke$arity$variadic = G__33125__delegate;
return G__33125;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__33131 = null;
if (arguments.length > 2) {
var G__33132__i = 0, G__33132__a = new Array(arguments.length -  2);
while (G__33132__i < G__33132__a.length) {G__33132__a[G__33132__i] = arguments[G__33132__i + 2]; ++G__33132__i;}
G__33131 = new cljs.core.IndexedSeq(G__33132__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33131);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__33133__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__33134 = y;
var G__33135 = cljs.core.first(more);
var G__33136 = cljs.core.next(more);
x = G__33134;
y = G__33135;
more = G__33136;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33133 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33137__i = 0, G__33137__a = new Array(arguments.length -  2);
while (G__33137__i < G__33137__a.length) {G__33137__a[G__33137__i] = arguments[G__33137__i + 2]; ++G__33137__i;}
  more = new cljs.core.IndexedSeq(G__33137__a,0);
} 
return G__33133__delegate.call(this,x,y,more);};
G__33133.cljs$lang$maxFixedArity = 2;
G__33133.cljs$lang$applyTo = (function (arglist__33138){
var x = cljs.core.first(arglist__33138);
arglist__33138 = cljs.core.next(arglist__33138);
var y = cljs.core.first(arglist__33138);
var more = cljs.core.rest(arglist__33138);
return G__33133__delegate(x,y,more);
});
G__33133.cljs$core$IFn$_invoke$arity$variadic = G__33133__delegate;
return G__33133;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__33139 = null;
if (arguments.length > 2) {
var G__33140__i = 0, G__33140__a = new Array(arguments.length -  2);
while (G__33140__i < G__33140__a.length) {G__33140__a[G__33140__i] = arguments[G__33140__i + 2]; ++G__33140__i;}
G__33139 = new cljs.core.IndexedSeq(G__33140__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__23861__auto__ = x;
var y__23862__auto__ = y;
return ((x__23861__auto__ > y__23862__auto__) ? x__23861__auto__ : y__23862__auto__);
});
var max__3 = (function() { 
var G__33141__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__23861__auto__ = x;
var y__23862__auto__ = y;
return ((x__23861__auto__ > y__23862__auto__) ? x__23861__auto__ : y__23862__auto__);
})(),more);
};
var G__33141 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33142__i = 0, G__33142__a = new Array(arguments.length -  2);
while (G__33142__i < G__33142__a.length) {G__33142__a[G__33142__i] = arguments[G__33142__i + 2]; ++G__33142__i;}
  more = new cljs.core.IndexedSeq(G__33142__a,0);
} 
return G__33141__delegate.call(this,x,y,more);};
G__33141.cljs$lang$maxFixedArity = 2;
G__33141.cljs$lang$applyTo = (function (arglist__33143){
var x = cljs.core.first(arglist__33143);
arglist__33143 = cljs.core.next(arglist__33143);
var y = cljs.core.first(arglist__33143);
var more = cljs.core.rest(arglist__33143);
return G__33141__delegate(x,y,more);
});
G__33141.cljs$core$IFn$_invoke$arity$variadic = G__33141__delegate;
return G__33141;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__33144 = null;
if (arguments.length > 2) {
var G__33145__i = 0, G__33145__a = new Array(arguments.length -  2);
while (G__33145__i < G__33145__a.length) {G__33145__a[G__33145__i] = arguments[G__33145__i + 2]; ++G__33145__i;}
G__33144 = new cljs.core.IndexedSeq(G__33145__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33144);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__23868__auto__ = x;
var y__23869__auto__ = y;
return ((x__23868__auto__ < y__23869__auto__) ? x__23868__auto__ : y__23869__auto__);
});
var min__3 = (function() { 
var G__33146__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__23868__auto__ = x;
var y__23869__auto__ = y;
return ((x__23868__auto__ < y__23869__auto__) ? x__23868__auto__ : y__23869__auto__);
})(),more);
};
var G__33146 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33147__i = 0, G__33147__a = new Array(arguments.length -  2);
while (G__33147__i < G__33147__a.length) {G__33147__a[G__33147__i] = arguments[G__33147__i + 2]; ++G__33147__i;}
  more = new cljs.core.IndexedSeq(G__33147__a,0);
} 
return G__33146__delegate.call(this,x,y,more);};
G__33146.cljs$lang$maxFixedArity = 2;
G__33146.cljs$lang$applyTo = (function (arglist__33148){
var x = cljs.core.first(arglist__33148);
arglist__33148 = cljs.core.next(arglist__33148);
var y = cljs.core.first(arglist__33148);
var more = cljs.core.rest(arglist__33148);
return G__33146__delegate(x,y,more);
});
G__33146.cljs$core$IFn$_invoke$arity$variadic = G__33146__delegate;
return G__33146;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__33149 = null;
if (arguments.length > 2) {
var G__33150__i = 0, G__33150__a = new Array(arguments.length -  2);
while (G__33150__i < G__33150__a.length) {G__33150__a[G__33150__i] = arguments[G__33150__i + 2]; ++G__33150__i;}
G__33149 = new cljs.core.IndexedSeq(G__33150__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33149);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__33151__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__33151 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33152__i = 0, G__33152__a = new Array(arguments.length -  2);
while (G__33152__i < G__33152__a.length) {G__33152__a[G__33152__i] = arguments[G__33152__i + 2]; ++G__33152__i;}
  more = new cljs.core.IndexedSeq(G__33152__a,0);
} 
return G__33151__delegate.call(this,x,y,more);};
G__33151.cljs$lang$maxFixedArity = 2;
G__33151.cljs$lang$applyTo = (function (arglist__33153){
var x = cljs.core.first(arglist__33153);
arglist__33153 = cljs.core.next(arglist__33153);
var y = cljs.core.first(arglist__33153);
var more = cljs.core.rest(arglist__33153);
return G__33151__delegate(x,y,more);
});
G__33151.cljs$core$IFn$_invoke$arity$variadic = G__33151__delegate;
return G__33151;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__33154 = null;
if (arguments.length > 2) {
var G__33155__i = 0, G__33155__a = new Array(arguments.length -  2);
while (G__33155__i < G__33155__a.length) {G__33155__a[G__33155__i] = arguments[G__33155__i + 2]; ++G__33155__i;}
G__33154 = new cljs.core.IndexedSeq(G__33155__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33154);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__33156__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__33156 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33157__i = 0, G__33157__a = new Array(arguments.length -  2);
while (G__33157__i < G__33157__a.length) {G__33157__a[G__33157__i] = arguments[G__33157__i + 2]; ++G__33157__i;}
  more = new cljs.core.IndexedSeq(G__33157__a,0);
} 
return G__33156__delegate.call(this,x,y,more);};
G__33156.cljs$lang$maxFixedArity = 2;
G__33156.cljs$lang$applyTo = (function (arglist__33158){
var x = cljs.core.first(arglist__33158);
arglist__33158 = cljs.core.next(arglist__33158);
var y = cljs.core.first(arglist__33158);
var more = cljs.core.rest(arglist__33158);
return G__33156__delegate(x,y,more);
});
G__33156.cljs$core$IFn$_invoke$arity$variadic = G__33156__delegate;
return G__33156;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__33159 = null;
if (arguments.length > 2) {
var G__33160__i = 0, G__33160__a = new Array(arguments.length -  2);
while (G__33160__i < G__33160__a.length) {G__33160__a[G__33160__i] = arguments[G__33160__i + 2]; ++G__33160__i;}
G__33159 = new cljs.core.IndexedSeq(G__33160__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33159);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__33165__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__33165 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33166__i = 0, G__33166__a = new Array(arguments.length -  2);
while (G__33166__i < G__33166__a.length) {G__33166__a[G__33166__i] = arguments[G__33166__i + 2]; ++G__33166__i;}
  more = new cljs.core.IndexedSeq(G__33166__a,0);
} 
return G__33165__delegate.call(this,x,y,more);};
G__33165.cljs$lang$maxFixedArity = 2;
G__33165.cljs$lang$applyTo = (function (arglist__33167){
var x = cljs.core.first(arglist__33167);
arglist__33167 = cljs.core.next(arglist__33167);
var y = cljs.core.first(arglist__33167);
var more = cljs.core.rest(arglist__33167);
return G__33165__delegate(x,y,more);
});
G__33165.cljs$core$IFn$_invoke$arity$variadic = G__33165__delegate;
return G__33165;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__33168 = null;
if (arguments.length > 2) {
var G__33169__i = 0, G__33169__a = new Array(arguments.length -  2);
while (G__33169__i < G__33169__a.length) {G__33169__a[G__33169__i] = arguments[G__33169__i + 2]; ++G__33169__i;}
G__33168 = new cljs.core.IndexedSeq(G__33169__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33168);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__33170__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__33170 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33171__i = 0, G__33171__a = new Array(arguments.length -  2);
while (G__33171__i < G__33171__a.length) {G__33171__a[G__33171__i] = arguments[G__33171__i + 2]; ++G__33171__i;}
  more = new cljs.core.IndexedSeq(G__33171__a,0);
} 
return G__33170__delegate.call(this,x,y,more);};
G__33170.cljs$lang$maxFixedArity = 2;
G__33170.cljs$lang$applyTo = (function (arglist__33172){
var x = cljs.core.first(arglist__33172);
arglist__33172 = cljs.core.next(arglist__33172);
var y = cljs.core.first(arglist__33172);
var more = cljs.core.rest(arglist__33172);
return G__33170__delegate(x,y,more);
});
G__33170.cljs$core$IFn$_invoke$arity$variadic = G__33170__delegate;
return G__33170;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__33173 = null;
if (arguments.length > 2) {
var G__33174__i = 0, G__33174__a = new Array(arguments.length -  2);
while (G__33174__i < G__33174__a.length) {G__33174__a[G__33174__i] = arguments[G__33174__i + 2]; ++G__33174__i;}
G__33173 = new cljs.core.IndexedSeq(G__33174__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__33175__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__33175 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33176__i = 0, G__33176__a = new Array(arguments.length -  2);
while (G__33176__i < G__33176__a.length) {G__33176__a[G__33176__i] = arguments[G__33176__i + 2]; ++G__33176__i;}
  more = new cljs.core.IndexedSeq(G__33176__a,0);
} 
return G__33175__delegate.call(this,x,y,more);};
G__33175.cljs$lang$maxFixedArity = 2;
G__33175.cljs$lang$applyTo = (function (arglist__33177){
var x = cljs.core.first(arglist__33177);
arglist__33177 = cljs.core.next(arglist__33177);
var y = cljs.core.first(arglist__33177);
var more = cljs.core.rest(arglist__33177);
return G__33175__delegate(x,y,more);
});
G__33175.cljs$core$IFn$_invoke$arity$variadic = G__33175__delegate;
return G__33175;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__33178 = null;
if (arguments.length > 2) {
var G__33179__i = 0, G__33179__a = new Array(arguments.length -  2);
while (G__33179__i < G__33179__a.length) {G__33179__a[G__33179__i] = arguments[G__33179__i + 2]; ++G__33179__i;}
G__33178 = new cljs.core.IndexedSeq(G__33179__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__33182 = x;
var G__33183 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__33182,G__33183) : cljs.core.mod.call(null,G__33182,G__33183));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__33184__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__33184 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33185__i = 0, G__33185__a = new Array(arguments.length -  2);
while (G__33185__i < G__33185__a.length) {G__33185__a[G__33185__i] = arguments[G__33185__i + 2]; ++G__33185__i;}
  more = new cljs.core.IndexedSeq(G__33185__a,0);
} 
return G__33184__delegate.call(this,x,y,more);};
G__33184.cljs$lang$maxFixedArity = 2;
G__33184.cljs$lang$applyTo = (function (arglist__33186){
var x = cljs.core.first(arglist__33186);
arglist__33186 = cljs.core.next(arglist__33186);
var y = cljs.core.first(arglist__33186);
var more = cljs.core.rest(arglist__33186);
return G__33184__delegate(x,y,more);
});
G__33184.cljs$core$IFn$_invoke$arity$variadic = G__33184__delegate;
return G__33184;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__33187 = null;
if (arguments.length > 2) {
var G__33188__i = 0, G__33188__a = new Array(arguments.length -  2);
while (G__33188__i < G__33188__a.length) {G__33188__a[G__33188__i] = arguments[G__33188__i + 2]; ++G__33188__i;}
G__33187 = new cljs.core.IndexedSeq(G__33188__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__33189__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__33189 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33190__i = 0, G__33190__a = new Array(arguments.length -  2);
while (G__33190__i < G__33190__a.length) {G__33190__a[G__33190__i] = arguments[G__33190__i + 2]; ++G__33190__i;}
  more = new cljs.core.IndexedSeq(G__33190__a,0);
} 
return G__33189__delegate.call(this,x,y,more);};
G__33189.cljs$lang$maxFixedArity = 2;
G__33189.cljs$lang$applyTo = (function (arglist__33191){
var x = cljs.core.first(arglist__33191);
arglist__33191 = cljs.core.next(arglist__33191);
var y = cljs.core.first(arglist__33191);
var more = cljs.core.rest(arglist__33191);
return G__33189__delegate(x,y,more);
});
G__33189.cljs$core$IFn$_invoke$arity$variadic = G__33189__delegate;
return G__33189;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__33192 = null;
if (arguments.length > 2) {
var G__33193__i = 0, G__33193__a = new Array(arguments.length -  2);
while (G__33193__i < G__33193__a.length) {G__33193__a[G__33193__i] = arguments[G__33193__i + 2]; ++G__33193__i;}
G__33192 = new cljs.core.IndexedSeq(G__33193__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33192);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__33196 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__33196) : Math.floor.call(null,G__33196));
} else {
var G__33197 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__33197) : Math.ceil.call(null,G__33197));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__33198__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__33198 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33199__i = 0, G__33199__a = new Array(arguments.length -  2);
while (G__33199__i < G__33199__a.length) {G__33199__a[G__33199__i] = arguments[G__33199__i + 2]; ++G__33199__i;}
  more = new cljs.core.IndexedSeq(G__33199__a,0);
} 
return G__33198__delegate.call(this,x,y,more);};
G__33198.cljs$lang$maxFixedArity = 2;
G__33198.cljs$lang$applyTo = (function (arglist__33200){
var x = cljs.core.first(arglist__33200);
arglist__33200 = cljs.core.next(arglist__33200);
var y = cljs.core.first(arglist__33200);
var more = cljs.core.rest(arglist__33200);
return G__33198__delegate(x,y,more);
});
G__33198.cljs$core$IFn$_invoke$arity$variadic = G__33198__delegate;
return G__33198;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__33201 = null;
if (arguments.length > 2) {
var G__33202__i = 0, G__33202__a = new Array(arguments.length -  2);
while (G__33202__i < G__33202__a.length) {G__33202__a[G__33202__i] = arguments[G__33202__i + 2]; ++G__33202__i;}
G__33201 = new cljs.core.IndexedSeq(G__33202__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__33203__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__33203 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33204__i = 0, G__33204__a = new Array(arguments.length -  2);
while (G__33204__i < G__33204__a.length) {G__33204__a[G__33204__i] = arguments[G__33204__i + 2]; ++G__33204__i;}
  more = new cljs.core.IndexedSeq(G__33204__a,0);
} 
return G__33203__delegate.call(this,x,y,more);};
G__33203.cljs$lang$maxFixedArity = 2;
G__33203.cljs$lang$applyTo = (function (arglist__33205){
var x = cljs.core.first(arglist__33205);
arglist__33205 = cljs.core.next(arglist__33205);
var y = cljs.core.first(arglist__33205);
var more = cljs.core.rest(arglist__33205);
return G__33203__delegate(x,y,more);
});
G__33203.cljs$core$IFn$_invoke$arity$variadic = G__33203__delegate;
return G__33203;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__33206 = null;
if (arguments.length > 2) {
var G__33207__i = 0, G__33207__a = new Array(arguments.length -  2);
while (G__33207__i < G__33207__a.length) {G__33207__a[G__33207__i] = arguments[G__33207__i + 2]; ++G__33207__i;}
G__33206 = new cljs.core.IndexedSeq(G__33207__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__33208__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__33208 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33209__i = 0, G__33209__a = new Array(arguments.length -  2);
while (G__33209__i < G__33209__a.length) {G__33209__a[G__33209__i] = arguments[G__33209__i + 2]; ++G__33209__i;}
  more = new cljs.core.IndexedSeq(G__33209__a,0);
} 
return G__33208__delegate.call(this,x,y,more);};
G__33208.cljs$lang$maxFixedArity = 2;
G__33208.cljs$lang$applyTo = (function (arglist__33210){
var x = cljs.core.first(arglist__33210);
arglist__33210 = cljs.core.next(arglist__33210);
var y = cljs.core.first(arglist__33210);
var more = cljs.core.rest(arglist__33210);
return G__33208__delegate(x,y,more);
});
G__33208.cljs$core$IFn$_invoke$arity$variadic = G__33208__delegate;
return G__33208;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__33211 = null;
if (arguments.length > 2) {
var G__33212__i = 0, G__33212__a = new Array(arguments.length -  2);
while (G__33212__i < G__33212__a.length) {G__33212__a[G__33212__i] = arguments[G__33212__i + 2]; ++G__33212__i;}
G__33211 = new cljs.core.IndexedSeq(G__33212__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__33213__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__33213 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33214__i = 0, G__33214__a = new Array(arguments.length -  2);
while (G__33214__i < G__33214__a.length) {G__33214__a[G__33214__i] = arguments[G__33214__i + 2]; ++G__33214__i;}
  more = new cljs.core.IndexedSeq(G__33214__a,0);
} 
return G__33213__delegate.call(this,x,y,more);};
G__33213.cljs$lang$maxFixedArity = 2;
G__33213.cljs$lang$applyTo = (function (arglist__33215){
var x = cljs.core.first(arglist__33215);
arglist__33215 = cljs.core.next(arglist__33215);
var y = cljs.core.first(arglist__33215);
var more = cljs.core.rest(arglist__33215);
return G__33213__delegate(x,y,more);
});
G__33213.cljs$core$IFn$_invoke$arity$variadic = G__33213__delegate;
return G__33213;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__33216 = null;
if (arguments.length > 2) {
var G__33217__i = 0, G__33217__a = new Array(arguments.length -  2);
while (G__33217__i < G__33217__a.length) {G__33217__a[G__33217__i] = arguments[G__33217__i + 2]; ++G__33217__i;}
G__33216 = new cljs.core.IndexedSeq(G__33217__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__33222__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__33223 = y;
var G__33224 = cljs.core.first(more);
var G__33225 = cljs.core.next(more);
x = G__33223;
y = G__33224;
more = G__33225;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__33222 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33226__i = 0, G__33226__a = new Array(arguments.length -  2);
while (G__33226__i < G__33226__a.length) {G__33226__a[G__33226__i] = arguments[G__33226__i + 2]; ++G__33226__i;}
  more = new cljs.core.IndexedSeq(G__33226__a,0);
} 
return G__33222__delegate.call(this,x,y,more);};
G__33222.cljs$lang$maxFixedArity = 2;
G__33222.cljs$lang$applyTo = (function (arglist__33227){
var x = cljs.core.first(arglist__33227);
arglist__33227 = cljs.core.next(arglist__33227);
var y = cljs.core.first(arglist__33227);
var more = cljs.core.rest(arglist__33227);
return G__33222__delegate(x,y,more);
});
G__33222.cljs$core$IFn$_invoke$arity$variadic = G__33222__delegate;
return G__33222;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__33228 = null;
if (arguments.length > 2) {
var G__33229__i = 0, G__33229__a = new Array(arguments.length -  2);
while (G__33229__i < G__33229__a.length) {G__33229__a[G__33229__i] = arguments[G__33229__i + 2]; ++G__33229__i;}
G__33228 = new cljs.core.IndexedSeq(G__33229__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__33230 = (n__$1 - (1));
var G__33231 = cljs.core.next(xs);
n__$1 = G__33230;
xs = G__33231;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__33235 = x;
return goog.string.buildString(G__33235);
}
});
var str__2 = (function() { 
var G__33236__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__33237 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__33238 = cljs.core.next(more);
sb = G__33237;
more = G__33238;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__33236 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__33239__i = 0, G__33239__a = new Array(arguments.length -  1);
while (G__33239__i < G__33239__a.length) {G__33239__a[G__33239__i] = arguments[G__33239__i + 1]; ++G__33239__i;}
  ys = new cljs.core.IndexedSeq(G__33239__a,0);
} 
return G__33236__delegate.call(this,x,ys);};
G__33236.cljs$lang$maxFixedArity = 1;
G__33236.cljs$lang$applyTo = (function (arglist__33240){
var x = cljs.core.first(arglist__33240);
var ys = cljs.core.rest(arglist__33240);
return G__33236__delegate(x,ys);
});
G__33236.cljs$core$IFn$_invoke$arity$variadic = G__33236__delegate;
return G__33236;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__33241 = null;
if (arguments.length > 1) {
var G__33242__i = 0, G__33242__a = new Array(arguments.length -  1);
while (G__33242__i < G__33242__a.length) {G__33242__a[G__33242__i] = arguments[G__33242__i + 1]; ++G__33242__i;}
G__33241 = new cljs.core.IndexedSeq(G__33242__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__33241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__33243 = cljs.core.next(xs);
var G__33244 = cljs.core.next(ys);
xs = G__33243;
ys = G__33244;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__33245 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__33246 = cljs.core.next(s);
res = G__33245;
s = G__33246;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__33251 = ((h + (cljs.core.hash((function (){var G__33249 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33249) : cljs.core.key.call(null,G__33249));
})()) ^ cljs.core.hash((function (){var G__33250 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33250) : cljs.core.val.call(null,G__33250));
})()))) % (4503599627370496));
var G__33252 = cljs.core.next(s);
h = G__33251;
s = G__33252;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__33253 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__33254 = cljs.core.next(s__$1);
h = G__33253;
s__$1 = G__33254;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__33265_33275 = cljs.core.seq(fn_map);
var chunk__33266_33276 = null;
var count__33267_33277 = (0);
var i__33268_33278 = (0);
while(true){
if((i__33268_33278 < count__33267_33277)){
var vec__33269_33279 = chunk__33266_33276.cljs$core$IIndexed$_nth$arity$2(null,i__33268_33278);
var key_name_33280 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33269_33279,(0),null);
var f_33281 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33269_33279,(1),null);
var str_name_33282 = (function (){var G__33270 = key_name_33280;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33270) : cljs.core.name.call(null,G__33270));
})();
(obj[str_name_33282] = f_33281);

var G__33283 = seq__33265_33275;
var G__33284 = chunk__33266_33276;
var G__33285 = count__33267_33277;
var G__33286 = (i__33268_33278 + (1));
seq__33265_33275 = G__33283;
chunk__33266_33276 = G__33284;
count__33267_33277 = G__33285;
i__33268_33278 = G__33286;
continue;
} else {
var temp__4126__auto___33287 = cljs.core.seq(seq__33265_33275);
if(temp__4126__auto___33287){
var seq__33265_33288__$1 = temp__4126__auto___33287;
if(cljs.core.chunked_seq_QMARK_(seq__33265_33288__$1)){
var c__24331__auto___33289 = (function (){var G__33271 = seq__33265_33288__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__33271) : cljs.core.chunk_first.call(null,G__33271));
})();
var G__33290 = (function (){var G__33272 = seq__33265_33288__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__33272) : cljs.core.chunk_rest.call(null,G__33272));
})();
var G__33291 = c__24331__auto___33289;
var G__33292 = cljs.core.count(c__24331__auto___33289);
var G__33293 = (0);
seq__33265_33275 = G__33290;
chunk__33266_33276 = G__33291;
count__33267_33277 = G__33292;
i__33268_33278 = G__33293;
continue;
} else {
var vec__33273_33294 = cljs.core.first(seq__33265_33288__$1);
var key_name_33295 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33273_33294,(0),null);
var f_33296 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33273_33294,(1),null);
var str_name_33297 = (function (){var G__33274 = key_name_33295;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33274) : cljs.core.name.call(null,G__33274));
})();
(obj[str_name_33297] = f_33296);

var G__33298 = cljs.core.next(seq__33265_33288__$1);
var G__33299 = null;
var G__33300 = (0);
var G__33301 = (0);
seq__33265_33275 = G__33298;
chunk__33266_33276 = G__33299;
count__33267_33277 = G__33300;
i__33268_33278 = G__33301;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__33303 = coll;
if(G__33303){
var bit__24225__auto__ = (G__33303.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24225__auto__) || (G__33303.cljs$core$IReversible$)){
return true;
} else {
if((!G__33303.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__33303);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__33303);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__33304 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__33304;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__33305 = (i - (1));
var G__33306 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__33305;
r = G__33306;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__33307__i = 0, G__33307__a = new Array(arguments.length -  0);
while (G__33307__i < G__33307__a.length) {G__33307__a[G__33307__i] = arguments[G__33307__i + 0]; ++G__33307__i;}
  xs = new cljs.core.IndexedSeq(G__33307__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__33308){
var xs = cljs.core.seq(arglist__33308);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__23544__auto__ = (coll == null);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var G__33312 = coll;
if(G__33312){
var bit__24218__auto__ = (G__33312.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24218__auto__) || (G__33312.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__33314 = x;
if(G__33314){
var bit__24225__auto__ = (G__33314.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24225__auto__) || (G__33314.cljs$core$IList$)){
return true;
} else {
if((!G__33314.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__33314);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__33314);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__23532__auto__ = cljs.core.not(a.ns);
if(and__23532__auto__){
return b.ns;
} else {
return and__23532__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__33321 = a.ns;
var G__33322 = b.ns;
return goog.array.defaultCompare(G__33321,G__33322);
})();
if(((0) === nsc)){
var G__33323 = a.name;
var G__33324 = b.name;
return goog.array.defaultCompare(G__33323,G__33324);
} else {
return nsc;
}
}
} else {
var G__33325 = a.name;
var G__33326 = b.name;
return goog.array.defaultCompare(G__33325,G__33326);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__23965__auto__ = self__._hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__33328 = null;
var G__33328__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__33328__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__33328 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__33328__2.call(this,self__,coll);
case 3:
return G__33328__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33328.cljs$core$IFn$_invoke$arity$2 = G__33328__2;
G__33328.cljs$core$IFn$_invoke$arity$3 = G__33328__3;
return G__33328;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args33327){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33327)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__33330 = x;
if(G__33330){
var bit__24218__auto__ = (G__33330.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24218__auto__) || (G__33330.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__33332 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__33332) : cljs.core.name.call(null,G__33332));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__33333 = ls.sval();
ls = G__33333;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__33335 = s;
if(G__33335){
var bit__24218__auto__ = (G__33335.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24218__auto__) || (G__33335.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__33336 = cljs.core.next(s__$1);
s__$1 = G__33336;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_33337 = (0);
var xs_33338 = cljs.core.seq(coll);
while(true){
if(xs_33338){
(ret[i_33337] = cljs.core.to_array(cljs.core.first(xs_33338)));

var G__33339 = (i_33337 + (1));
var G__33340 = cljs.core.next(xs_33338);
i_33337 = G__33339;
xs_33338 = G__33340;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33343 = (i + (1));
var G__33344 = cljs.core.next(s__$1);
i = G__33343;
s__$1 = G__33344;
continue;
} else {
return a;
}
break;
}
} else {
var n__24431__auto___33345 = size;
var i_33346 = (0);
while(true){
if((i_33346 < n__24431__auto___33345)){
(a[i_33346] = init_val_or_seq);

var G__33347 = (i_33346 + (1));
i_33346 = G__33347;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33350 = (i + (1));
var G__33351 = cljs.core.next(s__$1);
i = G__33350;
s__$1 = G__33351;
continue;
} else {
return a;
}
break;
}
} else {
var n__24431__auto___33352 = size;
var i_33353 = (0);
while(true){
if((i_33353 < n__24431__auto___33352)){
(a[i_33353] = init_val_or_seq);

var G__33354 = (i_33353 + (1));
i_33353 = G__33354;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33357 = (i + (1));
var G__33358 = cljs.core.next(s__$1);
i = G__33357;
s__$1 = G__33358;
continue;
} else {
return a;
}
break;
}
} else {
var n__24431__auto___33359 = size;
var i_33360 = (0);
while(true){
if((i_33360 < n__24431__auto___33359)){
(a[i_33360] = init_val_or_seq);

var G__33361 = (i_33360 + (1));
i_33360 = G__33361;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__33364 = (i + (1));
var G__33365 = cljs.core.next(s__$1);
i = G__33364;
s__$1 = G__33365;
continue;
} else {
return a;
}
break;
}
} else {
var n__24431__auto___33366 = size;
var i_33367 = (0);
while(true){
if((i_33367 < n__24431__auto___33366)){
(a[i_33367] = init_val_or_seq);

var G__33368 = (i_33367 + (1));
i_33367 = G__33368;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__33369 = cljs.core.next(s__$1);
var G__33370 = (i - (1));
var G__33371 = (sum + (1));
s__$1 = G__33369;
i = G__33370;
sum = G__33371;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__33391__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__33391 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__33392__i = 0, G__33392__a = new Array(arguments.length -  2);
while (G__33392__i < G__33392__a.length) {G__33392__a[G__33392__i] = arguments[G__33392__i + 2]; ++G__33392__i;}
  zs = new cljs.core.IndexedSeq(G__33392__a,0);
} 
return G__33391__delegate.call(this,x,y,zs);};
G__33391.cljs$lang$maxFixedArity = 2;
G__33391.cljs$lang$applyTo = (function (arglist__33393){
var x = cljs.core.first(arglist__33393);
arglist__33393 = cljs.core.next(arglist__33393);
var y = cljs.core.first(arglist__33393);
var zs = cljs.core.rest(arglist__33393);
return G__33391__delegate(x,y,zs);
});
G__33391.cljs$core$IFn$_invoke$arity$variadic = G__33391__delegate;
return G__33391;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__33394 = null;
if (arguments.length > 2) {
var G__33395__i = 0, G__33395__a = new Array(arguments.length -  2);
while (G__33395__i < G__33395__a.length) {G__33395__a[G__33395__i] = arguments[G__33395__i + 2]; ++G__33395__i;}
G__33394 = new cljs.core.IndexedSeq(G__33395__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33394);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__33396__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__33396 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__33397__i = 0, G__33397__a = new Array(arguments.length -  4);
while (G__33397__i < G__33397__a.length) {G__33397__a[G__33397__i] = arguments[G__33397__i + 4]; ++G__33397__i;}
  more = new cljs.core.IndexedSeq(G__33397__a,0);
} 
return G__33396__delegate.call(this,a,b,c,d,more);};
G__33396.cljs$lang$maxFixedArity = 4;
G__33396.cljs$lang$applyTo = (function (arglist__33398){
var a = cljs.core.first(arglist__33398);
arglist__33398 = cljs.core.next(arglist__33398);
var b = cljs.core.first(arglist__33398);
arglist__33398 = cljs.core.next(arglist__33398);
var c = cljs.core.first(arglist__33398);
arglist__33398 = cljs.core.next(arglist__33398);
var d = cljs.core.first(arglist__33398);
var more = cljs.core.rest(arglist__33398);
return G__33396__delegate(a,b,c,d,more);
});
G__33396.cljs$core$IFn$_invoke$arity$variadic = G__33396__delegate;
return G__33396;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__33399 = null;
if (arguments.length > 4) {
var G__33400__i = 0, G__33400__a = new Array(arguments.length -  4);
while (G__33400__i < G__33400__a.length) {G__33400__a[G__33400__i] = arguments[G__33400__i + 4]; ++G__33400__i;}
G__33399 = new cljs.core.IndexedSeq(G__33400__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__33399);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__33401__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__33402 = ntcoll;
var G__33403 = cljs.core.first(vals);
var G__33404 = cljs.core.next(vals);
tcoll = G__33402;
val = G__33403;
vals = G__33404;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33401 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__33405__i = 0, G__33405__a = new Array(arguments.length -  2);
while (G__33405__i < G__33405__a.length) {G__33405__a[G__33405__i] = arguments[G__33405__i + 2]; ++G__33405__i;}
  vals = new cljs.core.IndexedSeq(G__33405__a,0);
} 
return G__33401__delegate.call(this,tcoll,val,vals);};
G__33401.cljs$lang$maxFixedArity = 2;
G__33401.cljs$lang$applyTo = (function (arglist__33406){
var tcoll = cljs.core.first(arglist__33406);
arglist__33406 = cljs.core.next(arglist__33406);
var val = cljs.core.first(arglist__33406);
var vals = cljs.core.rest(arglist__33406);
return G__33401__delegate(tcoll,val,vals);
});
G__33401.cljs$core$IFn$_invoke$arity$variadic = G__33401__delegate;
return G__33401;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__33407 = null;
if (arguments.length > 2) {
var G__33408__i = 0, G__33408__a = new Array(arguments.length -  2);
while (G__33408__i < G__33408__a.length) {G__33408__a[G__33408__i] = arguments[G__33408__i + 2]; ++G__33408__i;}
G__33407 = new cljs.core.IndexedSeq(G__33408__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__33407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__33409__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__33410 = ntcoll;
var G__33411 = cljs.core.first(kvs);
var G__33412 = cljs.core.second(kvs);
var G__33413 = cljs.core.nnext(kvs);
tcoll = G__33410;
key = G__33411;
val = G__33412;
kvs = G__33413;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33409 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__33414__i = 0, G__33414__a = new Array(arguments.length -  3);
while (G__33414__i < G__33414__a.length) {G__33414__a[G__33414__i] = arguments[G__33414__i + 3]; ++G__33414__i;}
  kvs = new cljs.core.IndexedSeq(G__33414__a,0);
} 
return G__33409__delegate.call(this,tcoll,key,val,kvs);};
G__33409.cljs$lang$maxFixedArity = 3;
G__33409.cljs$lang$applyTo = (function (arglist__33415){
var tcoll = cljs.core.first(arglist__33415);
arglist__33415 = cljs.core.next(arglist__33415);
var key = cljs.core.first(arglist__33415);
arglist__33415 = cljs.core.next(arglist__33415);
var val = cljs.core.first(arglist__33415);
var kvs = cljs.core.rest(arglist__33415);
return G__33409__delegate(tcoll,key,val,kvs);
});
G__33409.cljs$core$IFn$_invoke$arity$variadic = G__33409__delegate;
return G__33409;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__33416 = null;
if (arguments.length > 3) {
var G__33417__i = 0, G__33417__a = new Array(arguments.length -  3);
while (G__33417__i < G__33417__a.length) {G__33417__a[G__33417__i] = arguments[G__33417__i + 3]; ++G__33417__i;}
G__33416 = new cljs.core.IndexedSeq(G__33417__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__33416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__33418__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__33419 = ntcoll;
var G__33420 = cljs.core.first(ks);
var G__33421 = cljs.core.next(ks);
tcoll = G__33419;
key = G__33420;
ks = G__33421;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33418 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__33422__i = 0, G__33422__a = new Array(arguments.length -  2);
while (G__33422__i < G__33422__a.length) {G__33422__a[G__33422__i] = arguments[G__33422__i + 2]; ++G__33422__i;}
  ks = new cljs.core.IndexedSeq(G__33422__a,0);
} 
return G__33418__delegate.call(this,tcoll,key,ks);};
G__33418.cljs$lang$maxFixedArity = 2;
G__33418.cljs$lang$applyTo = (function (arglist__33423){
var tcoll = cljs.core.first(arglist__33423);
arglist__33423 = cljs.core.next(arglist__33423);
var key = cljs.core.first(arglist__33423);
var ks = cljs.core.rest(arglist__33423);
return G__33418__delegate(tcoll,key,ks);
});
G__33418.cljs$core$IFn$_invoke$arity$variadic = G__33418__delegate;
return G__33418;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__33424 = null;
if (arguments.length > 2) {
var G__33425__i = 0, G__33425__a = new Array(arguments.length -  2);
while (G__33425__i < G__33425__a.length) {G__33425__a[G__33425__i] = arguments[G__33425__i + 2]; ++G__33425__i;}
G__33424 = new cljs.core.IndexedSeq(G__33425__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__33424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__33426__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__33427 = ntcoll;
var G__33428 = cljs.core.first(vals);
var G__33429 = cljs.core.next(vals);
tcoll = G__33427;
val = G__33428;
vals = G__33429;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__33426 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__33430__i = 0, G__33430__a = new Array(arguments.length -  2);
while (G__33430__i < G__33430__a.length) {G__33430__a[G__33430__i] = arguments[G__33430__i + 2]; ++G__33430__i;}
  vals = new cljs.core.IndexedSeq(G__33430__a,0);
} 
return G__33426__delegate.call(this,tcoll,val,vals);};
G__33426.cljs$lang$maxFixedArity = 2;
G__33426.cljs$lang$applyTo = (function (arglist__33431){
var tcoll = cljs.core.first(arglist__33431);
arglist__33431 = cljs.core.next(arglist__33431);
var val = cljs.core.first(arglist__33431);
var vals = cljs.core.rest(arglist__33431);
return G__33426__delegate(tcoll,val,vals);
});
G__33426.cljs$core$IFn$_invoke$arity$variadic = G__33426__delegate;
return G__33426;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__33432 = null;
if (arguments.length > 2) {
var G__33433__i = 0, G__33433__a = new Array(arguments.length -  2);
while (G__33433__i < G__33433__a.length) {G__33433__a[G__33433__i] = arguments[G__33433__i + 2]; ++G__33433__i;}
G__33432 = new cljs.core.IndexedSeq(G__33433__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__33432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a24475 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a24475);
} else {
var G__33644 = a24475;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33644) : f.call(null,G__33644));
}
} else {
var b24476 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a24475,b24476);
} else {
var G__33645 = a24475;
var G__33646 = b24476;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33645,G__33646) : f.call(null,G__33645,G__33646));
}
} else {
var c24477 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a24475,b24476,c24477);
} else {
var G__33647 = a24475;
var G__33648 = b24476;
var G__33649 = c24477;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33647,G__33648,G__33649) : f.call(null,G__33647,G__33648,G__33649));
}
} else {
var d24478 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a24475,b24476,c24477,d24478);
} else {
var G__33650 = a24475;
var G__33651 = b24476;
var G__33652 = c24477;
var G__33653 = d24478;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33650,G__33651,G__33652,G__33653) : f.call(null,G__33650,G__33651,G__33652,G__33653));
}
} else {
var e24479 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a24475,b24476,c24477,d24478,e24479);
} else {
var G__33654 = a24475;
var G__33655 = b24476;
var G__33656 = c24477;
var G__33657 = d24478;
var G__33658 = e24479;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33654,G__33655,G__33656,G__33657,G__33658) : f.call(null,G__33654,G__33655,G__33656,G__33657,G__33658));
}
} else {
var f24480 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a24475,b24476,c24477,d24478,e24479,f24480);
} else {
var G__33659 = a24475;
var G__33660 = b24476;
var G__33661 = c24477;
var G__33662 = d24478;
var G__33663 = e24479;
var G__33664 = f24480;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__33659,G__33660,G__33661,G__33662,G__33663,G__33664) : f.call(null,G__33659,G__33660,G__33661,G__33662,G__33663,G__33664));
}
} else {
var g24481 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a24475,b24476,c24477,d24478,e24479,f24480,g24481);
} else {
var G__33665 = a24475;
var G__33666 = b24476;
var G__33667 = c24477;
var G__33668 = d24478;
var G__33669 = e24479;
var G__33670 = f24480;
var G__33671 = g24481;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__33665,G__33666,G__33667,G__33668,G__33669,G__33670,G__33671) : f.call(null,G__33665,G__33666,G__33667,G__33668,G__33669,G__33670,G__33671));
}
} else {
var h24482 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482);
} else {
var G__33672 = a24475;
var G__33673 = b24476;
var G__33674 = c24477;
var G__33675 = d24478;
var G__33676 = e24479;
var G__33677 = f24480;
var G__33678 = g24481;
var G__33679 = h24482;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__33672,G__33673,G__33674,G__33675,G__33676,G__33677,G__33678,G__33679) : f.call(null,G__33672,G__33673,G__33674,G__33675,G__33676,G__33677,G__33678,G__33679));
}
} else {
var i24483 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483);
} else {
var G__33680 = a24475;
var G__33681 = b24476;
var G__33682 = c24477;
var G__33683 = d24478;
var G__33684 = e24479;
var G__33685 = f24480;
var G__33686 = g24481;
var G__33687 = h24482;
var G__33688 = i24483;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__33680,G__33681,G__33682,G__33683,G__33684,G__33685,G__33686,G__33687,G__33688) : f.call(null,G__33680,G__33681,G__33682,G__33683,G__33684,G__33685,G__33686,G__33687,G__33688));
}
} else {
var j24484 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484);
} else {
var G__33689 = a24475;
var G__33690 = b24476;
var G__33691 = c24477;
var G__33692 = d24478;
var G__33693 = e24479;
var G__33694 = f24480;
var G__33695 = g24481;
var G__33696 = h24482;
var G__33697 = i24483;
var G__33698 = j24484;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__33689,G__33690,G__33691,G__33692,G__33693,G__33694,G__33695,G__33696,G__33697,G__33698) : f.call(null,G__33689,G__33690,G__33691,G__33692,G__33693,G__33694,G__33695,G__33696,G__33697,G__33698));
}
} else {
var k24485 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485);
} else {
var G__33699 = a24475;
var G__33700 = b24476;
var G__33701 = c24477;
var G__33702 = d24478;
var G__33703 = e24479;
var G__33704 = f24480;
var G__33705 = g24481;
var G__33706 = h24482;
var G__33707 = i24483;
var G__33708 = j24484;
var G__33709 = k24485;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__33699,G__33700,G__33701,G__33702,G__33703,G__33704,G__33705,G__33706,G__33707,G__33708,G__33709) : f.call(null,G__33699,G__33700,G__33701,G__33702,G__33703,G__33704,G__33705,G__33706,G__33707,G__33708,G__33709));
}
} else {
var l24486 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486);
} else {
var G__33710 = a24475;
var G__33711 = b24476;
var G__33712 = c24477;
var G__33713 = d24478;
var G__33714 = e24479;
var G__33715 = f24480;
var G__33716 = g24481;
var G__33717 = h24482;
var G__33718 = i24483;
var G__33719 = j24484;
var G__33720 = k24485;
var G__33721 = l24486;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__33710,G__33711,G__33712,G__33713,G__33714,G__33715,G__33716,G__33717,G__33718,G__33719,G__33720,G__33721) : f.call(null,G__33710,G__33711,G__33712,G__33713,G__33714,G__33715,G__33716,G__33717,G__33718,G__33719,G__33720,G__33721));
}
} else {
var m24487 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487);
} else {
var G__33722 = a24475;
var G__33723 = b24476;
var G__33724 = c24477;
var G__33725 = d24478;
var G__33726 = e24479;
var G__33727 = f24480;
var G__33728 = g24481;
var G__33729 = h24482;
var G__33730 = i24483;
var G__33731 = j24484;
var G__33732 = k24485;
var G__33733 = l24486;
var G__33734 = m24487;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__33722,G__33723,G__33724,G__33725,G__33726,G__33727,G__33728,G__33729,G__33730,G__33731,G__33732,G__33733,G__33734) : f.call(null,G__33722,G__33723,G__33724,G__33725,G__33726,G__33727,G__33728,G__33729,G__33730,G__33731,G__33732,G__33733,G__33734));
}
} else {
var n24488 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487,n24488);
} else {
var G__33735 = a24475;
var G__33736 = b24476;
var G__33737 = c24477;
var G__33738 = d24478;
var G__33739 = e24479;
var G__33740 = f24480;
var G__33741 = g24481;
var G__33742 = h24482;
var G__33743 = i24483;
var G__33744 = j24484;
var G__33745 = k24485;
var G__33746 = l24486;
var G__33747 = m24487;
var G__33748 = n24488;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__33735,G__33736,G__33737,G__33738,G__33739,G__33740,G__33741,G__33742,G__33743,G__33744,G__33745,G__33746,G__33747,G__33748) : f.call(null,G__33735,G__33736,G__33737,G__33738,G__33739,G__33740,G__33741,G__33742,G__33743,G__33744,G__33745,G__33746,G__33747,G__33748));
}
} else {
var o24489 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487,n24488,o24489);
} else {
var G__33749 = a24475;
var G__33750 = b24476;
var G__33751 = c24477;
var G__33752 = d24478;
var G__33753 = e24479;
var G__33754 = f24480;
var G__33755 = g24481;
var G__33756 = h24482;
var G__33757 = i24483;
var G__33758 = j24484;
var G__33759 = k24485;
var G__33760 = l24486;
var G__33761 = m24487;
var G__33762 = n24488;
var G__33763 = o24489;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__33749,G__33750,G__33751,G__33752,G__33753,G__33754,G__33755,G__33756,G__33757,G__33758,G__33759,G__33760,G__33761,G__33762,G__33763) : f.call(null,G__33749,G__33750,G__33751,G__33752,G__33753,G__33754,G__33755,G__33756,G__33757,G__33758,G__33759,G__33760,G__33761,G__33762,G__33763));
}
} else {
var p24490 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487,n24488,o24489,p24490);
} else {
var G__33764 = a24475;
var G__33765 = b24476;
var G__33766 = c24477;
var G__33767 = d24478;
var G__33768 = e24479;
var G__33769 = f24480;
var G__33770 = g24481;
var G__33771 = h24482;
var G__33772 = i24483;
var G__33773 = j24484;
var G__33774 = k24485;
var G__33775 = l24486;
var G__33776 = m24487;
var G__33777 = n24488;
var G__33778 = o24489;
var G__33779 = p24490;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__33764,G__33765,G__33766,G__33767,G__33768,G__33769,G__33770,G__33771,G__33772,G__33773,G__33774,G__33775,G__33776,G__33777,G__33778,G__33779) : f.call(null,G__33764,G__33765,G__33766,G__33767,G__33768,G__33769,G__33770,G__33771,G__33772,G__33773,G__33774,G__33775,G__33776,G__33777,G__33778,G__33779));
}
} else {
var q24491 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487,n24488,o24489,p24490,q24491);
} else {
var G__33780 = a24475;
var G__33781 = b24476;
var G__33782 = c24477;
var G__33783 = d24478;
var G__33784 = e24479;
var G__33785 = f24480;
var G__33786 = g24481;
var G__33787 = h24482;
var G__33788 = i24483;
var G__33789 = j24484;
var G__33790 = k24485;
var G__33791 = l24486;
var G__33792 = m24487;
var G__33793 = n24488;
var G__33794 = o24489;
var G__33795 = p24490;
var G__33796 = q24491;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__33780,G__33781,G__33782,G__33783,G__33784,G__33785,G__33786,G__33787,G__33788,G__33789,G__33790,G__33791,G__33792,G__33793,G__33794,G__33795,G__33796) : f.call(null,G__33780,G__33781,G__33782,G__33783,G__33784,G__33785,G__33786,G__33787,G__33788,G__33789,G__33790,G__33791,G__33792,G__33793,G__33794,G__33795,G__33796));
}
} else {
var r24492 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487,n24488,o24489,p24490,q24491,r24492);
} else {
var G__33797 = a24475;
var G__33798 = b24476;
var G__33799 = c24477;
var G__33800 = d24478;
var G__33801 = e24479;
var G__33802 = f24480;
var G__33803 = g24481;
var G__33804 = h24482;
var G__33805 = i24483;
var G__33806 = j24484;
var G__33807 = k24485;
var G__33808 = l24486;
var G__33809 = m24487;
var G__33810 = n24488;
var G__33811 = o24489;
var G__33812 = p24490;
var G__33813 = q24491;
var G__33814 = r24492;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__33797,G__33798,G__33799,G__33800,G__33801,G__33802,G__33803,G__33804,G__33805,G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812,G__33813,G__33814) : f.call(null,G__33797,G__33798,G__33799,G__33800,G__33801,G__33802,G__33803,G__33804,G__33805,G__33806,G__33807,G__33808,G__33809,G__33810,G__33811,G__33812,G__33813,G__33814));
}
} else {
var s24493 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487,n24488,o24489,p24490,q24491,r24492,s24493);
} else {
var G__33815 = a24475;
var G__33816 = b24476;
var G__33817 = c24477;
var G__33818 = d24478;
var G__33819 = e24479;
var G__33820 = f24480;
var G__33821 = g24481;
var G__33822 = h24482;
var G__33823 = i24483;
var G__33824 = j24484;
var G__33825 = k24485;
var G__33826 = l24486;
var G__33827 = m24487;
var G__33828 = n24488;
var G__33829 = o24489;
var G__33830 = p24490;
var G__33831 = q24491;
var G__33832 = r24492;
var G__33833 = s24493;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__33815,G__33816,G__33817,G__33818,G__33819,G__33820,G__33821,G__33822,G__33823,G__33824,G__33825,G__33826,G__33827,G__33828,G__33829,G__33830,G__33831,G__33832,G__33833) : f.call(null,G__33815,G__33816,G__33817,G__33818,G__33819,G__33820,G__33821,G__33822,G__33823,G__33824,G__33825,G__33826,G__33827,G__33828,G__33829,G__33830,G__33831,G__33832,G__33833));
}
} else {
var t24494 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a24475,b24476,c24477,d24478,e24479,f24480,g24481,h24482,i24483,j24484,k24485,l24486,m24487,n24488,o24489,p24490,q24491,r24492,s24493,t24494);
} else {
var G__33834 = a24475;
var G__33835 = b24476;
var G__33836 = c24477;
var G__33837 = d24478;
var G__33838 = e24479;
var G__33839 = f24480;
var G__33840 = g24481;
var G__33841 = h24482;
var G__33842 = i24483;
var G__33843 = j24484;
var G__33844 = k24485;
var G__33845 = l24486;
var G__33846 = m24487;
var G__33847 = n24488;
var G__33848 = o24489;
var G__33849 = p24490;
var G__33850 = q24491;
var G__33851 = r24492;
var G__33852 = s24493;
var G__33853 = t24494;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__33834,G__33835,G__33836,G__33837,G__33838,G__33839,G__33840,G__33841,G__33842,G__33843,G__33844,G__33845,G__33846,G__33847,G__33848,G__33849,G__33850,G__33851,G__33852,G__33853) : f.call(null,G__33834,G__33835,G__33836,G__33837,G__33838,G__33839,G__33840,G__33841,G__33842,G__33843,G__33844,G__33845,G__33846,G__33847,G__33848,G__33849,G__33850,G__33851,G__33852,G__33853));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__33854__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__33854 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__33855__i = 0, G__33855__a = new Array(arguments.length -  5);
while (G__33855__i < G__33855__a.length) {G__33855__a[G__33855__i] = arguments[G__33855__i + 5]; ++G__33855__i;}
  args = new cljs.core.IndexedSeq(G__33855__a,0);
} 
return G__33854__delegate.call(this,f,a,b,c,d,args);};
G__33854.cljs$lang$maxFixedArity = 5;
G__33854.cljs$lang$applyTo = (function (arglist__33856){
var f = cljs.core.first(arglist__33856);
arglist__33856 = cljs.core.next(arglist__33856);
var a = cljs.core.first(arglist__33856);
arglist__33856 = cljs.core.next(arglist__33856);
var b = cljs.core.first(arglist__33856);
arglist__33856 = cljs.core.next(arglist__33856);
var c = cljs.core.first(arglist__33856);
arglist__33856 = cljs.core.next(arglist__33856);
var d = cljs.core.first(arglist__33856);
var args = cljs.core.rest(arglist__33856);
return G__33854__delegate(f,a,b,c,d,args);
});
G__33854.cljs$core$IFn$_invoke$arity$variadic = G__33854__delegate;
return G__33854;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__33857 = null;
if (arguments.length > 5) {
var G__33858__i = 0, G__33858__a = new Array(arguments.length -  5);
while (G__33858__i < G__33858__a.length) {G__33858__a[G__33858__i] = arguments[G__33858__i + 5]; ++G__33858__i;}
G__33857 = new cljs.core.IndexedSeq(G__33858__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__33857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__33874 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33874) : f.call(null,G__33874));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__33875 = cljs.core.meta(obj);
var G__33876 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33875,G__33876) : f.call(null,G__33875,G__33876));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__33877 = cljs.core.meta(obj);
var G__33878 = a;
var G__33879 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33877,G__33878,G__33879) : f.call(null,G__33877,G__33878,G__33879));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__33880 = cljs.core.meta(obj);
var G__33881 = a;
var G__33882 = b;
var G__33883 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33880,G__33881,G__33882,G__33883) : f.call(null,G__33880,G__33881,G__33882,G__33883));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__33884 = cljs.core.meta(obj);
var G__33885 = a;
var G__33886 = b;
var G__33887 = c;
var G__33888 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33884,G__33885,G__33886,G__33887,G__33888) : f.call(null,G__33884,G__33885,G__33886,G__33887,G__33888));
})());
});
var vary_meta__7 = (function() { 
var G__33889__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__33889 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__33890__i = 0, G__33890__a = new Array(arguments.length -  6);
while (G__33890__i < G__33890__a.length) {G__33890__a[G__33890__i] = arguments[G__33890__i + 6]; ++G__33890__i;}
  args = new cljs.core.IndexedSeq(G__33890__a,0);
} 
return G__33889__delegate.call(this,obj,f,a,b,c,d,args);};
G__33889.cljs$lang$maxFixedArity = 6;
G__33889.cljs$lang$applyTo = (function (arglist__33891){
var obj = cljs.core.first(arglist__33891);
arglist__33891 = cljs.core.next(arglist__33891);
var f = cljs.core.first(arglist__33891);
arglist__33891 = cljs.core.next(arglist__33891);
var a = cljs.core.first(arglist__33891);
arglist__33891 = cljs.core.next(arglist__33891);
var b = cljs.core.first(arglist__33891);
arglist__33891 = cljs.core.next(arglist__33891);
var c = cljs.core.first(arglist__33891);
arglist__33891 = cljs.core.next(arglist__33891);
var d = cljs.core.first(arglist__33891);
var args = cljs.core.rest(arglist__33891);
return G__33889__delegate(obj,f,a,b,c,d,args);
});
G__33889.cljs$core$IFn$_invoke$arity$variadic = G__33889__delegate;
return G__33889;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__33892 = null;
if (arguments.length > 6) {
var G__33893__i = 0, G__33893__a = new Array(arguments.length -  6);
while (G__33893__i < G__33893__a.length) {G__33893__a[G__33893__i] = arguments[G__33893__i + 6]; ++G__33893__i;}
G__33892 = new cljs.core.IndexedSeq(G__33893__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__33892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__33894__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__33894 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33895__i = 0, G__33895__a = new Array(arguments.length -  2);
while (G__33895__i < G__33895__a.length) {G__33895__a[G__33895__i] = arguments[G__33895__i + 2]; ++G__33895__i;}
  more = new cljs.core.IndexedSeq(G__33895__a,0);
} 
return G__33894__delegate.call(this,x,y,more);};
G__33894.cljs$lang$maxFixedArity = 2;
G__33894.cljs$lang$applyTo = (function (arglist__33896){
var x = cljs.core.first(arglist__33896);
arglist__33896 = cljs.core.next(arglist__33896);
var y = cljs.core.first(arglist__33896);
var more = cljs.core.rest(arglist__33896);
return G__33894__delegate(x,y,more);
});
G__33894.cljs$core$IFn$_invoke$arity$variadic = G__33894__delegate;
return G__33894;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__33897 = null;
if (arguments.length > 2) {
var G__33898__i = 0, G__33898__a = new Array(arguments.length -  2);
while (G__33898__i < G__33898__a.length) {G__33898__a[G__33898__i] = arguments[G__33898__i + 2]; ++G__33898__i;}
G__33897 = new cljs.core.IndexedSeq(G__33898__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t33902 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t33902 = (function (nil_iter,meta33903){
this.nil_iter = nil_iter;
this.meta33903 = meta33903;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t33902.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t33902.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t33902.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t33902.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_33904){
var self__ = this;
var _33904__$1 = this;
return self__.meta33903;
});

cljs.core.t33902.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_33904,meta33903__$1){
var self__ = this;
var _33904__$1 = this;
return (new cljs.core.t33902(self__.nil_iter,meta33903__$1));
});

cljs.core.t33902.cljs$lang$type = true;

cljs.core.t33902.cljs$lang$ctorStr = "cljs.core/t33902";

cljs.core.t33902.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/t33902");
});

cljs.core.__GT_t33902 = (function __GT_t33902(nil_iter__$1,meta33903){
return (new cljs.core.t33902(nil_iter__$1,meta33903));
});

}

return (new cljs.core.t33902(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__23532__auto__ = !((lt.stepper == null));
if(and__23532__auto__){
return self__.iter.hasNext();
} else {
return and__23532__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__33905 = lt;
var G__33906 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__33905,G__33906) : self__.xform.call(null,G__33905,G__33906));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33907 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33907) : self__.xform.call(null,G__33907));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__33909 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33909) : xform.call(null,G__33909));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__33911 = cljs.core.next(iters__$1);
iters__$1 = G__33911;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__24431__auto___33912 = self__.iters.length;
var i_33913 = (0);
while(true){
if((i_33913 < n__24431__auto___33912)){
(self__.nexts[i_33913] = (self__.iters[i_33913]).next());

var G__33914 = (i_33913 + (1));
i_33913 = G__33914;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__23532__auto__ = !((lt.stepper == null));
if(and__23532__auto__){
return this$.hasNext();
} else {
return and__23532__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33910 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33910) : self__.xform.call(null,G__33910));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__33919 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33919) : xform.call(null,G__33919));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__33920_33924 = cljs.core.seq(colls);
var chunk__33921_33925 = null;
var count__33922_33926 = (0);
var i__33923_33927 = (0);
while(true){
if((i__33923_33927 < count__33922_33926)){
var coll_33928 = chunk__33921_33925.cljs$core$IIndexed$_nth$arity$2(null,i__33923_33927);
iters.push(cljs.core.iter(coll_33928));

var G__33929 = seq__33920_33924;
var G__33930 = chunk__33921_33925;
var G__33931 = count__33922_33926;
var G__33932 = (i__33923_33927 + (1));
seq__33920_33924 = G__33929;
chunk__33921_33925 = G__33930;
count__33922_33926 = G__33931;
i__33923_33927 = G__33932;
continue;
} else {
var temp__4126__auto___33933 = cljs.core.seq(seq__33920_33924);
if(temp__4126__auto___33933){
var seq__33920_33934__$1 = temp__4126__auto___33933;
if(cljs.core.chunked_seq_QMARK_(seq__33920_33934__$1)){
var c__24331__auto___33935 = cljs.core.chunk_first(seq__33920_33934__$1);
var G__33936 = cljs.core.chunk_rest(seq__33920_33934__$1);
var G__33937 = c__24331__auto___33935;
var G__33938 = cljs.core.count(c__24331__auto___33935);
var G__33939 = (0);
seq__33920_33924 = G__33936;
chunk__33921_33925 = G__33937;
count__33922_33926 = G__33938;
i__33923_33927 = G__33939;
continue;
} else {
var coll_33940 = cljs.core.first(seq__33920_33934__$1);
iters.push(cljs.core.iter(coll_33940));

var G__33941 = cljs.core.next(seq__33920_33934__$1);
var G__33942 = null;
var G__33943 = (0);
var G__33944 = (0);
seq__33920_33924 = G__33941;
chunk__33921_33925 = G__33942;
count__33922_33926 = G__33943;
i__33923_33927 = G__33944;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__23544__auto__ = cljs.core.seq(coll);
if(or__23544__auto__){
return or__23544__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__33945__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__33945 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__33946__i = 0, G__33946__a = new Array(arguments.length -  2);
while (G__33946__i < G__33946__a.length) {G__33946__a[G__33946__i] = arguments[G__33946__i + 2]; ++G__33946__i;}
  colls = new cljs.core.IndexedSeq(G__33946__a,0);
} 
return G__33945__delegate.call(this,xform,coll,colls);};
G__33945.cljs$lang$maxFixedArity = 2;
G__33945.cljs$lang$applyTo = (function (arglist__33947){
var xform = cljs.core.first(arglist__33947);
arglist__33947 = cljs.core.next(arglist__33947);
var coll = cljs.core.first(arglist__33947);
var colls = cljs.core.rest(arglist__33947);
return G__33945__delegate(xform,coll,colls);
});
G__33945.cljs$core$IFn$_invoke$arity$variadic = G__33945__delegate;
return G__33945;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__33948 = null;
if (arguments.length > 2) {
var G__33949__i = 0, G__33949__a = new Array(arguments.length -  2);
while (G__33949__i < G__33949__a.length) {G__33949__a[G__33949__i] = arguments[G__33949__i + 2]; ++G__33949__i;}
G__33948 = new cljs.core.IndexedSeq(G__33949__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__33948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__33951 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33951) : pred.call(null,G__33951));
})())){
var G__33952 = pred;
var G__33953 = cljs.core.next(coll);
pred = G__33952;
coll = G__33953;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__23544__auto__ = (function (){var G__33957 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33957) : pred.call(null,G__33957));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var G__33958 = pred;
var G__33959 = cljs.core.next(coll);
pred = G__33958;
coll = G__33959;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__33966 = null;
var G__33966__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__33966__1 = (function (x){
return cljs.core.not((function (){var G__33963 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33963) : f.call(null,G__33963));
})());
});
var G__33966__2 = (function (x,y){
return cljs.core.not((function (){var G__33964 = x;
var G__33965 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33964,G__33965) : f.call(null,G__33964,G__33965));
})());
});
var G__33966__3 = (function() { 
var G__33967__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__33967 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__33968__i = 0, G__33968__a = new Array(arguments.length -  2);
while (G__33968__i < G__33968__a.length) {G__33968__a[G__33968__i] = arguments[G__33968__i + 2]; ++G__33968__i;}
  zs = new cljs.core.IndexedSeq(G__33968__a,0);
} 
return G__33967__delegate.call(this,x,y,zs);};
G__33967.cljs$lang$maxFixedArity = 2;
G__33967.cljs$lang$applyTo = (function (arglist__33969){
var x = cljs.core.first(arglist__33969);
arglist__33969 = cljs.core.next(arglist__33969);
var y = cljs.core.first(arglist__33969);
var zs = cljs.core.rest(arglist__33969);
return G__33967__delegate(x,y,zs);
});
G__33967.cljs$core$IFn$_invoke$arity$variadic = G__33967__delegate;
return G__33967;
})()
;
G__33966 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__33966__0.call(this);
case 1:
return G__33966__1.call(this,x);
case 2:
return G__33966__2.call(this,x,y);
default:
var G__33970 = null;
if (arguments.length > 2) {
var G__33971__i = 0, G__33971__a = new Array(arguments.length -  2);
while (G__33971__i < G__33971__a.length) {G__33971__a[G__33971__i] = arguments[G__33971__i + 2]; ++G__33971__i;}
G__33970 = new cljs.core.IndexedSeq(G__33971__a,0);
}
return G__33966__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33966.cljs$lang$maxFixedArity = 2;
G__33966.cljs$lang$applyTo = G__33966__3.cljs$lang$applyTo;
G__33966.cljs$core$IFn$_invoke$arity$0 = G__33966__0;
G__33966.cljs$core$IFn$_invoke$arity$1 = G__33966__1;
G__33966.cljs$core$IFn$_invoke$arity$2 = G__33966__2;
G__33966.cljs$core$IFn$_invoke$arity$variadic = G__33966__3.cljs$core$IFn$_invoke$arity$variadic;
return G__33966;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__33972__delegate = function (args){
return x;
};
var G__33972 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33973__i = 0, G__33973__a = new Array(arguments.length -  0);
while (G__33973__i < G__33973__a.length) {G__33973__a[G__33973__i] = arguments[G__33973__i + 0]; ++G__33973__i;}
  args = new cljs.core.IndexedSeq(G__33973__a,0);
} 
return G__33972__delegate.call(this,args);};
G__33972.cljs$lang$maxFixedArity = 0;
G__33972.cljs$lang$applyTo = (function (arglist__33974){
var args = cljs.core.seq(arglist__33974);
return G__33972__delegate(args);
});
G__33972.cljs$core$IFn$_invoke$arity$variadic = G__33972__delegate;
return G__33972;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__34029 = null;
var G__34029__0 = (function (){
var G__34002 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34002) : f.call(null,G__34002));
});
var G__34029__1 = (function (x){
var G__34003 = (function (){var G__34004 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34004) : g.call(null,G__34004));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34003) : f.call(null,G__34003));
});
var G__34029__2 = (function (x,y){
var G__34005 = (function (){var G__34006 = x;
var G__34007 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__34006,G__34007) : g.call(null,G__34006,G__34007));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34005) : f.call(null,G__34005));
});
var G__34029__3 = (function (x,y,z){
var G__34008 = (function (){var G__34009 = x;
var G__34010 = y;
var G__34011 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__34009,G__34010,G__34011) : g.call(null,G__34009,G__34010,G__34011));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34008) : f.call(null,G__34008));
});
var G__34029__4 = (function() { 
var G__34030__delegate = function (x,y,z,args){
var G__34012 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34012) : f.call(null,G__34012));
};
var G__34030 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34031__i = 0, G__34031__a = new Array(arguments.length -  3);
while (G__34031__i < G__34031__a.length) {G__34031__a[G__34031__i] = arguments[G__34031__i + 3]; ++G__34031__i;}
  args = new cljs.core.IndexedSeq(G__34031__a,0);
} 
return G__34030__delegate.call(this,x,y,z,args);};
G__34030.cljs$lang$maxFixedArity = 3;
G__34030.cljs$lang$applyTo = (function (arglist__34032){
var x = cljs.core.first(arglist__34032);
arglist__34032 = cljs.core.next(arglist__34032);
var y = cljs.core.first(arglist__34032);
arglist__34032 = cljs.core.next(arglist__34032);
var z = cljs.core.first(arglist__34032);
var args = cljs.core.rest(arglist__34032);
return G__34030__delegate(x,y,z,args);
});
G__34030.cljs$core$IFn$_invoke$arity$variadic = G__34030__delegate;
return G__34030;
})()
;
G__34029 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34029__0.call(this);
case 1:
return G__34029__1.call(this,x);
case 2:
return G__34029__2.call(this,x,y);
case 3:
return G__34029__3.call(this,x,y,z);
default:
var G__34033 = null;
if (arguments.length > 3) {
var G__34034__i = 0, G__34034__a = new Array(arguments.length -  3);
while (G__34034__i < G__34034__a.length) {G__34034__a[G__34034__i] = arguments[G__34034__i + 3]; ++G__34034__i;}
G__34033 = new cljs.core.IndexedSeq(G__34034__a,0);
}
return G__34029__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34029.cljs$lang$maxFixedArity = 3;
G__34029.cljs$lang$applyTo = G__34029__4.cljs$lang$applyTo;
G__34029.cljs$core$IFn$_invoke$arity$0 = G__34029__0;
G__34029.cljs$core$IFn$_invoke$arity$1 = G__34029__1;
G__34029.cljs$core$IFn$_invoke$arity$2 = G__34029__2;
G__34029.cljs$core$IFn$_invoke$arity$3 = G__34029__3;
G__34029.cljs$core$IFn$_invoke$arity$variadic = G__34029__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34029;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__34035 = null;
var G__34035__0 = (function (){
var G__34013 = (function (){var G__34014 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34014) : g.call(null,G__34014));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34013) : f.call(null,G__34013));
});
var G__34035__1 = (function (x){
var G__34015 = (function (){var G__34016 = (function (){var G__34017 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__34017) : h.call(null,G__34017));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34016) : g.call(null,G__34016));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34015) : f.call(null,G__34015));
});
var G__34035__2 = (function (x,y){
var G__34018 = (function (){var G__34019 = (function (){var G__34020 = x;
var G__34021 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__34020,G__34021) : h.call(null,G__34020,G__34021));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34019) : g.call(null,G__34019));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34018) : f.call(null,G__34018));
});
var G__34035__3 = (function (x,y,z){
var G__34022 = (function (){var G__34023 = (function (){var G__34024 = x;
var G__34025 = y;
var G__34026 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__34024,G__34025,G__34026) : h.call(null,G__34024,G__34025,G__34026));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34023) : g.call(null,G__34023));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34022) : f.call(null,G__34022));
});
var G__34035__4 = (function() { 
var G__34036__delegate = function (x,y,z,args){
var G__34027 = (function (){var G__34028 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__34028) : g.call(null,G__34028));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34027) : f.call(null,G__34027));
};
var G__34036 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34037__i = 0, G__34037__a = new Array(arguments.length -  3);
while (G__34037__i < G__34037__a.length) {G__34037__a[G__34037__i] = arguments[G__34037__i + 3]; ++G__34037__i;}
  args = new cljs.core.IndexedSeq(G__34037__a,0);
} 
return G__34036__delegate.call(this,x,y,z,args);};
G__34036.cljs$lang$maxFixedArity = 3;
G__34036.cljs$lang$applyTo = (function (arglist__34038){
var x = cljs.core.first(arglist__34038);
arglist__34038 = cljs.core.next(arglist__34038);
var y = cljs.core.first(arglist__34038);
arglist__34038 = cljs.core.next(arglist__34038);
var z = cljs.core.first(arglist__34038);
var args = cljs.core.rest(arglist__34038);
return G__34036__delegate(x,y,z,args);
});
G__34036.cljs$core$IFn$_invoke$arity$variadic = G__34036__delegate;
return G__34036;
})()
;
G__34035 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34035__0.call(this);
case 1:
return G__34035__1.call(this,x);
case 2:
return G__34035__2.call(this,x,y);
case 3:
return G__34035__3.call(this,x,y,z);
default:
var G__34039 = null;
if (arguments.length > 3) {
var G__34040__i = 0, G__34040__a = new Array(arguments.length -  3);
while (G__34040__i < G__34040__a.length) {G__34040__a[G__34040__i] = arguments[G__34040__i + 3]; ++G__34040__i;}
G__34039 = new cljs.core.IndexedSeq(G__34040__a,0);
}
return G__34035__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34039);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34035.cljs$lang$maxFixedArity = 3;
G__34035.cljs$lang$applyTo = G__34035__4.cljs$lang$applyTo;
G__34035.cljs$core$IFn$_invoke$arity$0 = G__34035__0;
G__34035.cljs$core$IFn$_invoke$arity$1 = G__34035__1;
G__34035.cljs$core$IFn$_invoke$arity$2 = G__34035__2;
G__34035.cljs$core$IFn$_invoke$arity$3 = G__34035__3;
G__34035.cljs$core$IFn$_invoke$arity$variadic = G__34035__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34035;
})()
});
var comp__4 = (function() { 
var G__34041__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__34042__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__34043 = cljs.core.first(fs__$2).call(null,ret);
var G__34044 = cljs.core.next(fs__$2);
ret = G__34043;
fs__$2 = G__34044;
continue;
} else {
return ret;
}
break;
}
};
var G__34042 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34045__i = 0, G__34045__a = new Array(arguments.length -  0);
while (G__34045__i < G__34045__a.length) {G__34045__a[G__34045__i] = arguments[G__34045__i + 0]; ++G__34045__i;}
  args = new cljs.core.IndexedSeq(G__34045__a,0);
} 
return G__34042__delegate.call(this,args);};
G__34042.cljs$lang$maxFixedArity = 0;
G__34042.cljs$lang$applyTo = (function (arglist__34046){
var args = cljs.core.seq(arglist__34046);
return G__34042__delegate(args);
});
G__34042.cljs$core$IFn$_invoke$arity$variadic = G__34042__delegate;
return G__34042;
})()
;
;})(fs__$1))
};
var G__34041 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__34047__i = 0, G__34047__a = new Array(arguments.length -  3);
while (G__34047__i < G__34047__a.length) {G__34047__a[G__34047__i] = arguments[G__34047__i + 3]; ++G__34047__i;}
  fs = new cljs.core.IndexedSeq(G__34047__a,0);
} 
return G__34041__delegate.call(this,f1,f2,f3,fs);};
G__34041.cljs$lang$maxFixedArity = 3;
G__34041.cljs$lang$applyTo = (function (arglist__34048){
var f1 = cljs.core.first(arglist__34048);
arglist__34048 = cljs.core.next(arglist__34048);
var f2 = cljs.core.first(arglist__34048);
arglist__34048 = cljs.core.next(arglist__34048);
var f3 = cljs.core.first(arglist__34048);
var fs = cljs.core.rest(arglist__34048);
return G__34041__delegate(f1,f2,f3,fs);
});
G__34041.cljs$core$IFn$_invoke$arity$variadic = G__34041__delegate;
return G__34041;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__34049 = null;
if (arguments.length > 3) {
var G__34050__i = 0, G__34050__a = new Array(arguments.length -  3);
while (G__34050__i < G__34050__a.length) {G__34050__a[G__34050__i] = arguments[G__34050__i + 3]; ++G__34050__i;}
G__34049 = new cljs.core.IndexedSeq(G__34050__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__34049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__34135 = null;
var G__34135__0 = (function (){
var G__34093 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34093) : f.call(null,G__34093));
});
var G__34135__1 = (function (x){
var G__34094 = arg1;
var G__34095 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34094,G__34095) : f.call(null,G__34094,G__34095));
});
var G__34135__2 = (function (x,y){
var G__34096 = arg1;
var G__34097 = x;
var G__34098 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34096,G__34097,G__34098) : f.call(null,G__34096,G__34097,G__34098));
});
var G__34135__3 = (function (x,y,z){
var G__34099 = arg1;
var G__34100 = x;
var G__34101 = y;
var G__34102 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34099,G__34100,G__34101,G__34102) : f.call(null,G__34099,G__34100,G__34101,G__34102));
});
var G__34135__4 = (function() { 
var G__34136__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__34136 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34137__i = 0, G__34137__a = new Array(arguments.length -  3);
while (G__34137__i < G__34137__a.length) {G__34137__a[G__34137__i] = arguments[G__34137__i + 3]; ++G__34137__i;}
  args = new cljs.core.IndexedSeq(G__34137__a,0);
} 
return G__34136__delegate.call(this,x,y,z,args);};
G__34136.cljs$lang$maxFixedArity = 3;
G__34136.cljs$lang$applyTo = (function (arglist__34138){
var x = cljs.core.first(arglist__34138);
arglist__34138 = cljs.core.next(arglist__34138);
var y = cljs.core.first(arglist__34138);
arglist__34138 = cljs.core.next(arglist__34138);
var z = cljs.core.first(arglist__34138);
var args = cljs.core.rest(arglist__34138);
return G__34136__delegate(x,y,z,args);
});
G__34136.cljs$core$IFn$_invoke$arity$variadic = G__34136__delegate;
return G__34136;
})()
;
G__34135 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34135__0.call(this);
case 1:
return G__34135__1.call(this,x);
case 2:
return G__34135__2.call(this,x,y);
case 3:
return G__34135__3.call(this,x,y,z);
default:
var G__34139 = null;
if (arguments.length > 3) {
var G__34140__i = 0, G__34140__a = new Array(arguments.length -  3);
while (G__34140__i < G__34140__a.length) {G__34140__a[G__34140__i] = arguments[G__34140__i + 3]; ++G__34140__i;}
G__34139 = new cljs.core.IndexedSeq(G__34140__a,0);
}
return G__34135__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34135.cljs$lang$maxFixedArity = 3;
G__34135.cljs$lang$applyTo = G__34135__4.cljs$lang$applyTo;
G__34135.cljs$core$IFn$_invoke$arity$0 = G__34135__0;
G__34135.cljs$core$IFn$_invoke$arity$1 = G__34135__1;
G__34135.cljs$core$IFn$_invoke$arity$2 = G__34135__2;
G__34135.cljs$core$IFn$_invoke$arity$3 = G__34135__3;
G__34135.cljs$core$IFn$_invoke$arity$variadic = G__34135__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34135;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__34141 = null;
var G__34141__0 = (function (){
var G__34103 = arg1;
var G__34104 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34103,G__34104) : f.call(null,G__34103,G__34104));
});
var G__34141__1 = (function (x){
var G__34105 = arg1;
var G__34106 = arg2;
var G__34107 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34105,G__34106,G__34107) : f.call(null,G__34105,G__34106,G__34107));
});
var G__34141__2 = (function (x,y){
var G__34108 = arg1;
var G__34109 = arg2;
var G__34110 = x;
var G__34111 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34108,G__34109,G__34110,G__34111) : f.call(null,G__34108,G__34109,G__34110,G__34111));
});
var G__34141__3 = (function (x,y,z){
var G__34112 = arg1;
var G__34113 = arg2;
var G__34114 = x;
var G__34115 = y;
var G__34116 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34112,G__34113,G__34114,G__34115,G__34116) : f.call(null,G__34112,G__34113,G__34114,G__34115,G__34116));
});
var G__34141__4 = (function() { 
var G__34142__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__34142 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34143__i = 0, G__34143__a = new Array(arguments.length -  3);
while (G__34143__i < G__34143__a.length) {G__34143__a[G__34143__i] = arguments[G__34143__i + 3]; ++G__34143__i;}
  args = new cljs.core.IndexedSeq(G__34143__a,0);
} 
return G__34142__delegate.call(this,x,y,z,args);};
G__34142.cljs$lang$maxFixedArity = 3;
G__34142.cljs$lang$applyTo = (function (arglist__34144){
var x = cljs.core.first(arglist__34144);
arglist__34144 = cljs.core.next(arglist__34144);
var y = cljs.core.first(arglist__34144);
arglist__34144 = cljs.core.next(arglist__34144);
var z = cljs.core.first(arglist__34144);
var args = cljs.core.rest(arglist__34144);
return G__34142__delegate(x,y,z,args);
});
G__34142.cljs$core$IFn$_invoke$arity$variadic = G__34142__delegate;
return G__34142;
})()
;
G__34141 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34141__0.call(this);
case 1:
return G__34141__1.call(this,x);
case 2:
return G__34141__2.call(this,x,y);
case 3:
return G__34141__3.call(this,x,y,z);
default:
var G__34145 = null;
if (arguments.length > 3) {
var G__34146__i = 0, G__34146__a = new Array(arguments.length -  3);
while (G__34146__i < G__34146__a.length) {G__34146__a[G__34146__i] = arguments[G__34146__i + 3]; ++G__34146__i;}
G__34145 = new cljs.core.IndexedSeq(G__34146__a,0);
}
return G__34141__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34141.cljs$lang$maxFixedArity = 3;
G__34141.cljs$lang$applyTo = G__34141__4.cljs$lang$applyTo;
G__34141.cljs$core$IFn$_invoke$arity$0 = G__34141__0;
G__34141.cljs$core$IFn$_invoke$arity$1 = G__34141__1;
G__34141.cljs$core$IFn$_invoke$arity$2 = G__34141__2;
G__34141.cljs$core$IFn$_invoke$arity$3 = G__34141__3;
G__34141.cljs$core$IFn$_invoke$arity$variadic = G__34141__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34141;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__34147 = null;
var G__34147__0 = (function (){
var G__34117 = arg1;
var G__34118 = arg2;
var G__34119 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34117,G__34118,G__34119) : f.call(null,G__34117,G__34118,G__34119));
});
var G__34147__1 = (function (x){
var G__34120 = arg1;
var G__34121 = arg2;
var G__34122 = arg3;
var G__34123 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34120,G__34121,G__34122,G__34123) : f.call(null,G__34120,G__34121,G__34122,G__34123));
});
var G__34147__2 = (function (x,y){
var G__34124 = arg1;
var G__34125 = arg2;
var G__34126 = arg3;
var G__34127 = x;
var G__34128 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__34124,G__34125,G__34126,G__34127,G__34128) : f.call(null,G__34124,G__34125,G__34126,G__34127,G__34128));
});
var G__34147__3 = (function (x,y,z){
var G__34129 = arg1;
var G__34130 = arg2;
var G__34131 = arg3;
var G__34132 = x;
var G__34133 = y;
var G__34134 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__34129,G__34130,G__34131,G__34132,G__34133,G__34134) : f.call(null,G__34129,G__34130,G__34131,G__34132,G__34133,G__34134));
});
var G__34147__4 = (function() { 
var G__34148__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__34148 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34149__i = 0, G__34149__a = new Array(arguments.length -  3);
while (G__34149__i < G__34149__a.length) {G__34149__a[G__34149__i] = arguments[G__34149__i + 3]; ++G__34149__i;}
  args = new cljs.core.IndexedSeq(G__34149__a,0);
} 
return G__34148__delegate.call(this,x,y,z,args);};
G__34148.cljs$lang$maxFixedArity = 3;
G__34148.cljs$lang$applyTo = (function (arglist__34150){
var x = cljs.core.first(arglist__34150);
arglist__34150 = cljs.core.next(arglist__34150);
var y = cljs.core.first(arglist__34150);
arglist__34150 = cljs.core.next(arglist__34150);
var z = cljs.core.first(arglist__34150);
var args = cljs.core.rest(arglist__34150);
return G__34148__delegate(x,y,z,args);
});
G__34148.cljs$core$IFn$_invoke$arity$variadic = G__34148__delegate;
return G__34148;
})()
;
G__34147 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__34147__0.call(this);
case 1:
return G__34147__1.call(this,x);
case 2:
return G__34147__2.call(this,x,y);
case 3:
return G__34147__3.call(this,x,y,z);
default:
var G__34151 = null;
if (arguments.length > 3) {
var G__34152__i = 0, G__34152__a = new Array(arguments.length -  3);
while (G__34152__i < G__34152__a.length) {G__34152__a[G__34152__i] = arguments[G__34152__i + 3]; ++G__34152__i;}
G__34151 = new cljs.core.IndexedSeq(G__34152__a,0);
}
return G__34147__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34147.cljs$lang$maxFixedArity = 3;
G__34147.cljs$lang$applyTo = G__34147__4.cljs$lang$applyTo;
G__34147.cljs$core$IFn$_invoke$arity$0 = G__34147__0;
G__34147.cljs$core$IFn$_invoke$arity$1 = G__34147__1;
G__34147.cljs$core$IFn$_invoke$arity$2 = G__34147__2;
G__34147.cljs$core$IFn$_invoke$arity$3 = G__34147__3;
G__34147.cljs$core$IFn$_invoke$arity$variadic = G__34147__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34147;
})()
});
var partial__5 = (function() { 
var G__34153__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__34154__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__34154 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34155__i = 0, G__34155__a = new Array(arguments.length -  0);
while (G__34155__i < G__34155__a.length) {G__34155__a[G__34155__i] = arguments[G__34155__i + 0]; ++G__34155__i;}
  args = new cljs.core.IndexedSeq(G__34155__a,0);
} 
return G__34154__delegate.call(this,args);};
G__34154.cljs$lang$maxFixedArity = 0;
G__34154.cljs$lang$applyTo = (function (arglist__34156){
var args = cljs.core.seq(arglist__34156);
return G__34154__delegate(args);
});
G__34154.cljs$core$IFn$_invoke$arity$variadic = G__34154__delegate;
return G__34154;
})()
;
};
var G__34153 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__34157__i = 0, G__34157__a = new Array(arguments.length -  4);
while (G__34157__i < G__34157__a.length) {G__34157__a[G__34157__i] = arguments[G__34157__i + 4]; ++G__34157__i;}
  more = new cljs.core.IndexedSeq(G__34157__a,0);
} 
return G__34153__delegate.call(this,f,arg1,arg2,arg3,more);};
G__34153.cljs$lang$maxFixedArity = 4;
G__34153.cljs$lang$applyTo = (function (arglist__34158){
var f = cljs.core.first(arglist__34158);
arglist__34158 = cljs.core.next(arglist__34158);
var arg1 = cljs.core.first(arglist__34158);
arglist__34158 = cljs.core.next(arglist__34158);
var arg2 = cljs.core.first(arglist__34158);
arglist__34158 = cljs.core.next(arglist__34158);
var arg3 = cljs.core.first(arglist__34158);
var more = cljs.core.rest(arglist__34158);
return G__34153__delegate(f,arg1,arg2,arg3,more);
});
G__34153.cljs$core$IFn$_invoke$arity$variadic = G__34153__delegate;
return G__34153;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__34159 = null;
if (arguments.length > 4) {
var G__34160__i = 0, G__34160__a = new Array(arguments.length -  4);
while (G__34160__i < G__34160__a.length) {G__34160__a[G__34160__i] = arguments[G__34160__i + 4]; ++G__34160__i;}
G__34159 = new cljs.core.IndexedSeq(G__34160__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__34159);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__34193 = null;
var G__34193__1 = (function (a){
var G__34177 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34177) : f.call(null,G__34177));
});
var G__34193__2 = (function (a,b){
var G__34178 = (((a == null))?x:a);
var G__34179 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34178,G__34179) : f.call(null,G__34178,G__34179));
});
var G__34193__3 = (function (a,b,c){
var G__34180 = (((a == null))?x:a);
var G__34181 = b;
var G__34182 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34180,G__34181,G__34182) : f.call(null,G__34180,G__34181,G__34182));
});
var G__34193__4 = (function() { 
var G__34194__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__34194 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34195__i = 0, G__34195__a = new Array(arguments.length -  3);
while (G__34195__i < G__34195__a.length) {G__34195__a[G__34195__i] = arguments[G__34195__i + 3]; ++G__34195__i;}
  ds = new cljs.core.IndexedSeq(G__34195__a,0);
} 
return G__34194__delegate.call(this,a,b,c,ds);};
G__34194.cljs$lang$maxFixedArity = 3;
G__34194.cljs$lang$applyTo = (function (arglist__34196){
var a = cljs.core.first(arglist__34196);
arglist__34196 = cljs.core.next(arglist__34196);
var b = cljs.core.first(arglist__34196);
arglist__34196 = cljs.core.next(arglist__34196);
var c = cljs.core.first(arglist__34196);
var ds = cljs.core.rest(arglist__34196);
return G__34194__delegate(a,b,c,ds);
});
G__34194.cljs$core$IFn$_invoke$arity$variadic = G__34194__delegate;
return G__34194;
})()
;
G__34193 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__34193__1.call(this,a);
case 2:
return G__34193__2.call(this,a,b);
case 3:
return G__34193__3.call(this,a,b,c);
default:
var G__34197 = null;
if (arguments.length > 3) {
var G__34198__i = 0, G__34198__a = new Array(arguments.length -  3);
while (G__34198__i < G__34198__a.length) {G__34198__a[G__34198__i] = arguments[G__34198__i + 3]; ++G__34198__i;}
G__34197 = new cljs.core.IndexedSeq(G__34198__a,0);
}
return G__34193__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34193.cljs$lang$maxFixedArity = 3;
G__34193.cljs$lang$applyTo = G__34193__4.cljs$lang$applyTo;
G__34193.cljs$core$IFn$_invoke$arity$1 = G__34193__1;
G__34193.cljs$core$IFn$_invoke$arity$2 = G__34193__2;
G__34193.cljs$core$IFn$_invoke$arity$3 = G__34193__3;
G__34193.cljs$core$IFn$_invoke$arity$variadic = G__34193__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34193;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__34199 = null;
var G__34199__2 = (function (a,b){
var G__34183 = (((a == null))?x:a);
var G__34184 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34183,G__34184) : f.call(null,G__34183,G__34184));
});
var G__34199__3 = (function (a,b,c){
var G__34185 = (((a == null))?x:a);
var G__34186 = (((b == null))?y:b);
var G__34187 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34185,G__34186,G__34187) : f.call(null,G__34185,G__34186,G__34187));
});
var G__34199__4 = (function() { 
var G__34200__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__34200 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34201__i = 0, G__34201__a = new Array(arguments.length -  3);
while (G__34201__i < G__34201__a.length) {G__34201__a[G__34201__i] = arguments[G__34201__i + 3]; ++G__34201__i;}
  ds = new cljs.core.IndexedSeq(G__34201__a,0);
} 
return G__34200__delegate.call(this,a,b,c,ds);};
G__34200.cljs$lang$maxFixedArity = 3;
G__34200.cljs$lang$applyTo = (function (arglist__34202){
var a = cljs.core.first(arglist__34202);
arglist__34202 = cljs.core.next(arglist__34202);
var b = cljs.core.first(arglist__34202);
arglist__34202 = cljs.core.next(arglist__34202);
var c = cljs.core.first(arglist__34202);
var ds = cljs.core.rest(arglist__34202);
return G__34200__delegate(a,b,c,ds);
});
G__34200.cljs$core$IFn$_invoke$arity$variadic = G__34200__delegate;
return G__34200;
})()
;
G__34199 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__34199__2.call(this,a,b);
case 3:
return G__34199__3.call(this,a,b,c);
default:
var G__34203 = null;
if (arguments.length > 3) {
var G__34204__i = 0, G__34204__a = new Array(arguments.length -  3);
while (G__34204__i < G__34204__a.length) {G__34204__a[G__34204__i] = arguments[G__34204__i + 3]; ++G__34204__i;}
G__34203 = new cljs.core.IndexedSeq(G__34204__a,0);
}
return G__34199__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34199.cljs$lang$maxFixedArity = 3;
G__34199.cljs$lang$applyTo = G__34199__4.cljs$lang$applyTo;
G__34199.cljs$core$IFn$_invoke$arity$2 = G__34199__2;
G__34199.cljs$core$IFn$_invoke$arity$3 = G__34199__3;
G__34199.cljs$core$IFn$_invoke$arity$variadic = G__34199__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34199;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__34205 = null;
var G__34205__2 = (function (a,b){
var G__34188 = (((a == null))?x:a);
var G__34189 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34188,G__34189) : f.call(null,G__34188,G__34189));
});
var G__34205__3 = (function (a,b,c){
var G__34190 = (((a == null))?x:a);
var G__34191 = (((b == null))?y:b);
var G__34192 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34190,G__34191,G__34192) : f.call(null,G__34190,G__34191,G__34192));
});
var G__34205__4 = (function() { 
var G__34206__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__34206 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__34207__i = 0, G__34207__a = new Array(arguments.length -  3);
while (G__34207__i < G__34207__a.length) {G__34207__a[G__34207__i] = arguments[G__34207__i + 3]; ++G__34207__i;}
  ds = new cljs.core.IndexedSeq(G__34207__a,0);
} 
return G__34206__delegate.call(this,a,b,c,ds);};
G__34206.cljs$lang$maxFixedArity = 3;
G__34206.cljs$lang$applyTo = (function (arglist__34208){
var a = cljs.core.first(arglist__34208);
arglist__34208 = cljs.core.next(arglist__34208);
var b = cljs.core.first(arglist__34208);
arglist__34208 = cljs.core.next(arglist__34208);
var c = cljs.core.first(arglist__34208);
var ds = cljs.core.rest(arglist__34208);
return G__34206__delegate(a,b,c,ds);
});
G__34206.cljs$core$IFn$_invoke$arity$variadic = G__34206__delegate;
return G__34206;
})()
;
G__34205 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__34205__2.call(this,a,b);
case 3:
return G__34205__3.call(this,a,b,c);
default:
var G__34209 = null;
if (arguments.length > 3) {
var G__34210__i = 0, G__34210__a = new Array(arguments.length -  3);
while (G__34210__i < G__34210__a.length) {G__34210__a[G__34210__i] = arguments[G__34210__i + 3]; ++G__34210__i;}
G__34209 = new cljs.core.IndexedSeq(G__34210__a,0);
}
return G__34205__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__34209);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34205.cljs$lang$maxFixedArity = 3;
G__34205.cljs$lang$applyTo = G__34205__4.cljs$lang$applyTo;
G__34205.cljs$core$IFn$_invoke$arity$2 = G__34205__2;
G__34205.cljs$core$IFn$_invoke$arity$3 = G__34205__3;
G__34205.cljs$core$IFn$_invoke$arity$variadic = G__34205__4.cljs$core$IFn$_invoke$arity$variadic;
return G__34205;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__34241 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__34241) : cljs.core.volatile_BANG_.call(null,G__34241));
})();
return ((function (i){
return (function() {
var G__34271 = null;
var G__34271__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34271__1 = (function (result){
var G__34242 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34242) : rf.call(null,G__34242));
});
var G__34271__2 = (function (result,input){
var G__34243 = result;
var G__34244 = (function (){var G__34245 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__34246 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34245,G__34246) : f.call(null,G__34245,G__34246));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34243,G__34244) : rf.call(null,G__34243,G__34244));
});
G__34271 = function(result,input){
switch(arguments.length){
case 0:
return G__34271__0.call(this);
case 1:
return G__34271__1.call(this,result);
case 2:
return G__34271__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34271.cljs$core$IFn$_invoke$arity$0 = G__34271__0;
G__34271.cljs$core$IFn$_invoke$arity$1 = G__34271__1;
G__34271.cljs$core$IFn$_invoke$arity$2 = G__34271__2;
return G__34271;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24431__auto___34272 = size;
var i_34273 = (0);
while(true){
if((i_34273 < n__24431__auto___34272)){
cljs.core.chunk_append(b,(function (){var G__34267 = (idx + i_34273);
var G__34268 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34273);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34267,G__34268) : f.call(null,G__34267,G__34268));
})());

var G__34274 = (i_34273 + (1));
i_34273 = G__34274;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__34269 = idx;
var G__34270 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34269,G__34270) : f.call(null,G__34269,G__34270));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__34293 = null;
var G__34293__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34293__1 = (function (result){
var G__34287 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34287) : rf.call(null,G__34287));
});
var G__34293__2 = (function (result,input){
var v = (function (){var G__34288 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34288) : f.call(null,G__34288));
})();
if((v == null)){
return result;
} else {
var G__34289 = result;
var G__34290 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34289,G__34290) : rf.call(null,G__34289,G__34290));
}
});
G__34293 = function(result,input){
switch(arguments.length){
case 0:
return G__34293__0.call(this);
case 1:
return G__34293__1.call(this,result);
case 2:
return G__34293__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34293.cljs$core$IFn$_invoke$arity$0 = G__34293__0;
G__34293.cljs$core$IFn$_invoke$arity$1 = G__34293__1;
G__34293.cljs$core$IFn$_invoke$arity$2 = G__34293__2;
return G__34293;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24431__auto___34294 = size;
var i_34295 = (0);
while(true){
if((i_34295 < n__24431__auto___34294)){
var x_34296 = (function (){var G__34291 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34295);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34291) : f.call(null,G__34291));
})();
if((x_34296 == null)){
} else {
cljs.core.chunk_append(b,x_34296);
}

var G__34297 = (i_34295 + (1));
i_34295 = G__34297;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__34292 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34292) : f.call(null,G__34292));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__34298 = this$__$1;
return goog.getUid(G__34298);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__34299 = cljs.core.seq(self__.watches);
var chunk__34300 = null;
var count__34301 = (0);
var i__34302 = (0);
while(true){
if((i__34302 < count__34301)){
var vec__34303 = chunk__34300.cljs$core$IIndexed$_nth$arity$2(null,i__34302);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34303,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34303,(1),null);
var G__34304_34313 = key;
var G__34305_34314 = this$__$1;
var G__34306_34315 = oldval;
var G__34307_34316 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34304_34313,G__34305_34314,G__34306_34315,G__34307_34316) : f.call(null,G__34304_34313,G__34305_34314,G__34306_34315,G__34307_34316));

var G__34317 = seq__34299;
var G__34318 = chunk__34300;
var G__34319 = count__34301;
var G__34320 = (i__34302 + (1));
seq__34299 = G__34317;
chunk__34300 = G__34318;
count__34301 = G__34319;
i__34302 = G__34320;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34299);
if(temp__4126__auto__){
var seq__34299__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34299__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__34299__$1);
var G__34321 = cljs.core.chunk_rest(seq__34299__$1);
var G__34322 = c__24331__auto__;
var G__34323 = cljs.core.count(c__24331__auto__);
var G__34324 = (0);
seq__34299 = G__34321;
chunk__34300 = G__34322;
count__34301 = G__34323;
i__34302 = G__34324;
continue;
} else {
var vec__34308 = cljs.core.first(seq__34299__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34308,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34308,(1),null);
var G__34309_34325 = key;
var G__34310_34326 = this$__$1;
var G__34311_34327 = oldval;
var G__34312_34328 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34309_34325,G__34310_34326,G__34311_34327,G__34312_34328) : f.call(null,G__34309_34325,G__34310_34326,G__34311_34327,G__34312_34328));

var G__34329 = cljs.core.next(seq__34299__$1);
var G__34330 = null;
var G__34331 = (0);
var G__34332 = (0);
seq__34299 = G__34329;
chunk__34300 = G__34330;
count__34301 = G__34331;
i__34302 = G__34332;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__34336__delegate = function (x,p__34333){
var map__34335 = p__34333;
var map__34335__$1 = ((cljs.core.seq_QMARK_(map__34335))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__34335):map__34335);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34335__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34335__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__34336 = function (x,var_args){
var p__34333 = null;
if (arguments.length > 1) {
var G__34337__i = 0, G__34337__a = new Array(arguments.length -  1);
while (G__34337__i < G__34337__a.length) {G__34337__a[G__34337__i] = arguments[G__34337__i + 1]; ++G__34337__i;}
  p__34333 = new cljs.core.IndexedSeq(G__34337__a,0);
} 
return G__34336__delegate.call(this,x,p__34333);};
G__34336.cljs$lang$maxFixedArity = 1;
G__34336.cljs$lang$applyTo = (function (arglist__34338){
var x = cljs.core.first(arglist__34338);
var p__34333 = cljs.core.rest(arglist__34338);
return G__34336__delegate(x,p__34333);
});
G__34336.cljs$core$IFn$_invoke$arity$variadic = G__34336__delegate;
return G__34336;
})()
;
atom = function(x,var_args){
var p__34333 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__34339 = null;
if (arguments.length > 1) {
var G__34340__i = 0, G__34340__a = new Array(arguments.length -  1);
while (G__34340__i < G__34340__a.length) {G__34340__a[G__34340__i] = arguments[G__34340__i + 1]; ++G__34340__i;}
G__34339 = new cljs.core.IndexedSeq(G__34340__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__34339);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__34343 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__34343) : validate.call(null,G__34343));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__34344 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__34344) : cljs.core.pr_str.call(null,G__34344));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34351 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34351) : f.call(null,G__34351));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34352 = a.state;
var G__34353 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34352,G__34353) : f.call(null,G__34352,G__34353));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__34354 = a.state;
var G__34355 = x;
var G__34356 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34354,G__34355,G__34356) : f.call(null,G__34354,G__34355,G__34356));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__34357__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__34357 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__34358__i = 0, G__34358__a = new Array(arguments.length -  4);
while (G__34358__i < G__34358__a.length) {G__34358__a[G__34358__i] = arguments[G__34358__i + 4]; ++G__34358__i;}
  more = new cljs.core.IndexedSeq(G__34358__a,0);
} 
return G__34357__delegate.call(this,a,f,x,y,more);};
G__34357.cljs$lang$maxFixedArity = 4;
G__34357.cljs$lang$applyTo = (function (arglist__34359){
var a = cljs.core.first(arglist__34359);
arglist__34359 = cljs.core.next(arglist__34359);
var f = cljs.core.first(arglist__34359);
arglist__34359 = cljs.core.next(arglist__34359);
var x = cljs.core.first(arglist__34359);
arglist__34359 = cljs.core.next(arglist__34359);
var y = cljs.core.first(arglist__34359);
var more = cljs.core.rest(arglist__34359);
return G__34357__delegate(a,f,x,y,more);
});
G__34357.cljs$core$IFn$_invoke$arity$variadic = G__34357__delegate;
return G__34357;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__34360 = null;
if (arguments.length > 4) {
var G__34361__i = 0, G__34361__a = new Array(arguments.length -  4);
while (G__34361__i < G__34361__a.length) {G__34361__a[G__34361__i] = arguments[G__34361__i + 4]; ++G__34361__i;}
G__34360 = new cljs.core.IndexedSeq(G__34361__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__34360);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__34428 = null;
var G__34428__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34428__1 = (function (result){
var G__34395 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34395) : rf.call(null,G__34395));
});
var G__34428__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__34396 = i;
var G__34397 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34396,G__34397) : f.call(null,G__34396,G__34397));
})();
if((v == null)){
return result;
} else {
var G__34398 = result;
var G__34399 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34398,G__34399) : rf.call(null,G__34398,G__34399));
}
});
G__34428 = function(result,input){
switch(arguments.length){
case 0:
return G__34428__0.call(this);
case 1:
return G__34428__1.call(this,result);
case 2:
return G__34428__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34428.cljs$core$IFn$_invoke$arity$0 = G__34428__0;
G__34428.cljs$core$IFn$_invoke$arity$1 = G__34428__1;
G__34428.cljs$core$IFn$_invoke$arity$2 = G__34428__2;
return G__34428;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24431__auto___34429 = size;
var i_34430 = (0);
while(true){
if((i_34430 < n__24431__auto___34429)){
var x_34431 = (function (){var G__34424 = (idx + i_34430);
var G__34425 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34430);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34424,G__34425) : f.call(null,G__34424,G__34425));
})();
if((x_34431 == null)){
} else {
cljs.core.chunk_append(b,x_34431);
}

var G__34432 = (i_34430 + (1));
i_34430 = G__34432;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__34426 = idx;
var G__34427 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34426,G__34427) : f.call(null,G__34426,G__34427));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__34646 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34646) : p.call(null,G__34646));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34648 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34648) : p.call(null,G__34648));
})();
if(cljs.core.truth_(and__23532__auto__)){
var G__34649 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34649) : p.call(null,G__34649));
} else {
return and__23532__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34651 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34651) : p.call(null,G__34651));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34653 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34653) : p.call(null,G__34653));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var G__34654 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34654) : p.call(null,G__34654));
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__34823__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__34823 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34824__i = 0, G__34824__a = new Array(arguments.length -  3);
while (G__34824__i < G__34824__a.length) {G__34824__a[G__34824__i] = arguments[G__34824__i + 3]; ++G__34824__i;}
  args = new cljs.core.IndexedSeq(G__34824__a,0);
} 
return G__34823__delegate.call(this,x,y,z,args);};
G__34823.cljs$lang$maxFixedArity = 3;
G__34823.cljs$lang$applyTo = (function (arglist__34825){
var x = cljs.core.first(arglist__34825);
arglist__34825 = cljs.core.next(arglist__34825);
var y = cljs.core.first(arglist__34825);
arglist__34825 = cljs.core.next(arglist__34825);
var z = cljs.core.first(arglist__34825);
var args = cljs.core.rest(arglist__34825);
return G__34823__delegate(x,y,z,args);
});
G__34823.cljs$core$IFn$_invoke$arity$variadic = G__34823__delegate;
return G__34823;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__34826 = null;
if (arguments.length > 3) {
var G__34827__i = 0, G__34827__a = new Array(arguments.length -  3);
while (G__34827__i < G__34827__a.length) {G__34827__a[G__34827__i] = arguments[G__34827__i + 3]; ++G__34827__i;}
G__34826 = new cljs.core.IndexedSeq(G__34827__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34826);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34686 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34686) : p1.call(null,G__34686));
})();
if(cljs.core.truth_(and__23532__auto__)){
var G__34687 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34687) : p2.call(null,G__34687));
} else {
return and__23532__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34689 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34689) : p1.call(null,G__34689));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34691 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34691) : p1.call(null,G__34691));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var and__23532__auto____$2 = (function (){var G__34693 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34693) : p2.call(null,G__34693));
})();
if(cljs.core.truth_(and__23532__auto____$2)){
var G__34694 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34694) : p2.call(null,G__34694));
} else {
return and__23532__auto____$2;
}
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34696 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34696) : p1.call(null,G__34696));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34698 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34698) : p1.call(null,G__34698));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var and__23532__auto____$2 = (function (){var G__34700 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34700) : p1.call(null,G__34700));
})();
if(cljs.core.truth_(and__23532__auto____$2)){
var and__23532__auto____$3 = (function (){var G__34702 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34702) : p2.call(null,G__34702));
})();
if(cljs.core.truth_(and__23532__auto____$3)){
var and__23532__auto____$4 = (function (){var G__34704 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34704) : p2.call(null,G__34704));
})();
if(cljs.core.truth_(and__23532__auto____$4)){
var G__34705 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34705) : p2.call(null,G__34705));
} else {
return and__23532__auto____$4;
}
} else {
return and__23532__auto____$3;
}
} else {
return and__23532__auto____$2;
}
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__34828__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__34433_SHARP_){
var and__23532__auto__ = (function (){var G__34710 = p1__34433_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34710) : p1.call(null,G__34710));
})();
if(cljs.core.truth_(and__23532__auto__)){
var G__34711 = p1__34433_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34711) : p2.call(null,G__34711));
} else {
return and__23532__auto__;
}
}),args)));
};
var G__34828 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34829__i = 0, G__34829__a = new Array(arguments.length -  3);
while (G__34829__i < G__34829__a.length) {G__34829__a[G__34829__i] = arguments[G__34829__i + 3]; ++G__34829__i;}
  args = new cljs.core.IndexedSeq(G__34829__a,0);
} 
return G__34828__delegate.call(this,x,y,z,args);};
G__34828.cljs$lang$maxFixedArity = 3;
G__34828.cljs$lang$applyTo = (function (arglist__34830){
var x = cljs.core.first(arglist__34830);
arglist__34830 = cljs.core.next(arglist__34830);
var y = cljs.core.first(arglist__34830);
arglist__34830 = cljs.core.next(arglist__34830);
var z = cljs.core.first(arglist__34830);
var args = cljs.core.rest(arglist__34830);
return G__34828__delegate(x,y,z,args);
});
G__34828.cljs$core$IFn$_invoke$arity$variadic = G__34828__delegate;
return G__34828;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__34831 = null;
if (arguments.length > 3) {
var G__34832__i = 0, G__34832__a = new Array(arguments.length -  3);
while (G__34832__i < G__34832__a.length) {G__34832__a[G__34832__i] = arguments[G__34832__i + 3]; ++G__34832__i;}
G__34831 = new cljs.core.IndexedSeq(G__34832__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34757 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34757) : p1.call(null,G__34757));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34759 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34759) : p2.call(null,G__34759));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var G__34760 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34760) : p3.call(null,G__34760));
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34762 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34762) : p1.call(null,G__34762));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34764 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34764) : p2.call(null,G__34764));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var and__23532__auto____$2 = (function (){var G__34766 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34766) : p3.call(null,G__34766));
})();
if(cljs.core.truth_(and__23532__auto____$2)){
var and__23532__auto____$3 = (function (){var G__34768 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34768) : p1.call(null,G__34768));
})();
if(cljs.core.truth_(and__23532__auto____$3)){
var and__23532__auto____$4 = (function (){var G__34770 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34770) : p2.call(null,G__34770));
})();
if(cljs.core.truth_(and__23532__auto____$4)){
var G__34771 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34771) : p3.call(null,G__34771));
} else {
return and__23532__auto____$4;
}
} else {
return and__23532__auto____$3;
}
} else {
return and__23532__auto____$2;
}
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__23532__auto__ = (function (){var G__34773 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34773) : p1.call(null,G__34773));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34775 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34775) : p2.call(null,G__34775));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var and__23532__auto____$2 = (function (){var G__34777 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34777) : p3.call(null,G__34777));
})();
if(cljs.core.truth_(and__23532__auto____$2)){
var and__23532__auto____$3 = (function (){var G__34779 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34779) : p1.call(null,G__34779));
})();
if(cljs.core.truth_(and__23532__auto____$3)){
var and__23532__auto____$4 = (function (){var G__34781 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34781) : p2.call(null,G__34781));
})();
if(cljs.core.truth_(and__23532__auto____$4)){
var and__23532__auto____$5 = (function (){var G__34783 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34783) : p3.call(null,G__34783));
})();
if(cljs.core.truth_(and__23532__auto____$5)){
var and__23532__auto____$6 = (function (){var G__34785 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34785) : p1.call(null,G__34785));
})();
if(cljs.core.truth_(and__23532__auto____$6)){
var and__23532__auto____$7 = (function (){var G__34787 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34787) : p2.call(null,G__34787));
})();
if(cljs.core.truth_(and__23532__auto____$7)){
var G__34788 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34788) : p3.call(null,G__34788));
} else {
return and__23532__auto____$7;
}
} else {
return and__23532__auto____$6;
}
} else {
return and__23532__auto____$5;
}
} else {
return and__23532__auto____$4;
}
} else {
return and__23532__auto____$3;
}
} else {
return and__23532__auto____$2;
}
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__34833__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__34434_SHARP_){
var and__23532__auto__ = (function (){var G__34795 = p1__34434_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34795) : p1.call(null,G__34795));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34797 = p1__34434_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34797) : p2.call(null,G__34797));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var G__34798 = p1__34434_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34798) : p3.call(null,G__34798));
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
}),args)));
};
var G__34833 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34834__i = 0, G__34834__a = new Array(arguments.length -  3);
while (G__34834__i < G__34834__a.length) {G__34834__a[G__34834__i] = arguments[G__34834__i + 3]; ++G__34834__i;}
  args = new cljs.core.IndexedSeq(G__34834__a,0);
} 
return G__34833__delegate.call(this,x,y,z,args);};
G__34833.cljs$lang$maxFixedArity = 3;
G__34833.cljs$lang$applyTo = (function (arglist__34835){
var x = cljs.core.first(arglist__34835);
arglist__34835 = cljs.core.next(arglist__34835);
var y = cljs.core.first(arglist__34835);
arglist__34835 = cljs.core.next(arglist__34835);
var z = cljs.core.first(arglist__34835);
var args = cljs.core.rest(arglist__34835);
return G__34833__delegate(x,y,z,args);
});
G__34833.cljs$core$IFn$_invoke$arity$variadic = G__34833__delegate;
return G__34833;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__34836 = null;
if (arguments.length > 3) {
var G__34837__i = 0, G__34837__a = new Array(arguments.length -  3);
while (G__34837__i < G__34837__a.length) {G__34837__a[G__34837__i] = arguments[G__34837__i + 3]; ++G__34837__i;}
G__34836 = new cljs.core.IndexedSeq(G__34837__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34836);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__34838__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34435_SHARP_){
var G__34814 = x;
return (p1__34435_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34435_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34814) : p1__34435_SHARP_.call(null,G__34814));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34436_SHARP_){
var and__23532__auto__ = (function (){var G__34816 = x;
return (p1__34436_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34436_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34816) : p1__34436_SHARP_.call(null,G__34816));
})();
if(cljs.core.truth_(and__23532__auto__)){
var G__34817 = y;
return (p1__34436_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34436_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34817) : p1__34436_SHARP_.call(null,G__34817));
} else {
return and__23532__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34437_SHARP_){
var and__23532__auto__ = (function (){var G__34819 = x;
return (p1__34437_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34437_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34819) : p1__34437_SHARP_.call(null,G__34819));
})();
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__34821 = y;
return (p1__34437_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34437_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34821) : p1__34437_SHARP_.call(null,G__34821));
})();
if(cljs.core.truth_(and__23532__auto____$1)){
var G__34822 = z;
return (p1__34437_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34437_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34822) : p1__34437_SHARP_.call(null,G__34822));
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__34839__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__34438_SHARP_){
return cljs.core.every_QMARK_(p1__34438_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__34839 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34840__i = 0, G__34840__a = new Array(arguments.length -  3);
while (G__34840__i < G__34840__a.length) {G__34840__a[G__34840__i] = arguments[G__34840__i + 3]; ++G__34840__i;}
  args = new cljs.core.IndexedSeq(G__34840__a,0);
} 
return G__34839__delegate.call(this,x,y,z,args);};
G__34839.cljs$lang$maxFixedArity = 3;
G__34839.cljs$lang$applyTo = (function (arglist__34841){
var x = cljs.core.first(arglist__34841);
arglist__34841 = cljs.core.next(arglist__34841);
var y = cljs.core.first(arglist__34841);
arglist__34841 = cljs.core.next(arglist__34841);
var z = cljs.core.first(arglist__34841);
var args = cljs.core.rest(arglist__34841);
return G__34839__delegate(x,y,z,args);
});
G__34839.cljs$core$IFn$_invoke$arity$variadic = G__34839__delegate;
return G__34839;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__34842 = null;
if (arguments.length > 3) {
var G__34843__i = 0, G__34843__a = new Array(arguments.length -  3);
while (G__34843__i < G__34843__a.length) {G__34843__a[G__34843__i] = arguments[G__34843__i + 3]; ++G__34843__i;}
G__34842 = new cljs.core.IndexedSeq(G__34843__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__34838 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__34844__i = 0, G__34844__a = new Array(arguments.length -  3);
while (G__34844__i < G__34844__a.length) {G__34844__a[G__34844__i] = arguments[G__34844__i + 3]; ++G__34844__i;}
  ps = new cljs.core.IndexedSeq(G__34844__a,0);
} 
return G__34838__delegate.call(this,p1,p2,p3,ps);};
G__34838.cljs$lang$maxFixedArity = 3;
G__34838.cljs$lang$applyTo = (function (arglist__34845){
var p1 = cljs.core.first(arglist__34845);
arglist__34845 = cljs.core.next(arglist__34845);
var p2 = cljs.core.first(arglist__34845);
arglist__34845 = cljs.core.next(arglist__34845);
var p3 = cljs.core.first(arglist__34845);
var ps = cljs.core.rest(arglist__34845);
return G__34838__delegate(p1,p2,p3,ps);
});
G__34838.cljs$core$IFn$_invoke$arity$variadic = G__34838__delegate;
return G__34838;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__34846 = null;
if (arguments.length > 3) {
var G__34847__i = 0, G__34847__a = new Array(arguments.length -  3);
while (G__34847__i < G__34847__a.length) {G__34847__a[G__34847__i] = arguments[G__34847__i + 3]; ++G__34847__i;}
G__34846 = new cljs.core.IndexedSeq(G__34847__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__34846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__35053 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35053) : p.call(null,G__35053));
});
var sp1__2 = (function (x,y){
var or__23544__auto__ = (function (){var G__35055 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35055) : p.call(null,G__35055));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var G__35056 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35056) : p.call(null,G__35056));
}
});
var sp1__3 = (function (x,y,z){
var or__23544__auto__ = (function (){var G__35058 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35058) : p.call(null,G__35058));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var G__35060 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35060) : p.call(null,G__35060));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var G__35061 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__35061) : p.call(null,G__35061));
}
}
});
var sp1__4 = (function() { 
var G__35222__delegate = function (x,y,z,args){
var or__23544__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__35222 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35223__i = 0, G__35223__a = new Array(arguments.length -  3);
while (G__35223__i < G__35223__a.length) {G__35223__a[G__35223__i] = arguments[G__35223__i + 3]; ++G__35223__i;}
  args = new cljs.core.IndexedSeq(G__35223__a,0);
} 
return G__35222__delegate.call(this,x,y,z,args);};
G__35222.cljs$lang$maxFixedArity = 3;
G__35222.cljs$lang$applyTo = (function (arglist__35224){
var x = cljs.core.first(arglist__35224);
arglist__35224 = cljs.core.next(arglist__35224);
var y = cljs.core.first(arglist__35224);
arglist__35224 = cljs.core.next(arglist__35224);
var z = cljs.core.first(arglist__35224);
var args = cljs.core.rest(arglist__35224);
return G__35222__delegate(x,y,z,args);
});
G__35222.cljs$core$IFn$_invoke$arity$variadic = G__35222__delegate;
return G__35222;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__35225 = null;
if (arguments.length > 3) {
var G__35226__i = 0, G__35226__a = new Array(arguments.length -  3);
while (G__35226__i < G__35226__a.length) {G__35226__a[G__35226__i] = arguments[G__35226__i + 3]; ++G__35226__i;}
G__35225 = new cljs.core.IndexedSeq(G__35226__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__23544__auto__ = (function (){var G__35093 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35093) : p1.call(null,G__35093));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var G__35094 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35094) : p2.call(null,G__35094));
}
});
var sp2__2 = (function (x,y){
var or__23544__auto__ = (function (){var G__35096 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35096) : p1.call(null,G__35096));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var G__35098 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35098) : p1.call(null,G__35098));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var or__23544__auto____$2 = (function (){var G__35100 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35100) : p2.call(null,G__35100));
})();
if(cljs.core.truth_(or__23544__auto____$2)){
return or__23544__auto____$2;
} else {
var G__35101 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35101) : p2.call(null,G__35101));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__23544__auto__ = (function (){var G__35103 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35103) : p1.call(null,G__35103));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var G__35105 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35105) : p1.call(null,G__35105));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var or__23544__auto____$2 = (function (){var G__35107 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35107) : p1.call(null,G__35107));
})();
if(cljs.core.truth_(or__23544__auto____$2)){
return or__23544__auto____$2;
} else {
var or__23544__auto____$3 = (function (){var G__35109 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35109) : p2.call(null,G__35109));
})();
if(cljs.core.truth_(or__23544__auto____$3)){
return or__23544__auto____$3;
} else {
var or__23544__auto____$4 = (function (){var G__35111 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35111) : p2.call(null,G__35111));
})();
if(cljs.core.truth_(or__23544__auto____$4)){
return or__23544__auto____$4;
} else {
var G__35112 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35112) : p2.call(null,G__35112));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__35227__delegate = function (x,y,z,args){
var or__23544__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.some(((function (or__23544__auto__){
return (function (p1__34848_SHARP_){
var or__23544__auto____$1 = (function (){var G__35114 = p1__34848_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35114) : p1.call(null,G__35114));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var G__35115 = p1__34848_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35115) : p2.call(null,G__35115));
}
});})(or__23544__auto__))
,args);
}
};
var G__35227 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35228__i = 0, G__35228__a = new Array(arguments.length -  3);
while (G__35228__i < G__35228__a.length) {G__35228__a[G__35228__i] = arguments[G__35228__i + 3]; ++G__35228__i;}
  args = new cljs.core.IndexedSeq(G__35228__a,0);
} 
return G__35227__delegate.call(this,x,y,z,args);};
G__35227.cljs$lang$maxFixedArity = 3;
G__35227.cljs$lang$applyTo = (function (arglist__35229){
var x = cljs.core.first(arglist__35229);
arglist__35229 = cljs.core.next(arglist__35229);
var y = cljs.core.first(arglist__35229);
arglist__35229 = cljs.core.next(arglist__35229);
var z = cljs.core.first(arglist__35229);
var args = cljs.core.rest(arglist__35229);
return G__35227__delegate(x,y,z,args);
});
G__35227.cljs$core$IFn$_invoke$arity$variadic = G__35227__delegate;
return G__35227;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__35230 = null;
if (arguments.length > 3) {
var G__35231__i = 0, G__35231__a = new Array(arguments.length -  3);
while (G__35231__i < G__35231__a.length) {G__35231__a[G__35231__i] = arguments[G__35231__i + 3]; ++G__35231__i;}
G__35230 = new cljs.core.IndexedSeq(G__35231__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__23544__auto__ = (function (){var G__35161 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35161) : p1.call(null,G__35161));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var G__35163 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35163) : p2.call(null,G__35163));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var G__35164 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35164) : p3.call(null,G__35164));
}
}
});
var sp3__2 = (function (x,y){
var or__23544__auto__ = (function (){var G__35166 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35166) : p1.call(null,G__35166));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var G__35168 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35168) : p2.call(null,G__35168));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var or__23544__auto____$2 = (function (){var G__35170 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35170) : p3.call(null,G__35170));
})();
if(cljs.core.truth_(or__23544__auto____$2)){
return or__23544__auto____$2;
} else {
var or__23544__auto____$3 = (function (){var G__35172 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35172) : p1.call(null,G__35172));
})();
if(cljs.core.truth_(or__23544__auto____$3)){
return or__23544__auto____$3;
} else {
var or__23544__auto____$4 = (function (){var G__35174 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35174) : p2.call(null,G__35174));
})();
if(cljs.core.truth_(or__23544__auto____$4)){
return or__23544__auto____$4;
} else {
var G__35175 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35175) : p3.call(null,G__35175));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__23544__auto__ = (function (){var G__35177 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35177) : p1.call(null,G__35177));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var G__35179 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35179) : p2.call(null,G__35179));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var or__23544__auto____$2 = (function (){var G__35181 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35181) : p3.call(null,G__35181));
})();
if(cljs.core.truth_(or__23544__auto____$2)){
return or__23544__auto____$2;
} else {
var or__23544__auto____$3 = (function (){var G__35183 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35183) : p1.call(null,G__35183));
})();
if(cljs.core.truth_(or__23544__auto____$3)){
return or__23544__auto____$3;
} else {
var or__23544__auto____$4 = (function (){var G__35185 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35185) : p2.call(null,G__35185));
})();
if(cljs.core.truth_(or__23544__auto____$4)){
return or__23544__auto____$4;
} else {
var or__23544__auto____$5 = (function (){var G__35187 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35187) : p3.call(null,G__35187));
})();
if(cljs.core.truth_(or__23544__auto____$5)){
return or__23544__auto____$5;
} else {
var or__23544__auto____$6 = (function (){var G__35189 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35189) : p1.call(null,G__35189));
})();
if(cljs.core.truth_(or__23544__auto____$6)){
return or__23544__auto____$6;
} else {
var or__23544__auto____$7 = (function (){var G__35191 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35191) : p2.call(null,G__35191));
})();
if(cljs.core.truth_(or__23544__auto____$7)){
return or__23544__auto____$7;
} else {
var G__35192 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35192) : p3.call(null,G__35192));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__35232__delegate = function (x,y,z,args){
var or__23544__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.some(((function (or__23544__auto__){
return (function (p1__34849_SHARP_){
var or__23544__auto____$1 = (function (){var G__35194 = p1__34849_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__35194) : p1.call(null,G__35194));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var or__23544__auto____$2 = (function (){var G__35196 = p1__34849_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__35196) : p2.call(null,G__35196));
})();
if(cljs.core.truth_(or__23544__auto____$2)){
return or__23544__auto____$2;
} else {
var G__35197 = p1__34849_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__35197) : p3.call(null,G__35197));
}
}
});})(or__23544__auto__))
,args);
}
};
var G__35232 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35233__i = 0, G__35233__a = new Array(arguments.length -  3);
while (G__35233__i < G__35233__a.length) {G__35233__a[G__35233__i] = arguments[G__35233__i + 3]; ++G__35233__i;}
  args = new cljs.core.IndexedSeq(G__35233__a,0);
} 
return G__35232__delegate.call(this,x,y,z,args);};
G__35232.cljs$lang$maxFixedArity = 3;
G__35232.cljs$lang$applyTo = (function (arglist__35234){
var x = cljs.core.first(arglist__35234);
arglist__35234 = cljs.core.next(arglist__35234);
var y = cljs.core.first(arglist__35234);
arglist__35234 = cljs.core.next(arglist__35234);
var z = cljs.core.first(arglist__35234);
var args = cljs.core.rest(arglist__35234);
return G__35232__delegate(x,y,z,args);
});
G__35232.cljs$core$IFn$_invoke$arity$variadic = G__35232__delegate;
return G__35232;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__35235 = null;
if (arguments.length > 3) {
var G__35236__i = 0, G__35236__a = new Array(arguments.length -  3);
while (G__35236__i < G__35236__a.length) {G__35236__a[G__35236__i] = arguments[G__35236__i + 3]; ++G__35236__i;}
G__35235 = new cljs.core.IndexedSeq(G__35236__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__35237__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__34850_SHARP_){
var G__35213 = x;
return (p1__34850_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34850_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35213) : p1__34850_SHARP_.call(null,G__35213));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__34851_SHARP_){
var or__23544__auto__ = (function (){var G__35215 = x;
return (p1__34851_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34851_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35215) : p1__34851_SHARP_.call(null,G__35215));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var G__35216 = y;
return (p1__34851_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34851_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35216) : p1__34851_SHARP_.call(null,G__35216));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__34852_SHARP_){
var or__23544__auto__ = (function (){var G__35218 = x;
return (p1__34852_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34852_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35218) : p1__34852_SHARP_.call(null,G__35218));
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var G__35220 = y;
return (p1__34852_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34852_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35220) : p1__34852_SHARP_.call(null,G__35220));
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var G__35221 = z;
return (p1__34852_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34852_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35221) : p1__34852_SHARP_.call(null,G__35221));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__35238__delegate = function (x,y,z,args){
var or__23544__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.some(((function (or__23544__auto__,ps__$1){
return (function (p1__34853_SHARP_){
return cljs.core.some(p1__34853_SHARP_,args);
});})(or__23544__auto__,ps__$1))
,ps__$1);
}
};
var G__35238 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35239__i = 0, G__35239__a = new Array(arguments.length -  3);
while (G__35239__i < G__35239__a.length) {G__35239__a[G__35239__i] = arguments[G__35239__i + 3]; ++G__35239__i;}
  args = new cljs.core.IndexedSeq(G__35239__a,0);
} 
return G__35238__delegate.call(this,x,y,z,args);};
G__35238.cljs$lang$maxFixedArity = 3;
G__35238.cljs$lang$applyTo = (function (arglist__35240){
var x = cljs.core.first(arglist__35240);
arglist__35240 = cljs.core.next(arglist__35240);
var y = cljs.core.first(arglist__35240);
arglist__35240 = cljs.core.next(arglist__35240);
var z = cljs.core.first(arglist__35240);
var args = cljs.core.rest(arglist__35240);
return G__35238__delegate(x,y,z,args);
});
G__35238.cljs$core$IFn$_invoke$arity$variadic = G__35238__delegate;
return G__35238;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__35241 = null;
if (arguments.length > 3) {
var G__35242__i = 0, G__35242__a = new Array(arguments.length -  3);
while (G__35242__i < G__35242__a.length) {G__35242__a[G__35242__i] = arguments[G__35242__i + 3]; ++G__35242__i;}
G__35241 = new cljs.core.IndexedSeq(G__35242__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__35237 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__35243__i = 0, G__35243__a = new Array(arguments.length -  3);
while (G__35243__i < G__35243__a.length) {G__35243__a[G__35243__i] = arguments[G__35243__i + 3]; ++G__35243__i;}
  ps = new cljs.core.IndexedSeq(G__35243__a,0);
} 
return G__35237__delegate.call(this,p1,p2,p3,ps);};
G__35237.cljs$lang$maxFixedArity = 3;
G__35237.cljs$lang$applyTo = (function (arglist__35244){
var p1 = cljs.core.first(arglist__35244);
arglist__35244 = cljs.core.next(arglist__35244);
var p2 = cljs.core.first(arglist__35244);
arglist__35244 = cljs.core.next(arglist__35244);
var p3 = cljs.core.first(arglist__35244);
var ps = cljs.core.rest(arglist__35244);
return G__35237__delegate(p1,p2,p3,ps);
});
G__35237.cljs$core$IFn$_invoke$arity$variadic = G__35237__delegate;
return G__35237;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__35245 = null;
if (arguments.length > 3) {
var G__35246__i = 0, G__35246__a = new Array(arguments.length -  3);
while (G__35246__i < G__35246__a.length) {G__35246__a[G__35246__i] = arguments[G__35246__i + 3]; ++G__35246__i;}
G__35245 = new cljs.core.IndexedSeq(G__35246__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__35245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__35301 = null;
var G__35301__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35301__1 = (function (result){
var G__35287 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35287) : rf.call(null,G__35287));
});
var G__35301__2 = (function (result,input){
var G__35288 = result;
var G__35289 = (function (){var G__35290 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35290) : f.call(null,G__35290));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35288,G__35289) : rf.call(null,G__35288,G__35289));
});
var G__35301__3 = (function() { 
var G__35302__delegate = function (result,input,inputs){
var G__35291 = result;
var G__35292 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35291,G__35292) : rf.call(null,G__35291,G__35292));
};
var G__35302 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__35303__i = 0, G__35303__a = new Array(arguments.length -  2);
while (G__35303__i < G__35303__a.length) {G__35303__a[G__35303__i] = arguments[G__35303__i + 2]; ++G__35303__i;}
  inputs = new cljs.core.IndexedSeq(G__35303__a,0);
} 
return G__35302__delegate.call(this,result,input,inputs);};
G__35302.cljs$lang$maxFixedArity = 2;
G__35302.cljs$lang$applyTo = (function (arglist__35304){
var result = cljs.core.first(arglist__35304);
arglist__35304 = cljs.core.next(arglist__35304);
var input = cljs.core.first(arglist__35304);
var inputs = cljs.core.rest(arglist__35304);
return G__35302__delegate(result,input,inputs);
});
G__35302.cljs$core$IFn$_invoke$arity$variadic = G__35302__delegate;
return G__35302;
})()
;
G__35301 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__35301__0.call(this);
case 1:
return G__35301__1.call(this,result);
case 2:
return G__35301__2.call(this,result,input);
default:
var G__35305 = null;
if (arguments.length > 2) {
var G__35306__i = 0, G__35306__a = new Array(arguments.length -  2);
while (G__35306__i < G__35306__a.length) {G__35306__a[G__35306__i] = arguments[G__35306__i + 2]; ++G__35306__i;}
G__35305 = new cljs.core.IndexedSeq(G__35306__a,0);
}
return G__35301__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__35305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35301.cljs$lang$maxFixedArity = 2;
G__35301.cljs$lang$applyTo = G__35301__3.cljs$lang$applyTo;
G__35301.cljs$core$IFn$_invoke$arity$0 = G__35301__0;
G__35301.cljs$core$IFn$_invoke$arity$1 = G__35301__1;
G__35301.cljs$core$IFn$_invoke$arity$2 = G__35301__2;
G__35301.cljs$core$IFn$_invoke$arity$variadic = G__35301__3.cljs$core$IFn$_invoke$arity$variadic;
return G__35301;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24431__auto___35307 = size;
var i_35308 = (0);
while(true){
if((i_35308 < n__24431__auto___35307)){
cljs.core.chunk_append(b,(function (){var G__35293 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35308);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35293) : f.call(null,G__35293));
})());

var G__35309 = (i_35308 + (1));
i_35308 = G__35309;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__35294 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35294) : f.call(null,G__35294));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__35295 = cljs.core.first(s1);
var G__35296 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35295,G__35296) : f.call(null,G__35295,G__35296));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__35297 = cljs.core.first(s1);
var G__35298 = cljs.core.first(s2);
var G__35299 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35297,G__35298,G__35299) : f.call(null,G__35297,G__35298,G__35299));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__35310__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__35247_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__35247_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__35310 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__35311__i = 0, G__35311__a = new Array(arguments.length -  4);
while (G__35311__i < G__35311__a.length) {G__35311__a[G__35311__i] = arguments[G__35311__i + 4]; ++G__35311__i;}
  colls = new cljs.core.IndexedSeq(G__35311__a,0);
} 
return G__35310__delegate.call(this,f,c1,c2,c3,colls);};
G__35310.cljs$lang$maxFixedArity = 4;
G__35310.cljs$lang$applyTo = (function (arglist__35312){
var f = cljs.core.first(arglist__35312);
arglist__35312 = cljs.core.next(arglist__35312);
var c1 = cljs.core.first(arglist__35312);
arglist__35312 = cljs.core.next(arglist__35312);
var c2 = cljs.core.first(arglist__35312);
arglist__35312 = cljs.core.next(arglist__35312);
var c3 = cljs.core.first(arglist__35312);
var colls = cljs.core.rest(arglist__35312);
return G__35310__delegate(f,c1,c2,c3,colls);
});
G__35310.cljs$core$IFn$_invoke$arity$variadic = G__35310__delegate;
return G__35310;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__35313 = null;
if (arguments.length > 4) {
var G__35314__i = 0, G__35314__a = new Array(arguments.length -  4);
while (G__35314__i < G__35314__a.length) {G__35314__a[G__35314__i] = arguments[G__35314__i + 4]; ++G__35314__i;}
G__35313 = new cljs.core.IndexedSeq(G__35314__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__35313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__35323 = null;
var G__35323__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35323__1 = (function (result){
var G__35320 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35320) : rf.call(null,G__35320));
});
var G__35323__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__35321 = result;
var G__35322 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35321,G__35322) : rf.call(null,G__35321,G__35322));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__35323 = function(result,input){
switch(arguments.length){
case 0:
return G__35323__0.call(this);
case 1:
return G__35323__1.call(this,result);
case 2:
return G__35323__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35323.cljs$core$IFn$_invoke$arity$0 = G__35323__0;
G__35323.cljs$core$IFn$_invoke$arity$1 = G__35323__1;
G__35323.cljs$core$IFn$_invoke$arity$2 = G__35323__2;
return G__35323;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__35330 = null;
var G__35330__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35330__1 = (function (result){
var G__35327 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35327) : rf.call(null,G__35327));
});
var G__35330__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__35328 = result;
var G__35329 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35328,G__35329) : rf.call(null,G__35328,G__35329));
}
});
G__35330 = function(result,input){
switch(arguments.length){
case 0:
return G__35330__0.call(this);
case 1:
return G__35330__1.call(this,result);
case 2:
return G__35330__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35330.cljs$core$IFn$_invoke$arity$0 = G__35330__0;
G__35330.cljs$core$IFn$_invoke$arity$1 = G__35330__1;
G__35330.cljs$core$IFn$_invoke$arity$2 = G__35330__2;
return G__35330;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__35331 = (n__$1 - (1));
var G__35332 = cljs.core.rest(s);
n__$1 = G__35331;
coll__$1 = G__35332;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__35335 = cljs.core.next(s);
var G__35336 = cljs.core.next(lead);
s = G__35335;
lead = G__35336;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__35349 = null;
var G__35349__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35349__1 = (function (result){
var G__35343 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35343) : rf.call(null,G__35343));
});
var G__35349__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__23532__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__23532__auto__)){
var G__35344 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35344) : pred.call(null,G__35344));
} else {
return and__23532__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__35345 = result;
var G__35346 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35345,G__35346) : rf.call(null,G__35345,G__35346));
}
});
G__35349 = function(result,input){
switch(arguments.length){
case 0:
return G__35349__0.call(this);
case 1:
return G__35349__1.call(this,result);
case 2:
return G__35349__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35349.cljs$core$IFn$_invoke$arity$0 = G__35349__0;
G__35349.cljs$core$IFn$_invoke$arity$1 = G__35349__1;
G__35349.cljs$core$IFn$_invoke$arity$2 = G__35349__2;
return G__35349;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__23532__auto__ = s;
if(and__23532__auto__){
var G__35348 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__35348) : pred__$1.call(null,G__35348));
} else {
return and__23532__auto__;
}
})())){
var G__35350 = pred__$1;
var G__35351 = cljs.core.rest(s);
pred__$1 = G__35350;
coll__$1 = G__35351;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__35360 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35360) : f.call(null,G__35360));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__35363__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__35363 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__35364__i = 0, G__35364__a = new Array(arguments.length -  2);
while (G__35364__i < G__35364__a.length) {G__35364__a[G__35364__i] = arguments[G__35364__i + 2]; ++G__35364__i;}
  colls = new cljs.core.IndexedSeq(G__35364__a,0);
} 
return G__35363__delegate.call(this,c1,c2,colls);};
G__35363.cljs$lang$maxFixedArity = 2;
G__35363.cljs$lang$applyTo = (function (arglist__35365){
var c1 = cljs.core.first(arglist__35365);
arglist__35365 = cljs.core.next(arglist__35365);
var c2 = cljs.core.first(arglist__35365);
var colls = cljs.core.rest(arglist__35365);
return G__35363__delegate(c1,c2,colls);
});
G__35363.cljs$core$IFn$_invoke$arity$variadic = G__35363__delegate;
return G__35363;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__35366 = null;
if (arguments.length > 2) {
var G__35367__i = 0, G__35367__a = new Array(arguments.length -  2);
while (G__35367__i < G__35367__a.length) {G__35367__a[G__35367__i] = arguments[G__35367__i + 2]; ++G__35367__i;}
G__35366 = new cljs.core.IndexedSeq(G__35367__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__35366);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__35382 = null;
var G__35382__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35382__1 = (function (result){
var G__35375 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35375) : rf.call(null,G__35375));
});
var G__35382__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__35376 = result;
var G__35377 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35376,G__35377) : rf.call(null,G__35376,G__35377));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__35378 = sepr;
var G__35379 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35378,G__35379) : rf.call(null,G__35378,G__35379));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__35380 = result;
var G__35381 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35380,G__35381) : rf.call(null,G__35380,G__35381));
}
});
G__35382 = function(result,input){
switch(arguments.length){
case 0:
return G__35382__0.call(this);
case 1:
return G__35382__1.call(this,result);
case 2:
return G__35382__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35382.cljs$core$IFn$_invoke$arity$0 = G__35382__0;
G__35382.cljs$core$IFn$_invoke$arity$1 = G__35382__1;
G__35382.cljs$core$IFn$_invoke$arity$2 = G__35382__2;
return G__35382;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__35391__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__35391 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__35392__i = 0, G__35392__a = new Array(arguments.length -  1);
while (G__35392__i < G__35392__a.length) {G__35392__a[G__35392__i] = arguments[G__35392__i + 1]; ++G__35392__i;}
  colls = new cljs.core.IndexedSeq(G__35392__a,0);
} 
return G__35391__delegate.call(this,f,colls);};
G__35391.cljs$lang$maxFixedArity = 1;
G__35391.cljs$lang$applyTo = (function (arglist__35393){
var f = cljs.core.first(arglist__35393);
var colls = cljs.core.rest(arglist__35393);
return G__35391__delegate(f,colls);
});
G__35391.cljs$core$IFn$_invoke$arity$variadic = G__35391__delegate;
return G__35391;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__35394 = null;
if (arguments.length > 1) {
var G__35395__i = 0, G__35395__a = new Array(arguments.length -  1);
while (G__35395__i < G__35395__a.length) {G__35395__a[G__35395__i] = arguments[G__35395__i + 1]; ++G__35395__i;}
G__35394 = new cljs.core.IndexedSeq(G__35395__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__35394);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__35414 = null;
var G__35414__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35414__1 = (function (result){
var G__35408 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35408) : rf.call(null,G__35408));
});
var G__35414__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__35409 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35409) : pred.call(null,G__35409));
})())){
var G__35410 = result;
var G__35411 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35410,G__35411) : rf.call(null,G__35410,G__35411));
} else {
return result;
}
});
G__35414 = function(result,input){
switch(arguments.length){
case 0:
return G__35414__0.call(this);
case 1:
return G__35414__1.call(this,result);
case 2:
return G__35414__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35414.cljs$core$IFn$_invoke$arity$0 = G__35414__0;
G__35414.cljs$core$IFn$_invoke$arity$1 = G__35414__1;
G__35414.cljs$core$IFn$_invoke$arity$2 = G__35414__2;
return G__35414;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24431__auto___35415 = size;
var i_35416 = (0);
while(true){
if((i_35416 < n__24431__auto___35415)){
if(cljs.core.truth_((function (){var G__35412 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35416);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35412) : pred.call(null,G__35412));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_35416));
} else {
}

var G__35417 = (i_35416 + (1));
i_35416 = G__35417;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__35413 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35413) : pred.call(null,G__35413));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__35424 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__35424) : branch_QMARK_.call(null,G__35424));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__35425 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__35425) : children.call(null,G__35425));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__35426_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__35426_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__35429 = to;
if(G__35429){
var bit__24218__auto__ = (G__35429.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24218__auto__) || (G__35429.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__35430 = to;
if(G__35430){
var bit__24218__auto__ = (G__35430.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24218__auto__) || (G__35430.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__35432 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35432) : f.call(null,G__35432));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__35433__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__35433 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__35434__i = 0, G__35434__a = new Array(arguments.length -  4);
while (G__35434__i < G__35434__a.length) {G__35434__a[G__35434__i] = arguments[G__35434__i + 4]; ++G__35434__i;}
  colls = new cljs.core.IndexedSeq(G__35434__a,0);
} 
return G__35433__delegate.call(this,f,c1,c2,c3,colls);};
G__35433.cljs$lang$maxFixedArity = 4;
G__35433.cljs$lang$applyTo = (function (arglist__35435){
var f = cljs.core.first(arglist__35435);
arglist__35435 = cljs.core.next(arglist__35435);
var c1 = cljs.core.first(arglist__35435);
arglist__35435 = cljs.core.next(arglist__35435);
var c2 = cljs.core.first(arglist__35435);
arglist__35435 = cljs.core.next(arglist__35435);
var c3 = cljs.core.first(arglist__35435);
var colls = cljs.core.rest(arglist__35435);
return G__35433__delegate(f,c1,c2,c3,colls);
});
G__35433.cljs$core$IFn$_invoke$arity$variadic = G__35433__delegate;
return G__35433;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__35436 = null;
if (arguments.length > 4) {
var G__35437__i = 0, G__35437__a = new Array(arguments.length -  4);
while (G__35437__i < G__35437__a.length) {G__35437__a[G__35437__i] = arguments[G__35437__i + 4]; ++G__35437__i;}
G__35436 = new cljs.core.IndexedSeq(G__35437__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__35436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__35439 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35439) : pred.call(null,G__35439));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__35454 = m__$1;
if(G__35454){
var bit__24225__auto__ = (G__35454.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24225__auto__) || (G__35454.cljs$core$ILookup$)){
return true;
} else {
if((!G__35454.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__35454);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__35454);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__35455 = sentinel;
var G__35456 = m__$2;
var G__35457 = cljs.core.next(ks__$1);
sentinel = G__35455;
m__$1 = G__35456;
ks__$1 = G__35457;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__35458,v){
var vec__35463 = p__35458;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35463,(0),null);
var ks = cljs.core.nthnext(vec__35463,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__35464,f){
var vec__35502 = p__35464;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35502,(0),null);
var ks = cljs.core.nthnext(vec__35502,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35503 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35503) : f.call(null,G__35503));
})());
}
});
var update_in__4 = (function (m,p__35465,f,a){
var vec__35504 = p__35465;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35504,(0),null);
var ks = cljs.core.nthnext(vec__35504,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35505 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35506 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35505,G__35506) : f.call(null,G__35505,G__35506));
})());
}
});
var update_in__5 = (function (m,p__35466,f,a,b){
var vec__35507 = p__35466;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35507,(0),null);
var ks = cljs.core.nthnext(vec__35507,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35508 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35509 = a;
var G__35510 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35508,G__35509,G__35510) : f.call(null,G__35508,G__35509,G__35510));
})());
}
});
var update_in__6 = (function (m,p__35467,f,a,b,c){
var vec__35511 = p__35467;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35511,(0),null);
var ks = cljs.core.nthnext(vec__35511,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35512 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35513 = a;
var G__35514 = b;
var G__35515 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__35512,G__35513,G__35514,G__35515) : f.call(null,G__35512,G__35513,G__35514,G__35515));
})());
}
});
var update_in__7 = (function() { 
var G__35517__delegate = function (m,p__35468,f,a,b,c,args){
var vec__35516 = p__35468;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35516,(0),null);
var ks = cljs.core.nthnext(vec__35516,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__35517 = function (m,p__35468,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__35518__i = 0, G__35518__a = new Array(arguments.length -  6);
while (G__35518__i < G__35518__a.length) {G__35518__a[G__35518__i] = arguments[G__35518__i + 6]; ++G__35518__i;}
  args = new cljs.core.IndexedSeq(G__35518__a,0);
} 
return G__35517__delegate.call(this,m,p__35468,f,a,b,c,args);};
G__35517.cljs$lang$maxFixedArity = 6;
G__35517.cljs$lang$applyTo = (function (arglist__35519){
var m = cljs.core.first(arglist__35519);
arglist__35519 = cljs.core.next(arglist__35519);
var p__35468 = cljs.core.first(arglist__35519);
arglist__35519 = cljs.core.next(arglist__35519);
var f = cljs.core.first(arglist__35519);
arglist__35519 = cljs.core.next(arglist__35519);
var a = cljs.core.first(arglist__35519);
arglist__35519 = cljs.core.next(arglist__35519);
var b = cljs.core.first(arglist__35519);
arglist__35519 = cljs.core.next(arglist__35519);
var c = cljs.core.first(arglist__35519);
var args = cljs.core.rest(arglist__35519);
return G__35517__delegate(m,p__35468,f,a,b,c,args);
});
G__35517.cljs$core$IFn$_invoke$arity$variadic = G__35517__delegate;
return G__35517;
})()
;
update_in = function(m,p__35468,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__35468,f);
case 4:
return update_in__4.call(this,m,p__35468,f,a);
case 5:
return update_in__5.call(this,m,p__35468,f,a,b);
case 6:
return update_in__6.call(this,m,p__35468,f,a,b,c);
default:
var G__35520 = null;
if (arguments.length > 6) {
var G__35521__i = 0, G__35521__a = new Array(arguments.length -  6);
while (G__35521__i < G__35521__a.length) {G__35521__a[G__35521__i] = arguments[G__35521__i + 6]; ++G__35521__i;}
G__35520 = new cljs.core.IndexedSeq(G__35521__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__35468,f,a,b,c, G__35520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35532 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35532) : f.call(null,G__35532));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35533 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35534 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35533,G__35534) : f.call(null,G__35533,G__35534));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35535 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35536 = x;
var G__35537 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35535,G__35536,G__35537) : f.call(null,G__35535,G__35536,G__35537));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35538 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35539 = x;
var G__35540 = y;
var G__35541 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__35538,G__35539,G__35540,G__35541) : f.call(null,G__35538,G__35539,G__35540,G__35541));
})());
});
var update__7 = (function() { 
var G__35542__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__35542 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__35543__i = 0, G__35543__a = new Array(arguments.length -  6);
while (G__35543__i < G__35543__a.length) {G__35543__a[G__35543__i] = arguments[G__35543__i + 6]; ++G__35543__i;}
  more = new cljs.core.IndexedSeq(G__35543__a,0);
} 
return G__35542__delegate.call(this,m,k,f,x,y,z,more);};
G__35542.cljs$lang$maxFixedArity = 6;
G__35542.cljs$lang$applyTo = (function (arglist__35544){
var m = cljs.core.first(arglist__35544);
arglist__35544 = cljs.core.next(arglist__35544);
var k = cljs.core.first(arglist__35544);
arglist__35544 = cljs.core.next(arglist__35544);
var f = cljs.core.first(arglist__35544);
arglist__35544 = cljs.core.next(arglist__35544);
var x = cljs.core.first(arglist__35544);
arglist__35544 = cljs.core.next(arglist__35544);
var y = cljs.core.first(arglist__35544);
arglist__35544 = cljs.core.next(arglist__35544);
var z = cljs.core.first(arglist__35544);
var more = cljs.core.rest(arglist__35544);
return G__35542__delegate(m,k,f,x,y,z,more);
});
G__35542.cljs$core$IFn$_invoke$arity$variadic = G__35542__delegate;
return G__35542;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__35545 = null;
if (arguments.length > 6) {
var G__35546__i = 0, G__35546__a = new Array(arguments.length -  6);
while (G__35546__i < G__35546__a.length) {G__35546__a[G__35546__i] = arguments[G__35546__i + 6]; ++G__35546__i;}
G__35545 = new cljs.core.IndexedSeq(G__35546__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__35545);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__35547 = (ll - (5));
var G__35548 = r;
ll = G__35547;
ret = G__35548;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__35553 = cljs.core.pv_aget(node,(0));
var G__35554 = (level - (5));
node = G__35553;
level = G__35554;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__35555 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__35556 = (level - (5));
node = G__35555;
level = G__35556;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__35566 = init__$2;
var G__35567 = (j + i);
var G__35568 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35566,G__35567,G__35568) : f.call(null,G__35566,G__35567,G__35568));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__35579 = (j + (1));
var G__35580 = init__$3;
j = G__35579;
init__$2 = G__35580;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35569 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35569) : cljs.core.deref.call(null,G__35569));
} else {
var G__35581 = (i + len);
var G__35582 = init__$2;
i = G__35581;
init__$1 = G__35582;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__35570 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__35570) : cljs.core.tv_editable_root.call(null,G__35570));
})(),(function (){var G__35571 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__35571) : cljs.core.tv_editable_tail.call(null,G__35571));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__35572 = init__$2;
var G__35573 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35572,G__35573) : f.call(null,G__35572,G__35573));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__35583 = (j + (1));
var G__35584 = init__$3;
j = G__35583;
init__$2 = G__35584;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35574 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35574) : cljs.core.deref.call(null,G__35574));
} else {
var G__35585 = (i + len);
var G__35586 = init__$2;
i = G__35585;
init__$1 = G__35586;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__35575 = coll__$1;
var G__35576 = cljs.core.first_array_for_longvec(coll__$1);
var G__35577 = (0);
var G__35578 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35575,G__35576,G__35577,G__35578) : cljs.core.chunked_seq.call(null,G__35575,G__35576,G__35577,G__35578));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__24431__auto___35587 = len;
var i_35588 = (0);
while(true){
if((i_35588 < n__24431__auto___35587)){
(new_tail[i_35588] = (self__.tail[i_35588]));

var G__35589 = (i_35588 + (1));
i_35588 = G__35589;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__35590 = null;
var G__35590__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__35590__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__35590 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35590__2.call(this,self__,k);
case 3:
return G__35590__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35590.cljs$core$IFn$_invoke$arity$2 = G__35590__2;
G__35590.cljs$core$IFn$_invoke$arity$3 = G__35590__3;
return G__35590;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args35565){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35565)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__35591 = (i + (1));
var G__35592 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__35591;
out = G__35592;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__35593__i = 0, G__35593__a = new Array(arguments.length -  0);
while (G__35593__i < G__35593__a.length) {G__35593__a[G__35593__i] = arguments[G__35593__i + 0]; ++G__35593__i;}
  args = new cljs.core.IndexedSeq(G__35593__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__35594){
var args = cljs.core.seq(arglist__35594);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__35595 = self__.vec;
var G__35596 = self__.node;
var G__35597 = self__.i;
var G__35598 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35595,G__35596,G__35597,G__35598) : cljs.core.chunked_seq.call(null,G__35595,G__35596,G__35597,G__35598));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__35599 = self__.vec;
var G__35600 = (self__.i + self__.off);
var G__35601 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__35599,G__35600,G__35601) : cljs.core.subvec.call(null,G__35599,G__35600,G__35601));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__35602 = self__.vec;
var G__35603 = (self__.i + self__.off);
var G__35604 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__35602,G__35603,G__35604) : cljs.core.subvec.call(null,G__35602,G__35603,G__35604));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__35605 = self__.vec;
var G__35606 = self__.node;
var G__35607 = self__.i;
var G__35608 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35605,G__35606,G__35607,G__35608) : cljs.core.chunked_seq.call(null,G__35605,G__35606,G__35607,G__35608));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__35609 = self__.vec;
var G__35610 = cljs.core.unchecked_array_for(self__.vec,end);
var G__35611 = end;
var G__35612 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35609,G__35610,G__35611,G__35612) : cljs.core.chunked_seq.call(null,G__35609,G__35610,G__35611,G__35612));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__35613 = self__.vec;
var G__35614 = self__.node;
var G__35615 = self__.i;
var G__35616 = self__.off;
var G__35617 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__35613,G__35614,G__35615,G__35616,G__35617) : cljs.core.chunked_seq.call(null,G__35613,G__35614,G__35615,G__35616,G__35617));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__35618 = self__.vec;
var G__35619 = cljs.core.unchecked_array_for(self__.vec,end);
var G__35620 = end;
var G__35621 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__35618,G__35619,G__35620,G__35621) : cljs.core.chunked_seq.call(null,G__35618,G__35619,G__35620,G__35621));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__35623 = self__.meta;
var G__35624 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__35625 = self__.start;
var G__35626 = (function (){var x__23861__auto__ = self__.end;
var y__23862__auto__ = (v_pos + (1));
return ((x__23861__auto__ > y__23862__auto__) ? x__23861__auto__ : y__23862__auto__);
})();
var G__35627 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35623,G__35624,G__35625,G__35626,G__35627) : cljs.core.build_subvec.call(null,G__35623,G__35624,G__35625,G__35626,G__35627));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__35628 = self__.meta;
var G__35629 = self__.v;
var G__35630 = self__.start;
var G__35631 = (self__.end - (1));
var G__35632 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35628,G__35629,G__35630,G__35631,G__35632) : cljs.core.build_subvec.call(null,G__35628,G__35629,G__35630,G__35631,G__35632));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__35634 = meta__$1;
var G__35635 = self__.v;
var G__35636 = self__.start;
var G__35637 = self__.end;
var G__35638 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35634,G__35635,G__35636,G__35637,G__35638) : cljs.core.build_subvec.call(null,G__35634,G__35635,G__35636,G__35637,G__35638));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__35639 = self__.meta;
var G__35640 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__35641 = self__.start;
var G__35642 = (self__.end + (1));
var G__35643 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__35639,G__35640,G__35641,G__35642,G__35643) : cljs.core.build_subvec.call(null,G__35639,G__35640,G__35641,G__35642,G__35643));
});

cljs.core.Subvec.prototype.call = (function() {
var G__35644 = null;
var G__35644__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__35644__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__35644 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35644__2.call(this,self__,k);
case 3:
return G__35644__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35644.cljs$core$IFn$_invoke$arity$2 = G__35644__2;
G__35644.cljs$core$IFn$_invoke$arity$3 = G__35644__3;
return G__35644;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args35622){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35622)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__35645 = meta;
var G__35646 = v.v;
var G__35647 = (v.start + start);
var G__35648 = (v.start + end);
var G__35649 = __hash;
meta = G__35645;
v = G__35646;
start = G__35647;
end = G__35648;
__hash = G__35649;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj35656 = {};
return obj35656;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__35664 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__35665 = (level - (5));
node = G__35664;
level = G__35665;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__35669 = null;
var G__35669__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35669__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35669 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35669__2.call(this,self__,k);
case 3:
return G__35669__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35669.cljs$core$IFn$_invoke$arity$2 = G__35669__2;
G__35669.cljs$core$IFn$_invoke$arity$3 = G__35669__3;
return G__35669;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args35666){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35666)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__23544__auto__ = self__.front;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__23544__auto__ = self__.rear;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__35670 = (i + incr);
i = G__35670;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__35671 = (i + (1));
var G__35672 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__35671;
out = G__35672;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj35676 = {};
return obj35676;
})();
var l = ks.length;
var i_35677 = (0);
while(true){
if((i_35677 < l)){
var k_35678 = (ks[i_35677]);
(new_obj[k_35678] = (obj[k_35678]));

var G__35679 = (i_35677 + (1));
i_35677 = G__35679;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__23532__auto__ = (function (){var G__35683 = k;
return goog.isString(G__35683);
})();
if(cljs.core.truth_(and__23532__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__23532__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__35684 = init__$1;
var G__35685 = k;
var G__35686 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35684,G__35685,G__35686) : f.call(null,G__35684,G__35685,G__35686));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35687 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35687) : cljs.core.deref.call(null,G__35687));
} else {
var G__35693 = cljs.core.rest(keys__$1);
var G__35694 = init__$2;
keys__$1 = G__35693;
init__$1 = G__35694;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__23532__auto__ = (function (){var G__35689 = k;
return goog.isString(G__35689);
})();
if(cljs.core.truth_(and__23532__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__23532__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__35690 = k;
return goog.isString(G__35690);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__23532__auto__ = (function (){var G__35692 = k;
return goog.isString(G__35692);
})();
if(cljs.core.truth_(and__23532__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__23532__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__35680_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__35680_SHARP_,(self__.strobj[p1__35680_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__35695 = null;
var G__35695__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35695__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35695 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35695__2.call(this,self__,k);
case 3:
return G__35695__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35695.cljs$core$IFn$_invoke$arity$2 = G__35695__2;
G__35695.cljs$core$IFn$_invoke$arity$3 = G__35695__3;
return G__35695;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args35681){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35681)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj35697 = {};
return obj35697;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__35698 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35698,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35698,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__35699 = (i + (2));
i = G__35699;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__35700 = (i + (2));
i = G__35700;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__35701 = (i + (2));
i = G__35701;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__35702 = (i + (2));
i = G__35702;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__35703 = (i + (2));
i = G__35703;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__23544__auto__ = (function (){var G__35707 = k;
return goog.isString(G__35707);
})();
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_35708 = (0);
while(true){
if((i_35708 < l)){
(narr[i_35708] = (arr[i_35708]));

var G__35709 = (i_35708 + (1));
i_35708 = G__35709;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35711 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35711) : cljs.core.keys.call(null,G__35711));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35712 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35712) : cljs.core.vals.call(null,G__35712));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35713 = cljs.core.seq(coll);
var chunk__35714 = null;
var count__35715 = (0);
var i__35716 = (0);
while(true){
if((i__35716 < count__35715)){
var vec__35717 = chunk__35714.cljs$core$IIndexed$_nth$arity$2(null,i__35716);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35717,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35717,(1),null);
var G__35718_35731 = v;
var G__35719_35732 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35718_35731,G__35719_35732) : f.call(null,G__35718_35731,G__35719_35732));

var G__35733 = seq__35713;
var G__35734 = chunk__35714;
var G__35735 = count__35715;
var G__35736 = (i__35716 + (1));
seq__35713 = G__35733;
chunk__35714 = G__35734;
count__35715 = G__35735;
i__35716 = G__35736;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35713);
if(temp__4126__auto__){
var seq__35713__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35713__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__35713__$1);
var G__35737 = cljs.core.chunk_rest(seq__35713__$1);
var G__35738 = c__24331__auto__;
var G__35739 = cljs.core.count(c__24331__auto__);
var G__35740 = (0);
seq__35713 = G__35737;
chunk__35714 = G__35738;
count__35715 = G__35739;
i__35716 = G__35740;
continue;
} else {
var vec__35720 = cljs.core.first(seq__35713__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35720,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35720,(1),null);
var G__35721_35741 = v;
var G__35722_35742 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35721_35741,G__35722_35742) : f.call(null,G__35721_35741,G__35722_35742));

var G__35743 = cljs.core.next(seq__35713__$1);
var G__35744 = null;
var G__35745 = (0);
var G__35746 = (0);
seq__35713 = G__35743;
chunk__35714 = G__35744;
count__35715 = G__35745;
i__35716 = G__35746;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__35723 = init__$1;
var G__35724 = (self__.arr[i]);
var G__35725 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35723,G__35724,G__35725) : f.call(null,G__35723,G__35724,G__35725));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35726 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35726) : cljs.core.deref.call(null,G__35726));
} else {
var G__35747 = (i + (2));
var G__35748 = init__$2;
i = G__35747;
init__$1 = G__35748;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__35727 = other;
if(G__35727){
var bit__24218__auto__ = (G__35727.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24218__auto__) || (G__35727.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__35749 = (i + (2));
i = G__35749;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj35729 = {};
return obj35729;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__35750 = (s + (2));
var G__35751 = d;
s = G__35750;
d = G__35751;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__35752 = (s + (2));
var G__35753 = (d + (2));
s = G__35752;
d = G__35753;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__35730 = cljs.core.aclone(self__.arr);
(G__35730[(idx + (1))] = v);

return G__35730;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35754 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35755 = cljs.core.next(es);
ret = G__35754;
es = G__35755;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__35756 = null;
var G__35756__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35756__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35756 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35756__2.call(this,self__,k);
case 3:
return G__35756__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35756.cljs$core$IFn$_invoke$arity$2 = G__35756__2;
G__35756.cljs$core$IFn$_invoke$arity$3 = G__35756__3;
return G__35756;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args35710){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35710)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__35757 = (i + (2));
var G__35758 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__35757;
ret = G__35758;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__35759_35767 = self__.arr;
G__35759_35767.pop();

G__35759_35767.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__35760 = self__.len;
var G__35761 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__35760,G__35761) : cljs.core.array__GT_transient_hash_map.call(null,G__35760,G__35761));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__35762 = o;
if(G__35762){
var bit__24225__auto__ = (G__35762.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24225__auto__) || (G__35762.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__35762.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35762);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35762);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__35763 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35763) : cljs.core.key.call(null,G__35763));
})(),(function (){var G__35764 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35764) : cljs.core.val.call(null,G__35764));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__35768 = cljs.core.next(es);
var G__35769 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__35765 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35765) : cljs.core.key.call(null,G__35765));
})(),(function (){var G__35766 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35766) : cljs.core.val.call(null,G__35766));
})());
es = G__35768;
tcoll__$2 = G__35769;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__35770 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__35771 = (i + (2));
out = G__35770;
i = G__35771;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__35774 = cljs.core.aclone(arr);
(G__35774[i] = a);

return G__35774;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__35775 = cljs.core.aclone(arr);
(G__35775[i] = a);

(G__35775[j] = b);

return G__35775;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__35780 = init__$1;
var G__35781 = k;
var G__35782 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35780,G__35781,G__35782) : f.call(null,G__35780,G__35781,G__35782));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35783 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35783) : cljs.core.deref.call(null,G__35783));
} else {
var G__35784 = (i + (2));
var G__35785 = init__$2;
i = G__35784;
init__$1 = G__35785;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35786 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__35786) : cljs.core.create_inode_seq.call(null,G__35786));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_35800 = (0);
var j_35801 = (0);
while(true){
if((i_35800 < (32))){
if((((self__.bitmap >>> i_35800) & (1)) === (0))){
var G__35802 = (i_35800 + (1));
var G__35803 = j_35801;
i_35800 = G__35802;
j_35801 = G__35803;
continue;
} else {
(nodes[i_35800] = ((!(((self__.arr[j_35801]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_35801])),(self__.arr[j_35801]),(self__.arr[(j_35801 + (1))]),added_leaf_QMARK_):(self__.arr[(j_35801 + (1))])));

var G__35804 = (i_35800 + (1));
var G__35805 = (j_35801 + (2));
i_35800 = G__35804;
j_35801 = G__35805;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__35787 = edit__$1;
var G__35788 = (shift + (5));
var G__35789 = key_or_nil;
var G__35790 = val_or_node;
var G__35791 = hash;
var G__35792 = key;
var G__35793 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__35787,G__35788,G__35789,G__35790,G__35791,G__35792,G__35793) : cljs.core.create_node.call(null,G__35787,G__35788,G__35789,G__35790,G__35791,G__35792,G__35793));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_35806 = (0);
var j_35807 = (0);
while(true){
if((i_35806 < (32))){
if((((self__.bitmap >>> i_35806) & (1)) === (0))){
var G__35808 = (i_35806 + (1));
var G__35809 = j_35807;
i_35806 = G__35808;
j_35807 = G__35809;
continue;
} else {
(nodes[i_35806] = ((!(((self__.arr[j_35807]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_35807])),(self__.arr[j_35807]),(self__.arr[(j_35807 + (1))]),added_leaf_QMARK_):(self__.arr[(j_35807 + (1))])));

var G__35810 = (i_35806 + (1));
var G__35811 = (j_35807 + (2));
i_35806 = G__35810;
j_35807 = G__35811;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__35794 = (shift + (5));
var G__35795 = key_or_nil;
var G__35796 = val_or_node;
var G__35797 = hash;
var G__35798 = key;
var G__35799 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__35794,G__35795,G__35796,G__35797,G__35798,G__35799) : cljs.core.create_node.call(null,G__35794,G__35795,G__35796,G__35797,G__35798,G__35799));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__35812 = (i + (1));
var G__35813 = (j + (2));
var G__35814 = (bitmap | ((1) << i));
i = G__35812;
j = G__35813;
bitmap = G__35814;
continue;
} else {
var G__35815 = (i + (1));
var G__35816 = j;
var G__35817 = bitmap;
i = G__35815;
j = G__35816;
bitmap = G__35817;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35818 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__35818) : cljs.core.create_array_node_seq.call(null,G__35818));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35819 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35819) : cljs.core.deref.call(null,G__35819));
} else {
var G__35820 = (i + (1));
var G__35821 = init__$2;
i = G__35820;
init__$1 = G__35821;
continue;
}
} else {
var G__35822 = (i + (1));
var G__35823 = init__$1;
i = G__35822;
init__$1 = G__35823;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__35824 = (i + (2));
i = G__35824;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35825 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__35825) : cljs.core.create_inode_seq.call(null,G__35825));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__35826 = self__.nodes;
var G__35827 = (self__.i + (2));
var G__35828 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35826,G__35827,G__35828) : cljs.core.create_inode_seq.call(null,G__35826,G__35827,G__35828));
} else {
var G__35829 = self__.nodes;
var G__35830 = self__.i;
var G__35831 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35829,G__35830,G__35831) : cljs.core.create_inode_seq.call(null,G__35829,G__35830,G__35831));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__35835 = (j + (2));
j = G__35835;
continue;
}
} else {
var G__35836 = (j + (2));
j = G__35836;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__35837 = null;
var G__35838 = self__.nodes;
var G__35839 = self__.i;
var G__35840 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__35837,G__35838,G__35839,G__35840) : cljs.core.create_array_node_seq.call(null,G__35837,G__35838,G__35839,G__35840));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__35845 = (j + (1));
j = G__35845;
continue;
}
} else {
var G__35846 = (j + (1));
j = G__35846;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35848 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35848) : cljs.core.keys.call(null,G__35848));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35849 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35849) : cljs.core.vals.call(null,G__35849));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35850 = cljs.core.seq(coll);
var chunk__35851 = null;
var count__35852 = (0);
var i__35853 = (0);
while(true){
if((i__35853 < count__35852)){
var vec__35854 = chunk__35851.cljs$core$IIndexed$_nth$arity$2(null,i__35853);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35854,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35854,(1),null);
var G__35855_35866 = v;
var G__35856_35867 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35855_35866,G__35856_35867) : f.call(null,G__35855_35866,G__35856_35867));

var G__35868 = seq__35850;
var G__35869 = chunk__35851;
var G__35870 = count__35852;
var G__35871 = (i__35853 + (1));
seq__35850 = G__35868;
chunk__35851 = G__35869;
count__35852 = G__35870;
i__35853 = G__35871;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35850);
if(temp__4126__auto__){
var seq__35850__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35850__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__35850__$1);
var G__35872 = cljs.core.chunk_rest(seq__35850__$1);
var G__35873 = c__24331__auto__;
var G__35874 = cljs.core.count(c__24331__auto__);
var G__35875 = (0);
seq__35850 = G__35872;
chunk__35851 = G__35873;
count__35852 = G__35874;
i__35853 = G__35875;
continue;
} else {
var vec__35857 = cljs.core.first(seq__35850__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35857,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35857,(1),null);
var G__35858_35876 = v;
var G__35859_35877 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35858_35876,G__35859_35877) : f.call(null,G__35858_35876,G__35859_35877));

var G__35878 = cljs.core.next(seq__35850__$1);
var G__35879 = null;
var G__35880 = (0);
var G__35881 = (0);
seq__35850 = G__35878;
chunk__35851 = G__35879;
count__35852 = G__35880;
i__35853 = G__35881;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__35860 = init;
var G__35861 = null;
var G__35862 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35860,G__35861,G__35862) : f.call(null,G__35860,G__35861,G__35862));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35863 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35863) : cljs.core.deref.call(null,G__35863));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj35865 = {};
return obj35865;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35882 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35883 = cljs.core.next(es);
ret = G__35882;
es = G__35883;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__35884 = null;
var G__35884__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35884__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35884 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35884__2.call(this,self__,k);
case 3:
return G__35884__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35884.cljs$core$IFn$_invoke$arity$2 = G__35884__2;
G__35884.cljs$core$IFn$_invoke$arity$3 = G__35884__3;
return G__35884;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args35847){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35847)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__35885 = (i + (2));
var G__35886 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__35885;
ret = G__35886;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__35887 = (i + (1));
var G__35888 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__35887;
out = G__35888;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__35889 = o;
if(G__35889){
var bit__24225__auto__ = (G__35889.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24225__auto__) || (G__35889.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__35889.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35889);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35889);
}
})()){
return tcoll.assoc_BANG_((function (){var G__35890 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35890) : cljs.core.key.call(null,G__35890));
})(),(function (){var G__35891 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35891) : cljs.core.val.call(null,G__35891));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__35894 = cljs.core.next(es);
var G__35895 = tcoll__$1.assoc_BANG_((function (){var G__35892 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35892) : cljs.core.key.call(null,G__35892));
})(),(function (){var G__35893 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35893) : cljs.core.val.call(null,G__35893));
})());
es = G__35894;
tcoll__$1 = G__35895;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__35896 = ((ascending_QMARK_)?t.left:t.right);
var G__35897 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__35896;
stack__$1 = G__35897;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35910 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35910) : cljs.core.deref.call(null,G__35910));
} else {
var init__$2 = (function (){var G__35911 = init__$1;
var G__35912 = node.key;
var G__35913 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35911,G__35912,G__35913) : f.call(null,G__35911,G__35912,G__35913));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35914 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35914) : cljs.core.deref.call(null,G__35914));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__35915 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35915) : cljs.core.deref.call(null,G__35915));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__35917 = null;
var G__35917__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35917__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35917 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35917__2.call(this,self__,k);
case 3:
return G__35917__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35917.cljs$core$IFn$_invoke$arity$2 = G__35917__2;
G__35917.cljs$core$IFn$_invoke$arity$3 = G__35917__3;
return G__35917;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args35916){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35916)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__35919 = null;
var G__35919__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35919__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35919 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35919__2.call(this,self__,k);
case 3:
return G__35919__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35919.cljs$core$IFn$_invoke$arity$2 = G__35919__2;
G__35919.cljs$core$IFn$_invoke$arity$3 = G__35919__3;
return G__35919;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args35918){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35918)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__35932 = k;
var G__35933 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35932,G__35933) : comp.call(null,G__35932,G__35933));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__35952 = k;
var G__35953 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35952,G__35953) : comp.call(null,G__35952,G__35953));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__35964 = k;
var G__35965 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35964,G__35965) : comp.call(null,G__35964,G__35965));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35967 = cljs.core.seq(coll);
var chunk__35968 = null;
var count__35969 = (0);
var i__35970 = (0);
while(true){
if((i__35970 < count__35969)){
var vec__35971 = chunk__35968.cljs$core$IIndexed$_nth$arity$2(null,i__35970);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35971,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35971,(1),null);
var G__35972_35984 = v;
var G__35973_35985 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35972_35984,G__35973_35985) : f.call(null,G__35972_35984,G__35973_35985));

var G__35986 = seq__35967;
var G__35987 = chunk__35968;
var G__35988 = count__35969;
var G__35989 = (i__35970 + (1));
seq__35967 = G__35986;
chunk__35968 = G__35987;
count__35969 = G__35988;
i__35970 = G__35989;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35967);
if(temp__4126__auto__){
var seq__35967__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35967__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__35967__$1);
var G__35990 = cljs.core.chunk_rest(seq__35967__$1);
var G__35991 = c__24331__auto__;
var G__35992 = cljs.core.count(c__24331__auto__);
var G__35993 = (0);
seq__35967 = G__35990;
chunk__35968 = G__35991;
count__35969 = G__35992;
i__35970 = G__35993;
continue;
} else {
var vec__35974 = cljs.core.first(seq__35967__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35974,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35974,(1),null);
var G__35975_35994 = v;
var G__35976_35995 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35975_35994,G__35976_35995) : f.call(null,G__35975_35994,G__35976_35995));

var G__35996 = cljs.core.next(seq__35967__$1);
var G__35997 = null;
var G__35998 = (0);
var G__35999 = (0);
seq__35967 = G__35996;
chunk__35968 = G__35997;
count__35969 = G__35998;
i__35970 = G__35999;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35977 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35977) : cljs.core.keys.call(null,G__35977));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35978 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35978) : cljs.core.vals.call(null,G__35978));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__35979 = k;
var G__35980 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__35979,G__35980) : self__.comp.call(null,G__35979,G__35980));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__36000 = t.left;
t = G__36000;
continue;
} else {
var G__36001 = t.right;
t = G__36001;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__36002 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__36003 = cljs.core.next(es);
ret = G__36002;
es = G__36003;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__36004 = null;
var G__36004__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36004__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36004 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36004__2.call(this,self__,k);
case 3:
return G__36004__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36004.cljs$core$IFn$_invoke$arity$2 = G__36004__2;
G__36004.cljs$core$IFn$_invoke$arity$3 = G__36004__3;
return G__36004;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args35966){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35966)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__35981 = k;
var G__35982 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__35981,G__35982) : self__.comp.call(null,G__35981,G__35982));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__36005 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__36006 = t.left;
stack = G__36005;
t = G__36006;
continue;
} else {
var G__36007 = stack;
var G__36008 = t.right;
stack = G__36007;
t = G__36008;
continue;
}
} else {
if((c > (0))){
var G__36009 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__36010 = t.right;
stack = G__36009;
t = G__36010;
continue;
} else {
var G__36011 = stack;
var G__36012 = t.left;
stack = G__36011;
t = G__36012;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__35983 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35983) : cljs.core.key.call(null,G__35983));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__36013 = cljs.core.nnext(in$);
var G__36014 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36013;
out = G__36014;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36015__i = 0, G__36015__a = new Array(arguments.length -  0);
while (G__36015__i < G__36015__a.length) {G__36015__a[G__36015__i] = arguments[G__36015__i + 0]; ++G__36015__i;}
  keyvals = new cljs.core.IndexedSeq(G__36015__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__36016){
var keyvals = cljs.core.seq(arglist__36016);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36017__i = 0, G__36017__a = new Array(arguments.length -  0);
while (G__36017__i < G__36017__a.length) {G__36017__a[G__36017__i] = arguments[G__36017__i + 0]; ++G__36017__i;}
  keyvals = new cljs.core.IndexedSeq(G__36017__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__36018){
var keyvals = cljs.core.seq(arglist__36018);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj36022 = {};
return obj36022;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__36023 = cljs.core.nnext(kvs);
kvs = G__36023;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36024__i = 0, G__36024__a = new Array(arguments.length -  0);
while (G__36024__i < G__36024__a.length) {G__36024__a[G__36024__i] = arguments[G__36024__i + 0]; ++G__36024__i;}
  keyvals = new cljs.core.IndexedSeq(G__36024__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__36025){
var keyvals = cljs.core.seq(arglist__36025);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__36026 = cljs.core.nnext(in$);
var G__36027 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36026;
out = G__36027;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__36028__i = 0, G__36028__a = new Array(arguments.length -  0);
while (G__36028__i < G__36028__a.length) {G__36028__a[G__36028__i] = arguments[G__36028__i + 0]; ++G__36028__i;}
  keyvals = new cljs.core.IndexedSeq(G__36028__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__36029){
var keyvals = cljs.core.seq(arglist__36029);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__36030 = cljs.core.nnext(in$);
var G__36031 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__36030;
out = G__36031;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__36032__i = 0, G__36032__a = new Array(arguments.length -  1);
while (G__36032__i < G__36032__a.length) {G__36032__a[G__36032__i] = arguments[G__36032__i + 1]; ++G__36032__i;}
  keyvals = new cljs.core.IndexedSeq(G__36032__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__36033){
var comparator = cljs.core.first(arglist__36033);
var keyvals = cljs.core.rest(arglist__36033);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36034 = self__.mseq;
if(G__36034){
var bit__24225__auto__ = (G__36034.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24225__auto__) || (G__36034.cljs$core$INext$)){
return true;
} else {
if((!G__36034.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36034);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36034);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36035 = self__.mseq;
if(G__36035){
var bit__24225__auto__ = (G__36035.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24225__auto__) || (G__36035.cljs$core$INext$)){
return true;
} else {
if((!G__36035.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36035);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36035);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36036 = self__.mseq;
if(G__36036){
var bit__24225__auto__ = (G__36036.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24225__auto__) || (G__36036.cljs$core$INext$)){
return true;
} else {
if((!G__36036.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36036);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36036);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__36037 = self__.mseq;
if(G__36037){
var bit__24225__auto__ = (G__36037.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24225__auto__) || (G__36037.cljs$core$INext$)){
return true;
} else {
if((!G__36037.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36037);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__36037);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__36038_SHARP_,p2__36039_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__23544__auto__ = p1__36038_SHARP_;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__36039_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__36040__i = 0, G__36040__a = new Array(arguments.length -  0);
while (G__36040__i < G__36040__a.length) {G__36040__a[G__36040__i] = arguments[G__36040__i + 0]; ++G__36040__i;}
  maps = new cljs.core.IndexedSeq(G__36040__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__36041){
var maps = cljs.core.seq(arglist__36041);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__36044 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__36045 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36044,G__36045) : f.call(null,G__36044,G__36045));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__23544__auto__ = m1;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__36046__i = 0, G__36046__a = new Array(arguments.length -  1);
while (G__36046__i < G__36046__a.length) {G__36046__a[G__36046__i] = arguments[G__36046__i + 1]; ++G__36046__i;}
  maps = new cljs.core.IndexedSeq(G__36046__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__36047){
var f = cljs.core.first(arglist__36047);
var maps = cljs.core.rest(arglist__36047);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__36048 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__36049 = cljs.core.next(keys);
ret = G__36048;
keys = G__36049;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36052 = cljs.core.seq(coll);
var chunk__36053 = null;
var count__36054 = (0);
var i__36055 = (0);
while(true){
if((i__36055 < count__36054)){
var vec__36056 = chunk__36053.cljs$core$IIndexed$_nth$arity$2(null,i__36055);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36056,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36056,(1),null);
var G__36057_36062 = v;
var G__36058_36063 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36057_36062,G__36058_36063) : f.call(null,G__36057_36062,G__36058_36063));

var G__36064 = seq__36052;
var G__36065 = chunk__36053;
var G__36066 = count__36054;
var G__36067 = (i__36055 + (1));
seq__36052 = G__36064;
chunk__36053 = G__36065;
count__36054 = G__36066;
i__36055 = G__36067;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36052);
if(temp__4126__auto__){
var seq__36052__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36052__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__36052__$1);
var G__36068 = cljs.core.chunk_rest(seq__36052__$1);
var G__36069 = c__24331__auto__;
var G__36070 = cljs.core.count(c__24331__auto__);
var G__36071 = (0);
seq__36052 = G__36068;
chunk__36053 = G__36069;
count__36054 = G__36070;
i__36055 = G__36071;
continue;
} else {
var vec__36059 = cljs.core.first(seq__36052__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36059,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36059,(1),null);
var G__36060_36072 = v;
var G__36061_36073 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36060_36072,G__36061_36073) : f.call(null,G__36060_36072,G__36061_36073));

var G__36074 = cljs.core.next(seq__36052__$1);
var G__36075 = null;
var G__36076 = (0);
var G__36077 = (0);
seq__36052 = G__36074;
chunk__36053 = G__36075;
count__36054 = G__36076;
i__36055 = G__36077;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__36050_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__36050_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__36078 = null;
var G__36078__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36078__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36078 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36078__2.call(this,self__,k);
case 3:
return G__36078__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36078.cljs$core$IFn$_invoke$arity$2 = G__36078__2;
G__36078.cljs$core$IFn$_invoke$arity$3 = G__36078__3;
return G__36078;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args36051){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36051)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__36079 = (i + (1));
var G__36080 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__36079;
out = G__36080;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__36081 = (i + (1));
var G__36082 = cljs.core._conj_BANG_(out,(items[i]));
i = G__36081;
out = G__36082;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__36084 = null;
var G__36084__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__36084__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__36084 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36084__2.call(this,self__,k);
case 3:
return G__36084__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36084.cljs$core$IFn$_invoke$arity$2 = G__36084__2;
G__36084.cljs$core$IFn$_invoke$arity$3 = G__36084__3;
return G__36084;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args36083){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36083)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__36087 = cljs.core.seq(coll);
var chunk__36088 = null;
var count__36089 = (0);
var i__36090 = (0);
while(true){
if((i__36090 < count__36089)){
var vec__36091 = chunk__36088.cljs$core$IIndexed$_nth$arity$2(null,i__36090);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36091,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36091,(1),null);
var G__36092_36097 = v;
var G__36093_36098 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36092_36097,G__36093_36098) : f.call(null,G__36092_36097,G__36093_36098));

var G__36099 = seq__36087;
var G__36100 = chunk__36088;
var G__36101 = count__36089;
var G__36102 = (i__36090 + (1));
seq__36087 = G__36099;
chunk__36088 = G__36100;
count__36089 = G__36101;
i__36090 = G__36102;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36087);
if(temp__4126__auto__){
var seq__36087__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36087__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__36087__$1);
var G__36103 = cljs.core.chunk_rest(seq__36087__$1);
var G__36104 = c__24331__auto__;
var G__36105 = cljs.core.count(c__24331__auto__);
var G__36106 = (0);
seq__36087 = G__36103;
chunk__36088 = G__36104;
count__36089 = G__36105;
i__36090 = G__36106;
continue;
} else {
var vec__36094 = cljs.core.first(seq__36087__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36094,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36094,(1),null);
var G__36095_36107 = v;
var G__36096_36108 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36095_36107,G__36096_36108) : f.call(null,G__36095_36107,G__36096_36108));

var G__36109 = cljs.core.next(seq__36087__$1);
var G__36110 = null;
var G__36111 = (0);
var G__36112 = (0);
seq__36087 = G__36109;
chunk__36088 = G__36110;
count__36089 = G__36111;
i__36090 = G__36112;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__36085_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__36085_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__36113 = null;
var G__36113__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__36113__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__36113 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__36113__2.call(this,self__,k);
case 3:
return G__36113__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36113.cljs$core$IFn$_invoke$arity$2 = G__36113__2;
G__36113.cljs$core$IFn$_invoke$arity$3 = G__36113__3;
return G__36113;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args36086){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36086)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__24425__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__24425__auto__.length)){
var G__36114 = (i + (1));
var G__36115 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__36114;
res = G__36115;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__36116 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__36117 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__36116;
out = G__36117;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__36118__delegate = function (keys){
return cljs.core.set(keys);
};
var G__36118 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__36119__i = 0, G__36119__a = new Array(arguments.length -  0);
while (G__36119__i < G__36119__a.length) {G__36119__a[G__36119__i] = arguments[G__36119__i + 0]; ++G__36119__i;}
  keys = new cljs.core.IndexedSeq(G__36119__a,0);
} 
return G__36118__delegate.call(this,keys);};
G__36118.cljs$lang$maxFixedArity = 0;
G__36118.cljs$lang$applyTo = (function (arglist__36120){
var keys = cljs.core.seq(arglist__36120);
return G__36118__delegate(keys);
});
G__36118.cljs$core$IFn$_invoke$arity$variadic = G__36118__delegate;
return G__36118;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__36121 = null;
if (arguments.length > 0) {
var G__36122__i = 0, G__36122__a = new Array(arguments.length -  0);
while (G__36122__i < G__36122__a.length) {G__36122__a[G__36122__i] = arguments[G__36122__i + 0]; ++G__36122__i;}
G__36121 = new cljs.core.IndexedSeq(G__36122__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__36121);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__36123__i = 0, G__36123__a = new Array(arguments.length -  0);
while (G__36123__i < G__36123__a.length) {G__36123__a[G__36123__i] = arguments[G__36123__i + 0]; ++G__36123__i;}
  keys = new cljs.core.IndexedSeq(G__36123__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__36124){
var keys = cljs.core.seq(arglist__36124);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__36125__i = 0, G__36125__a = new Array(arguments.length -  1);
while (G__36125__i < G__36125__a.length) {G__36125__a[G__36125__i] = arguments[G__36125__i + 1]; ++G__36125__i;}
  keys = new cljs.core.IndexedSeq(G__36125__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__36126){
var comparator = cljs.core.first(arglist__36126);
var keys = cljs.core.rest(arglist__36126);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__36127_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__36127_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__36127_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__36128_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__36128_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__36128_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__36149 = null;
var G__36149__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36149__1 = (function (result){
var G__36139 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36139) : rf.call(null,G__36139));
});
var G__36149__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__36140 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36140) : cljs.core.deref.call(null,G__36140));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__36141 = result;
var G__36142 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36141,G__36142) : rf.call(null,G__36141,G__36142));
}
});
G__36149 = function(result,input){
switch(arguments.length){
case 0:
return G__36149__0.call(this);
case 1:
return G__36149__1.call(this,result);
case 2:
return G__36149__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36149.cljs$core$IFn$_invoke$arity$0 = G__36149__0;
G__36149.cljs$core$IFn$_invoke$arity$1 = G__36149__1;
G__36149.cljs$core$IFn$_invoke$arity$2 = G__36149__2;
return G__36149;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__36147,seen__$1){
while(true){
var vec__36148 = p__36147;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36148,(0),null);
var xs__$1 = vec__36148;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__36150 = cljs.core.rest(s);
var G__36151 = seen__$1;
p__36147 = G__36150;
seen__$1 = G__36151;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__36152 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__36153 = cljs.core.next(s__$1);
ret = G__36152;
s__$1 = G__36153;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__36155 = x;
if(G__36155){
var bit__24218__auto__ = (G__36155.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24218__auto__) || (G__36155.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__36156 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__36157 = cljs.core.next(ks);
var G__36158 = cljs.core.next(vs);
map = G__36156;
ks = G__36157;
vs = G__36158;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__36169 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36169) : k.call(null,G__36169));
})() > (function (){var G__36170 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36170) : k.call(null,G__36170));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__36171__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36159_SHARP_,p2__36160_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__36159_SHARP_,p2__36160_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__36171 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__36172__i = 0, G__36172__a = new Array(arguments.length -  3);
while (G__36172__i < G__36172__a.length) {G__36172__a[G__36172__i] = arguments[G__36172__i + 3]; ++G__36172__i;}
  more = new cljs.core.IndexedSeq(G__36172__a,0);
} 
return G__36171__delegate.call(this,k,x,y,more);};
G__36171.cljs$lang$maxFixedArity = 3;
G__36171.cljs$lang$applyTo = (function (arglist__36173){
var k = cljs.core.first(arglist__36173);
arglist__36173 = cljs.core.next(arglist__36173);
var x = cljs.core.first(arglist__36173);
arglist__36173 = cljs.core.next(arglist__36173);
var y = cljs.core.first(arglist__36173);
var more = cljs.core.rest(arglist__36173);
return G__36171__delegate(k,x,y,more);
});
G__36171.cljs$core$IFn$_invoke$arity$variadic = G__36171__delegate;
return G__36171;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__36174 = null;
if (arguments.length > 3) {
var G__36175__i = 0, G__36175__a = new Array(arguments.length -  3);
while (G__36175__i < G__36175__a.length) {G__36175__a[G__36175__i] = arguments[G__36175__i + 3]; ++G__36175__i;}
G__36174 = new cljs.core.IndexedSeq(G__36175__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__36174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__36186 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36186) : k.call(null,G__36186));
})() < (function (){var G__36187 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__36187) : k.call(null,G__36187));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__36188__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36176_SHARP_,p2__36177_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__36176_SHARP_,p2__36177_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__36188 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__36189__i = 0, G__36189__a = new Array(arguments.length -  3);
while (G__36189__i < G__36189__a.length) {G__36189__a[G__36189__i] = arguments[G__36189__i + 3]; ++G__36189__i;}
  more = new cljs.core.IndexedSeq(G__36189__a,0);
} 
return G__36188__delegate.call(this,k,x,y,more);};
G__36188.cljs$lang$maxFixedArity = 3;
G__36188.cljs$lang$applyTo = (function (arglist__36190){
var k = cljs.core.first(arglist__36190);
arglist__36190 = cljs.core.next(arglist__36190);
var x = cljs.core.first(arglist__36190);
arglist__36190 = cljs.core.next(arglist__36190);
var y = cljs.core.first(arglist__36190);
var more = cljs.core.rest(arglist__36190);
return G__36188__delegate(k,x,y,more);
});
G__36188.cljs$core$IFn$_invoke$arity$variadic = G__36188__delegate;
return G__36188;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__36191 = null;
if (arguments.length > 3) {
var G__36192__i = 0, G__36192__a = new Array(arguments.length -  3);
while (G__36192__i < G__36192__a.length) {G__36192__a[G__36192__i] = arguments[G__36192__i + 3]; ++G__36192__i;}
G__36191 = new cljs.core.IndexedSeq(G__36192__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__36191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__36209 = null;
var G__36209__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36209__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__36204 = result;
var G__36205 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36204,G__36205) : rf.call(null,G__36204,G__36205));
})());
})());
var G__36206 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36206) : rf.call(null,G__36206));
});
var G__36209__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__36207 = result;
var G__36208 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36207,G__36208) : rf.call(null,G__36207,G__36208));
} else {
return result;
}
});
G__36209 = function(result,input){
switch(arguments.length){
case 0:
return G__36209__0.call(this);
case 1:
return G__36209__1.call(this,result);
case 2:
return G__36209__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36209.cljs$core$IFn$_invoke$arity$0 = G__36209__0;
G__36209.cljs$core$IFn$_invoke$arity$1 = G__36209__1;
G__36209.cljs$core$IFn$_invoke$arity$2 = G__36209__2;
return G__36209;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__36222 = null;
var G__36222__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36222__1 = (function (result){
var G__36217 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36217) : rf.call(null,G__36217));
});
var G__36222__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__36218 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36218) : pred.call(null,G__36218));
})())){
var G__36219 = result;
var G__36220 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36219,G__36220) : rf.call(null,G__36219,G__36220));
} else {
return cljs.core.reduced(result);
}
});
G__36222 = function(result,input){
switch(arguments.length){
case 0:
return G__36222__0.call(this);
case 1:
return G__36222__1.call(this,result);
case 2:
return G__36222__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36222.cljs$core$IFn$_invoke$arity$0 = G__36222__0;
G__36222.cljs$core$IFn$_invoke$arity$1 = G__36222__1;
G__36222.cljs$core$IFn$_invoke$arity$2 = G__36222__2;
return G__36222;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__36221 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36221) : pred.call(null,G__36221));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__36227 = (function (){var G__36229 = cljs.core._entry_key(sc,e);
var G__36230 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__36229,G__36230) : comp.call(null,G__36229,G__36230));
})();
var G__36228 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__36227,G__36228) : test.call(null,G__36227,G__36228));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36234 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36234,(0),null);
var s = vec__36234;
if(cljs.core.truth_((function (){var G__36235 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__36235) : include.call(null,G__36235));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36236 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36236,(0),null);
var s = vec__36236;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36240 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36240,(0),null);
var s = vec__36240;
if(cljs.core.truth_((function (){var G__36241 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__36241) : include.call(null,G__36241));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__36242 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36242,(0),null);
var s = vec__36242;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__36243 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__36243) : Math.ceil.call(null,G__36243));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__23965__auto__ = self__.__hash;
if(!((h__23965__auto__ == null))){
return h__23965__auto__;
} else {
var h__23965__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__23965__auto____$1;

return h__23965__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__36244 = ret;
var G__36245 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36244,G__36245) : f.call(null,G__36244,G__36245));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__36246 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36246) : cljs.core.deref.call(null,G__36246));
} else {
var G__36247 = (i + self__.step);
var G__36248 = ret__$1;
i = G__36247;
ret = G__36248;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__36266 = null;
var G__36266__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36266__1 = (function (result){
var G__36263 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36263) : rf.call(null,G__36263));
});
var G__36266__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__36264 = result;
var G__36265 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36264,G__36265) : rf.call(null,G__36264,G__36265));
} else {
return result;
}
});
G__36266 = function(result,input){
switch(arguments.length){
case 0:
return G__36266__0.call(this);
case 1:
return G__36266__1.call(this,result);
case 2:
return G__36266__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36266.cljs$core$IFn$_invoke$arity$0 = G__36266__0;
G__36266.cljs$core$IFn$_invoke$arity$1 = G__36266__1;
G__36266.cljs$core$IFn$_invoke$arity$2 = G__36266__2;
return G__36266;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__36288 = null;
var G__36288__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36288__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__36279 = result;
var G__36280 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36279,G__36280) : rf.call(null,G__36279,G__36280));
})());
})());
var G__36281 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36281) : rf.call(null,G__36281));
});
var G__36288__2 = (function (result,input){
var pval = (function (){var G__36282 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36282) : cljs.core.deref.call(null,G__36282));
})();
var val = (function (){var G__36283 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36283) : f.call(null,G__36283));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__36284 = result;
var G__36285 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36284,G__36285) : rf.call(null,G__36284,G__36285));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__36288 = function(result,input){
switch(arguments.length){
case 0:
return G__36288__0.call(this);
case 1:
return G__36288__1.call(this,result);
case 2:
return G__36288__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36288.cljs$core$IFn$_invoke$arity$0 = G__36288__0;
G__36288.cljs$core$IFn$_invoke$arity$1 = G__36288__1;
G__36288.cljs$core$IFn$_invoke$arity$2 = G__36288__2;
return G__36288;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__36286 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36286) : f.call(null,G__36286));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__36267_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__36287 = p1__36267_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36287) : f.call(null,G__36287));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__36297 = init;
var G__36298 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36297,G__36298) : f.call(null,G__36297,G__36298));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__36393 = null;
var G__36393__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__36393__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36351 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36351) : f.call(null,G__36351));
})()],null));
});
var G__36393__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36352 = x;
var G__36353 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36352,G__36353) : f.call(null,G__36352,G__36353));
})()],null));
});
var G__36393__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36354 = x;
var G__36355 = y;
var G__36356 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36354,G__36355,G__36356) : f.call(null,G__36354,G__36355,G__36356));
})()],null));
});
var G__36393__4 = (function() { 
var G__36394__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__36394 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36395__i = 0, G__36395__a = new Array(arguments.length -  3);
while (G__36395__i < G__36395__a.length) {G__36395__a[G__36395__i] = arguments[G__36395__i + 3]; ++G__36395__i;}
  args = new cljs.core.IndexedSeq(G__36395__a,0);
} 
return G__36394__delegate.call(this,x,y,z,args);};
G__36394.cljs$lang$maxFixedArity = 3;
G__36394.cljs$lang$applyTo = (function (arglist__36396){
var x = cljs.core.first(arglist__36396);
arglist__36396 = cljs.core.next(arglist__36396);
var y = cljs.core.first(arglist__36396);
arglist__36396 = cljs.core.next(arglist__36396);
var z = cljs.core.first(arglist__36396);
var args = cljs.core.rest(arglist__36396);
return G__36394__delegate(x,y,z,args);
});
G__36394.cljs$core$IFn$_invoke$arity$variadic = G__36394__delegate;
return G__36394;
})()
;
G__36393 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36393__0.call(this);
case 1:
return G__36393__1.call(this,x);
case 2:
return G__36393__2.call(this,x,y);
case 3:
return G__36393__3.call(this,x,y,z);
default:
var G__36397 = null;
if (arguments.length > 3) {
var G__36398__i = 0, G__36398__a = new Array(arguments.length -  3);
while (G__36398__i < G__36398__a.length) {G__36398__a[G__36398__i] = arguments[G__36398__i + 3]; ++G__36398__i;}
G__36397 = new cljs.core.IndexedSeq(G__36398__a,0);
}
return G__36393__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36393.cljs$lang$maxFixedArity = 3;
G__36393.cljs$lang$applyTo = G__36393__4.cljs$lang$applyTo;
G__36393.cljs$core$IFn$_invoke$arity$0 = G__36393__0;
G__36393.cljs$core$IFn$_invoke$arity$1 = G__36393__1;
G__36393.cljs$core$IFn$_invoke$arity$2 = G__36393__2;
G__36393.cljs$core$IFn$_invoke$arity$3 = G__36393__3;
G__36393.cljs$core$IFn$_invoke$arity$variadic = G__36393__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36393;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__36399 = null;
var G__36399__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__36399__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36357 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36357) : f.call(null,G__36357));
})(),(function (){var G__36358 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36358) : g.call(null,G__36358));
})()],null));
});
var G__36399__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36359 = x;
var G__36360 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36359,G__36360) : f.call(null,G__36359,G__36360));
})(),(function (){var G__36361 = x;
var G__36362 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__36361,G__36362) : g.call(null,G__36361,G__36362));
})()],null));
});
var G__36399__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36363 = x;
var G__36364 = y;
var G__36365 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36363,G__36364,G__36365) : f.call(null,G__36363,G__36364,G__36365));
})(),(function (){var G__36366 = x;
var G__36367 = y;
var G__36368 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__36366,G__36367,G__36368) : g.call(null,G__36366,G__36367,G__36368));
})()],null));
});
var G__36399__4 = (function() { 
var G__36400__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__36400 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36401__i = 0, G__36401__a = new Array(arguments.length -  3);
while (G__36401__i < G__36401__a.length) {G__36401__a[G__36401__i] = arguments[G__36401__i + 3]; ++G__36401__i;}
  args = new cljs.core.IndexedSeq(G__36401__a,0);
} 
return G__36400__delegate.call(this,x,y,z,args);};
G__36400.cljs$lang$maxFixedArity = 3;
G__36400.cljs$lang$applyTo = (function (arglist__36402){
var x = cljs.core.first(arglist__36402);
arglist__36402 = cljs.core.next(arglist__36402);
var y = cljs.core.first(arglist__36402);
arglist__36402 = cljs.core.next(arglist__36402);
var z = cljs.core.first(arglist__36402);
var args = cljs.core.rest(arglist__36402);
return G__36400__delegate(x,y,z,args);
});
G__36400.cljs$core$IFn$_invoke$arity$variadic = G__36400__delegate;
return G__36400;
})()
;
G__36399 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36399__0.call(this);
case 1:
return G__36399__1.call(this,x);
case 2:
return G__36399__2.call(this,x,y);
case 3:
return G__36399__3.call(this,x,y,z);
default:
var G__36403 = null;
if (arguments.length > 3) {
var G__36404__i = 0, G__36404__a = new Array(arguments.length -  3);
while (G__36404__i < G__36404__a.length) {G__36404__a[G__36404__i] = arguments[G__36404__i + 3]; ++G__36404__i;}
G__36403 = new cljs.core.IndexedSeq(G__36404__a,0);
}
return G__36399__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36403);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36399.cljs$lang$maxFixedArity = 3;
G__36399.cljs$lang$applyTo = G__36399__4.cljs$lang$applyTo;
G__36399.cljs$core$IFn$_invoke$arity$0 = G__36399__0;
G__36399.cljs$core$IFn$_invoke$arity$1 = G__36399__1;
G__36399.cljs$core$IFn$_invoke$arity$2 = G__36399__2;
G__36399.cljs$core$IFn$_invoke$arity$3 = G__36399__3;
G__36399.cljs$core$IFn$_invoke$arity$variadic = G__36399__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36399;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__36405 = null;
var G__36405__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__36405__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36369 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36369) : f.call(null,G__36369));
})(),(function (){var G__36370 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36370) : g.call(null,G__36370));
})(),(function (){var G__36371 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__36371) : h.call(null,G__36371));
})()],null));
});
var G__36405__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36372 = x;
var G__36373 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36372,G__36373) : f.call(null,G__36372,G__36373));
})(),(function (){var G__36374 = x;
var G__36375 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__36374,G__36375) : g.call(null,G__36374,G__36375));
})(),(function (){var G__36376 = x;
var G__36377 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__36376,G__36377) : h.call(null,G__36376,G__36377));
})()],null));
});
var G__36405__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__36378 = x;
var G__36379 = y;
var G__36380 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36378,G__36379,G__36380) : f.call(null,G__36378,G__36379,G__36380));
})(),(function (){var G__36381 = x;
var G__36382 = y;
var G__36383 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__36381,G__36382,G__36383) : g.call(null,G__36381,G__36382,G__36383));
})(),(function (){var G__36384 = x;
var G__36385 = y;
var G__36386 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__36384,G__36385,G__36386) : h.call(null,G__36384,G__36385,G__36386));
})()],null));
});
var G__36405__4 = (function() { 
var G__36406__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__36406 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36407__i = 0, G__36407__a = new Array(arguments.length -  3);
while (G__36407__i < G__36407__a.length) {G__36407__a[G__36407__i] = arguments[G__36407__i + 3]; ++G__36407__i;}
  args = new cljs.core.IndexedSeq(G__36407__a,0);
} 
return G__36406__delegate.call(this,x,y,z,args);};
G__36406.cljs$lang$maxFixedArity = 3;
G__36406.cljs$lang$applyTo = (function (arglist__36408){
var x = cljs.core.first(arglist__36408);
arglist__36408 = cljs.core.next(arglist__36408);
var y = cljs.core.first(arglist__36408);
arglist__36408 = cljs.core.next(arglist__36408);
var z = cljs.core.first(arglist__36408);
var args = cljs.core.rest(arglist__36408);
return G__36406__delegate(x,y,z,args);
});
G__36406.cljs$core$IFn$_invoke$arity$variadic = G__36406__delegate;
return G__36406;
})()
;
G__36405 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36405__0.call(this);
case 1:
return G__36405__1.call(this,x);
case 2:
return G__36405__2.call(this,x,y);
case 3:
return G__36405__3.call(this,x,y,z);
default:
var G__36409 = null;
if (arguments.length > 3) {
var G__36410__i = 0, G__36410__a = new Array(arguments.length -  3);
while (G__36410__i < G__36410__a.length) {G__36410__a[G__36410__i] = arguments[G__36410__i + 3]; ++G__36410__i;}
G__36409 = new cljs.core.IndexedSeq(G__36410__a,0);
}
return G__36405__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36405.cljs$lang$maxFixedArity = 3;
G__36405.cljs$lang$applyTo = G__36405__4.cljs$lang$applyTo;
G__36405.cljs$core$IFn$_invoke$arity$0 = G__36405__0;
G__36405.cljs$core$IFn$_invoke$arity$1 = G__36405__1;
G__36405.cljs$core$IFn$_invoke$arity$2 = G__36405__2;
G__36405.cljs$core$IFn$_invoke$arity$3 = G__36405__3;
G__36405.cljs$core$IFn$_invoke$arity$variadic = G__36405__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36405;
})()
});
var juxt__4 = (function() { 
var G__36411__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__36412 = null;
var G__36412__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36299_SHARP_,p2__36300_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36299_SHARP_,(function (){return (p2__36300_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__36300_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__36300_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36412__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36301_SHARP_,p2__36302_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36301_SHARP_,(function (){var G__36387 = x;
return (p2__36302_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__36302_SHARP_.cljs$core$IFn$_invoke$arity$1(G__36387) : p2__36302_SHARP_.call(null,G__36387));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36412__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36303_SHARP_,p2__36304_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36303_SHARP_,(function (){var G__36388 = x;
var G__36389 = y;
return (p2__36304_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__36304_SHARP_.cljs$core$IFn$_invoke$arity$2(G__36388,G__36389) : p2__36304_SHARP_.call(null,G__36388,G__36389));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36412__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36305_SHARP_,p2__36306_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36305_SHARP_,(function (){var G__36390 = x;
var G__36391 = y;
var G__36392 = z;
return (p2__36306_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__36306_SHARP_.cljs$core$IFn$_invoke$arity$3(G__36390,G__36391,G__36392) : p2__36306_SHARP_.call(null,G__36390,G__36391,G__36392));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__36412__4 = (function() { 
var G__36413__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__36307_SHARP_,p2__36308_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__36307_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__36308_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__36413 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36414__i = 0, G__36414__a = new Array(arguments.length -  3);
while (G__36414__i < G__36414__a.length) {G__36414__a[G__36414__i] = arguments[G__36414__i + 3]; ++G__36414__i;}
  args = new cljs.core.IndexedSeq(G__36414__a,0);
} 
return G__36413__delegate.call(this,x,y,z,args);};
G__36413.cljs$lang$maxFixedArity = 3;
G__36413.cljs$lang$applyTo = (function (arglist__36415){
var x = cljs.core.first(arglist__36415);
arglist__36415 = cljs.core.next(arglist__36415);
var y = cljs.core.first(arglist__36415);
arglist__36415 = cljs.core.next(arglist__36415);
var z = cljs.core.first(arglist__36415);
var args = cljs.core.rest(arglist__36415);
return G__36413__delegate(x,y,z,args);
});
G__36413.cljs$core$IFn$_invoke$arity$variadic = G__36413__delegate;
return G__36413;
})()
;
G__36412 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36412__0.call(this);
case 1:
return G__36412__1.call(this,x);
case 2:
return G__36412__2.call(this,x,y);
case 3:
return G__36412__3.call(this,x,y,z);
default:
var G__36416 = null;
if (arguments.length > 3) {
var G__36417__i = 0, G__36417__a = new Array(arguments.length -  3);
while (G__36417__i < G__36417__a.length) {G__36417__a[G__36417__i] = arguments[G__36417__i + 3]; ++G__36417__i;}
G__36416 = new cljs.core.IndexedSeq(G__36417__a,0);
}
return G__36412__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36412.cljs$lang$maxFixedArity = 3;
G__36412.cljs$lang$applyTo = G__36412__4.cljs$lang$applyTo;
G__36412.cljs$core$IFn$_invoke$arity$0 = G__36412__0;
G__36412.cljs$core$IFn$_invoke$arity$1 = G__36412__1;
G__36412.cljs$core$IFn$_invoke$arity$2 = G__36412__2;
G__36412.cljs$core$IFn$_invoke$arity$3 = G__36412__3;
G__36412.cljs$core$IFn$_invoke$arity$variadic = G__36412__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36412;
})()
;})(fs__$1))
};
var G__36411 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__36418__i = 0, G__36418__a = new Array(arguments.length -  3);
while (G__36418__i < G__36418__a.length) {G__36418__a[G__36418__i] = arguments[G__36418__i + 3]; ++G__36418__i;}
  fs = new cljs.core.IndexedSeq(G__36418__a,0);
} 
return G__36411__delegate.call(this,f,g,h,fs);};
G__36411.cljs$lang$maxFixedArity = 3;
G__36411.cljs$lang$applyTo = (function (arglist__36419){
var f = cljs.core.first(arglist__36419);
arglist__36419 = cljs.core.next(arglist__36419);
var g = cljs.core.first(arglist__36419);
arglist__36419 = cljs.core.next(arglist__36419);
var h = cljs.core.first(arglist__36419);
var fs = cljs.core.rest(arglist__36419);
return G__36411__delegate(f,g,h,fs);
});
G__36411.cljs$core$IFn$_invoke$arity$variadic = G__36411__delegate;
return G__36411;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__36420 = null;
if (arguments.length > 3) {
var G__36421__i = 0, G__36421__a = new Array(arguments.length -  3);
while (G__36421__i < G__36421__a.length) {G__36421__a[G__36421__i] = arguments[G__36421__i + 3]; ++G__36421__i;}
G__36420 = new cljs.core.IndexedSeq(G__36421__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__36420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__36422 = cljs.core.next(coll);
coll = G__36422;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__36423 = (n - (1));
var G__36424 = cljs.core.next(coll);
n = G__36423;
coll = G__36424;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__36428 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36428,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36428,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36428,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_36436 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__23544__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__36437_36443 = cljs.core.first(coll);
var G__36438_36444 = writer;
var G__36439_36445 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36437_36443,G__36438_36444,G__36439_36445) : print_one.call(null,G__36437_36443,G__36438_36444,G__36439_36445));
} else {
}

var coll_36446__$1 = cljs.core.next(coll);
var n_36447 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_36446__$1) && (((n_36447 == null)) || (!((n_36447 === (0)))))){
cljs.core._write(writer,sep);

var G__36440_36448 = cljs.core.first(coll_36446__$1);
var G__36441_36449 = writer;
var G__36442_36450 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36440_36448,G__36441_36449,G__36442_36450) : print_one.call(null,G__36440_36448,G__36441_36449,G__36442_36450));

var G__36451 = cljs.core.next(coll_36446__$1);
var G__36452 = (n_36447 - (1));
coll_36446__$1 = G__36451;
n_36447 = G__36452;
continue;
} else {
if((cljs.core.seq(coll_36446__$1)) && ((n_36447 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__23544__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_36436;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__36457 = cljs.core.seq(ss);
var chunk__36458 = null;
var count__36459 = (0);
var i__36460 = (0);
while(true){
if((i__36460 < count__36459)){
var s = chunk__36458.cljs$core$IIndexed$_nth$arity$2(null,i__36460);
cljs.core._write(writer,s);

var G__36461 = seq__36457;
var G__36462 = chunk__36458;
var G__36463 = count__36459;
var G__36464 = (i__36460 + (1));
seq__36457 = G__36461;
chunk__36458 = G__36462;
count__36459 = G__36463;
i__36460 = G__36464;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36457);
if(temp__4126__auto__){
var seq__36457__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36457__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__36457__$1);
var G__36465 = cljs.core.chunk_rest(seq__36457__$1);
var G__36466 = c__24331__auto__;
var G__36467 = cljs.core.count(c__24331__auto__);
var G__36468 = (0);
seq__36457 = G__36465;
chunk__36458 = G__36466;
count__36459 = G__36467;
i__36460 = G__36468;
continue;
} else {
var s = cljs.core.first(seq__36457__$1);
cljs.core._write(writer,s);

var G__36469 = cljs.core.next(seq__36457__$1);
var G__36470 = null;
var G__36471 = (0);
var G__36472 = (0);
seq__36457 = G__36469;
chunk__36458 = G__36470;
count__36459 = G__36471;
i__36460 = G__36472;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__36473__i = 0, G__36473__a = new Array(arguments.length -  1);
while (G__36473__i < G__36473__a.length) {G__36473__a[G__36473__i] = arguments[G__36473__i + 1]; ++G__36473__i;}
  ss = new cljs.core.IndexedSeq(G__36473__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__36474){
var writer = cljs.core.first(arglist__36474);
var ss = cljs.core.rest(arglist__36474);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj36476 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj36476;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__36479 = "[\\\\\"\b\f\n\r\t]";
var G__36480 = "g";
return RegExp(G__36479,G__36480);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__23532__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__23532__auto__)){
var and__23532__auto____$1 = (function (){var G__36494 = obj;
if(G__36494){
var bit__24225__auto__ = (G__36494.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24225__auto__) || (G__36494.cljs$core$IMeta$)){
return true;
} else {
if((!G__36494.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__36494);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__36494);
}
})();
if(and__23532__auto____$1){
return cljs.core.meta(obj);
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__36495_36505 = cljs.core.meta(obj);
var G__36496_36506 = writer;
var G__36497_36507 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__36495_36505,G__36496_36506,G__36497_36507) : cljs.core.pr_writer.call(null,G__36495_36505,G__36496_36506,G__36497_36507));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__36498 = obj;
if(G__36498){
var bit__24218__auto__ = (G__36498.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24218__auto__) || (G__36498.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__36499 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__36500 = cljs.core.pr_writer;
var G__36501 = writer;
var G__36502 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__36499,G__36500,G__36501,G__36502) : cljs.core.print_map.call(null,G__36499,G__36500,G__36501,G__36502));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__36503 = obj;
return goog.isString(G__36503);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__36508 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__36508;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__36504 = obj;
if(G__36504){
var bit__24225__auto__ = (G__36504.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24225__auto__) || (G__36504.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__36504.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__36504);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__36504);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__36512 = obj;
var G__36513 = writer;
var G__36514 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__36512,G__36513,G__36514) : alt_impl.call(null,G__36512,G__36513,G__36514));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__36519 = cljs.core.seq(cljs.core.next(objs));
var chunk__36520 = null;
var count__36521 = (0);
var i__36522 = (0);
while(true){
if((i__36522 < count__36521)){
var obj = chunk__36520.cljs$core$IIndexed$_nth$arity$2(null,i__36522);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__36523 = seq__36519;
var G__36524 = chunk__36520;
var G__36525 = count__36521;
var G__36526 = (i__36522 + (1));
seq__36519 = G__36523;
chunk__36520 = G__36524;
count__36521 = G__36525;
i__36522 = G__36526;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36519);
if(temp__4126__auto__){
var seq__36519__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36519__$1)){
var c__24331__auto__ = cljs.core.chunk_first(seq__36519__$1);
var G__36527 = cljs.core.chunk_rest(seq__36519__$1);
var G__36528 = c__24331__auto__;
var G__36529 = cljs.core.count(c__24331__auto__);
var G__36530 = (0);
seq__36519 = G__36527;
chunk__36520 = G__36528;
count__36521 = G__36529;
i__36522 = G__36530;
continue;
} else {
var obj = cljs.core.first(seq__36519__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__36531 = cljs.core.next(seq__36519__$1);
var G__36532 = null;
var G__36533 = (0);
var G__36534 = (0);
seq__36519 = G__36531;
chunk__36520 = G__36532;
count__36521 = G__36533;
i__36522 = G__36534;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36535__i = 0, G__36535__a = new Array(arguments.length -  0);
while (G__36535__i < G__36535__a.length) {G__36535__a[G__36535__i] = arguments[G__36535__i + 0]; ++G__36535__i;}
  objs = new cljs.core.IndexedSeq(G__36535__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__36536){
var objs = cljs.core.seq(arglist__36536);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36537__i = 0, G__36537__a = new Array(arguments.length -  0);
while (G__36537__i < G__36537__a.length) {G__36537__a[G__36537__i] = arguments[G__36537__i + 0]; ++G__36537__i;}
  objs = new cljs.core.IndexedSeq(G__36537__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__36538){
var objs = cljs.core.seq(arglist__36538);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36539__i = 0, G__36539__a = new Array(arguments.length -  0);
while (G__36539__i < G__36539__a.length) {G__36539__a[G__36539__i] = arguments[G__36539__i + 0]; ++G__36539__i;}
  objs = new cljs.core.IndexedSeq(G__36539__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__36540){
var objs = cljs.core.seq(arglist__36540);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36541__i = 0, G__36541__a = new Array(arguments.length -  0);
while (G__36541__i < G__36541__a.length) {G__36541__a[G__36541__i] = arguments[G__36541__i + 0]; ++G__36541__i;}
  objs = new cljs.core.IndexedSeq(G__36541__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__36542){
var objs = cljs.core.seq(arglist__36542);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36543__i = 0, G__36543__a = new Array(arguments.length -  0);
while (G__36543__i < G__36543__a.length) {G__36543__a[G__36543__i] = arguments[G__36543__i + 0]; ++G__36543__i;}
  objs = new cljs.core.IndexedSeq(G__36543__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__36544){
var objs = cljs.core.seq(arglist__36544);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36545__i = 0, G__36545__a = new Array(arguments.length -  0);
while (G__36545__i < G__36545__a.length) {G__36545__a[G__36545__i] = arguments[G__36545__i + 0]; ++G__36545__i;}
  objs = new cljs.core.IndexedSeq(G__36545__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__36546){
var objs = cljs.core.seq(arglist__36546);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36547__i = 0, G__36547__a = new Array(arguments.length -  0);
while (G__36547__i < G__36547__a.length) {G__36547__a[G__36547__i] = arguments[G__36547__i + 0]; ++G__36547__i;}
  objs = new cljs.core.IndexedSeq(G__36547__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__36548){
var objs = cljs.core.seq(arglist__36548);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__36549__i = 0, G__36549__a = new Array(arguments.length -  0);
while (G__36549__i < G__36549__a.length) {G__36549__a[G__36549__i] = arguments[G__36549__i + 0]; ++G__36549__i;}
  objs = new cljs.core.IndexedSeq(G__36549__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__36550){
var objs = cljs.core.seq(arglist__36550);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__36557_36563 = cljs.core.key(e);
var G__36558_36564 = w;
var G__36559_36565 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36557_36563,G__36558_36564,G__36559_36565) : print_one.call(null,G__36557_36563,G__36558_36564,G__36559_36565));

cljs.core._write(w," ");

var G__36560 = cljs.core.val(e);
var G__36561 = w;
var G__36562 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__36560,G__36561,G__36562) : print_one.call(null,G__36560,G__36561,G__36562));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__36566__i = 0, G__36566__a = new Array(arguments.length -  2);
while (G__36566__i < G__36566__a.length) {G__36566__a[G__36566__i] = arguments[G__36566__i + 2]; ++G__36566__i;}
  args = new cljs.core.IndexedSeq(G__36566__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__36567){
var iref = cljs.core.first(arglist__36567);
arglist__36567 = cljs.core.next(arglist__36567);
var f = cljs.core.first(arglist__36567);
var args = cljs.core.rest(arglist__36567);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__36570 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__36570) : cljs.core.atom.call(null,G__36570));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__36572 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36572) : cljs.core.deref.call(null,G__36572));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__36573_SHARP_,p2__36574_SHARP_){
var ret = (function (){var G__36577 = p1__36573_SHARP_;
var G__36578 = p2__36574_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36577,G__36578) : rf.call(null,G__36577,G__36578));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__36581 = null;
var G__36581__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36581__1 = (function (result){
var G__36580 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36580) : rf.call(null,G__36580));
});
var G__36581__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__36581 = function(result,input){
switch(arguments.length){
case 0:
return G__36581__0.call(this);
case 1:
return G__36581__1.call(this,result);
case 2:
return G__36581__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36581.cljs$core$IFn$_invoke$arity$0 = G__36581__0;
G__36581.cljs$core$IFn$_invoke$arity$1 = G__36581__1;
G__36581.cljs$core$IFn$_invoke$arity$2 = G__36581__2;
return G__36581;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__36590 = null;
var G__36590__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36590__1 = (function (result){
var G__36586 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36586) : rf.call(null,G__36586));
});
var G__36590__2 = (function (result,input){
var prior = (function (){var G__36587 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36587) : cljs.core.deref.call(null,G__36587));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__36588 = result;
var G__36589 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36588,G__36589) : rf.call(null,G__36588,G__36589));
}
});
G__36590 = function(result,input){
switch(arguments.length){
case 0:
return G__36590__0.call(this);
case 1:
return G__36590__1.call(this,result);
case 2:
return G__36590__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36590.cljs$core$IFn$_invoke$arity$0 = G__36590__0;
G__36590.cljs$core$IFn$_invoke$arity$1 = G__36590__1;
G__36590.cljs$core$IFn$_invoke$arity$2 = G__36590__2;
return G__36590;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24522__auto__ = this;
return cljs.core.es6_iterator(this__24522__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__36592_SHARP_,p2__36591_SHARP_){
var G__36594 = p2__36591_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__36594) : proc.call(null,G__36594));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj36596 = {};
return obj36596;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__23532__auto__ = x;
if(and__23532__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__23532__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24188__auto__ = (((x == null))?null:x);
return (function (){var or__23544__auto__ = (cljs.core._clj__GT_js[(function (){var G__36600 = x__24188__auto__;
return goog.typeOf(G__36600);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__23532__auto__ = x;
if(and__23532__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__23532__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24188__auto__ = (((x == null))?null:x);
return (function (){var or__23544__auto__ = (cljs.core._key__GT_js[(function (){var G__36604 = x__24188__auto__;
return goog.typeOf(G__36604);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__36607 = k;
if(G__36607){
var bit__24225__auto__ = null;
if(cljs.core.truth_((function (){var or__23544__auto__ = bit__24225__auto__;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return G__36607.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__36607.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36607);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36607);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__36608 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__36608) : cljs.core.clj__GT_js.call(null,G__36608));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__36624 = x;
if(G__36624){
var bit__24225__auto__ = null;
if(cljs.core.truth_((function (){var or__23544__auto__ = bit__24225__auto__;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return G__36624.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__36624.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36624);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__36624);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj36626 = {};
return obj36626;
})();
var seq__36627_36637 = cljs.core.seq(x);
var chunk__36628_36638 = null;
var count__36629_36639 = (0);
var i__36630_36640 = (0);
while(true){
if((i__36630_36640 < count__36629_36639)){
var vec__36631_36641 = chunk__36628_36638.cljs$core$IIndexed$_nth$arity$2(null,i__36630_36640);
var k_36642 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36631_36641,(0),null);
var v_36643 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36631_36641,(1),null);
(m[cljs.core.key__GT_js(k_36642)] = clj__GT_js(v_36643));

var G__36644 = seq__36627_36637;
var G__36645 = chunk__36628_36638;
var G__36646 = count__36629_36639;
var G__36647 = (i__36630_36640 + (1));
seq__36627_36637 = G__36644;
chunk__36628_36638 = G__36645;
count__36629_36639 = G__36646;
i__36630_36640 = G__36647;
continue;
} else {
var temp__4126__auto___36648 = cljs.core.seq(seq__36627_36637);
if(temp__4126__auto___36648){
var seq__36627_36649__$1 = temp__4126__auto___36648;
if(cljs.core.chunked_seq_QMARK_(seq__36627_36649__$1)){
var c__24331__auto___36650 = cljs.core.chunk_first(seq__36627_36649__$1);
var G__36651 = cljs.core.chunk_rest(seq__36627_36649__$1);
var G__36652 = c__24331__auto___36650;
var G__36653 = cljs.core.count(c__24331__auto___36650);
var G__36654 = (0);
seq__36627_36637 = G__36651;
chunk__36628_36638 = G__36652;
count__36629_36639 = G__36653;
i__36630_36640 = G__36654;
continue;
} else {
var vec__36632_36655 = cljs.core.first(seq__36627_36649__$1);
var k_36656 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36632_36655,(0),null);
var v_36657 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36632_36655,(1),null);
(m[cljs.core.key__GT_js(k_36656)] = clj__GT_js(v_36657));

var G__36658 = cljs.core.next(seq__36627_36649__$1);
var G__36659 = null;
var G__36660 = (0);
var G__36661 = (0);
seq__36627_36637 = G__36658;
chunk__36628_36638 = G__36659;
count__36629_36639 = G__36660;
i__36630_36640 = G__36661;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__36633_36662 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__36634_36663 = null;
var count__36635_36664 = (0);
var i__36636_36665 = (0);
while(true){
if((i__36636_36665 < count__36635_36664)){
var x_36666__$1 = chunk__36634_36663.cljs$core$IIndexed$_nth$arity$2(null,i__36636_36665);
arr.push(x_36666__$1);

var G__36667 = seq__36633_36662;
var G__36668 = chunk__36634_36663;
var G__36669 = count__36635_36664;
var G__36670 = (i__36636_36665 + (1));
seq__36633_36662 = G__36667;
chunk__36634_36663 = G__36668;
count__36635_36664 = G__36669;
i__36636_36665 = G__36670;
continue;
} else {
var temp__4126__auto___36671 = cljs.core.seq(seq__36633_36662);
if(temp__4126__auto___36671){
var seq__36633_36672__$1 = temp__4126__auto___36671;
if(cljs.core.chunked_seq_QMARK_(seq__36633_36672__$1)){
var c__24331__auto___36673 = cljs.core.chunk_first(seq__36633_36672__$1);
var G__36674 = cljs.core.chunk_rest(seq__36633_36672__$1);
var G__36675 = c__24331__auto___36673;
var G__36676 = cljs.core.count(c__24331__auto___36673);
var G__36677 = (0);
seq__36633_36662 = G__36674;
chunk__36634_36663 = G__36675;
count__36635_36664 = G__36676;
i__36636_36665 = G__36677;
continue;
} else {
var x_36678__$1 = cljs.core.first(seq__36633_36672__$1);
arr.push(x_36678__$1);

var G__36679 = cljs.core.next(seq__36633_36672__$1);
var G__36680 = null;
var G__36681 = (0);
var G__36682 = (0);
seq__36633_36662 = G__36679;
chunk__36634_36663 = G__36680;
count__36635_36664 = G__36681;
i__36636_36665 = G__36682;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj36684 = {};
return obj36684;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__23532__auto__ = x;
if(and__23532__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__23532__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24188__auto__ = (((x == null))?null:x);
return (function (){var or__23544__auto__ = (cljs.core._js__GT_clj[(function (){var G__36688 = x__24188__auto__;
return goog.typeOf(G__36688);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__36745__delegate = function (x,opts){
var map__36718 = opts;
var map__36718__$1 = ((cljs.core.seq_QMARK_(map__36718))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36718):map__36718);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36718__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__36718,map__36718__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__36734 = x__$1;
if(G__36734){
var bit__24225__auto__ = null;
if(cljs.core.truth_((function (){var or__23544__auto__ = bit__24225__auto__;
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return G__36734.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__36734.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__36734);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__36734);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__24300__auto__ = ((function (map__36718,map__36718__$1,keywordize_keys,keyfn){
return (function iter__36735(s__36736){
return (new cljs.core.LazySeq(null,((function (map__36718,map__36718__$1,keywordize_keys,keyfn){
return (function (){
var s__36736__$1 = s__36736;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__36736__$1);
if(temp__4126__auto__){
var s__36736__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__36736__$2)){
var c__24298__auto__ = cljs.core.chunk_first(s__36736__$2);
var size__24299__auto__ = cljs.core.count(c__24298__auto__);
var b__36738 = cljs.core.chunk_buffer(size__24299__auto__);
if((function (){var i__36737 = (0);
while(true){
if((i__36737 < size__24299__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__24298__auto__,i__36737);
cljs.core.chunk_append(b__36738,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__36743 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__36743) : keyfn.call(null,G__36743));
})(),thisfn((x__$1[k]))], null));

var G__36746 = (i__36737 + (1));
i__36737 = G__36746;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__36738),iter__36735(cljs.core.chunk_rest(s__36736__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__36738),null);
}
} else {
var k = cljs.core.first(s__36736__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__36744 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__36744) : keyfn.call(null,G__36744));
})(),thisfn((x__$1[k]))], null),iter__36735(cljs.core.rest(s__36736__$2)));
}
} else {
return null;
}
break;
}
});})(map__36718,map__36718__$1,keywordize_keys,keyfn))
,null,null));
});})(map__36718,map__36718__$1,keywordize_keys,keyfn))
;
return iter__24300__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__36718,map__36718__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__36745 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__36747__i = 0, G__36747__a = new Array(arguments.length -  1);
while (G__36747__i < G__36747__a.length) {G__36747__a[G__36747__i] = arguments[G__36747__i + 1]; ++G__36747__i;}
  opts = new cljs.core.IndexedSeq(G__36747__a,0);
} 
return G__36745__delegate.call(this,x,opts);};
G__36745.cljs$lang$maxFixedArity = 1;
G__36745.cljs$lang$applyTo = (function (arglist__36748){
var x = cljs.core.first(arglist__36748);
var opts = cljs.core.rest(arglist__36748);
return G__36745__delegate(x,opts);
});
G__36745.cljs$core$IFn$_invoke$arity$variadic = G__36745__delegate;
return G__36745;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__36749 = null;
if (arguments.length > 1) {
var G__36750__i = 0, G__36750__a = new Array(arguments.length -  1);
while (G__36750__i < G__36750__a.length) {G__36750__a[G__36750__i] = arguments[G__36750__i + 1]; ++G__36750__i;}
G__36749 = new cljs.core.IndexedSeq(G__36750__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__36749);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__36753 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__36753) : cljs.core.atom.call(null,G__36753));
})();
return ((function (mem){
return (function() { 
var G__36755__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__36754 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36754) : cljs.core.deref.call(null,G__36754));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__36755 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__36756__i = 0, G__36756__a = new Array(arguments.length -  0);
while (G__36756__i < G__36756__a.length) {G__36756__a[G__36756__i] = arguments[G__36756__i + 0]; ++G__36756__i;}
  args = new cljs.core.IndexedSeq(G__36756__a,0);
} 
return G__36755__delegate.call(this,args);};
G__36755.cljs$lang$maxFixedArity = 0;
G__36755.cljs$lang$applyTo = (function (arglist__36757){
var args = cljs.core.seq(arglist__36757);
return G__36755__delegate(args);
});
G__36755.cljs$core$IFn$_invoke$arity$variadic = G__36755__delegate;
return G__36755;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__36759 = ret;
f = G__36759;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__36760__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__36760 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__36761__i = 0, G__36761__a = new Array(arguments.length -  1);
while (G__36761__i < G__36761__a.length) {G__36761__a[G__36761__i] = arguments[G__36761__i + 1]; ++G__36761__i;}
  args = new cljs.core.IndexedSeq(G__36761__a,0);
} 
return G__36760__delegate.call(this,f,args);};
G__36760.cljs$lang$maxFixedArity = 1;
G__36760.cljs$lang$applyTo = (function (arglist__36762){
var f = cljs.core.first(arglist__36762);
var args = cljs.core.rest(arglist__36762);
return G__36760__delegate(f,args);
});
G__36760.cljs$core$IFn$_invoke$arity$variadic = G__36760__delegate;
return G__36760;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__36763 = null;
if (arguments.length > 1) {
var G__36764__i = 0, G__36764__a = new Array(arguments.length -  1);
while (G__36764__i < G__36764__a.length) {G__36764__a[G__36764__i] = arguments[G__36764__i + 1]; ++G__36764__i;}
G__36763 = new cljs.core.IndexedSeq(G__36764__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__36763);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__36767 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__36767) : Math.floor.call(null,G__36767));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__36769 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36769) : f.call(null,G__36769));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__36771 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__36771) : cljs.core.atom.call(null,G__36771));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__36772__i = 0, G__36772__a = new Array(arguments.length -  1);
while (G__36772__i < G__36772__a.length) {G__36772__a[G__36772__i] = arguments[G__36772__i + 1]; ++G__36772__i;}
  args = new cljs.core.IndexedSeq(G__36772__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__36773){
var f = cljs.core.first(arglist__36773);
var args = cljs.core.rest(arglist__36773);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36838 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36838) : cljs.core.deref.call(null,G__36838));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__23544__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
var and__23532__auto__ = cljs.core.vector_QMARK_(parent);
if(and__23532__auto__){
var and__23532__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__23532__auto____$1){
var and__23532__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__23532__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__36863 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__36861 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__36861) : child.call(null,G__36861));
})(),(function (){var G__36862 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__36862) : parent.call(null,G__36862));
})());
var G__36864 = (i + (1));
ret = G__36863;
i = G__36864;
continue;
}
break;
}
} else {
return and__23532__auto____$2;
}
} else {
return and__23532__auto____$1;
}
} else {
return and__23532__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__36868 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36868) : cljs.core.deref.call(null,G__36868));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__36872 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36872) : cljs.core.deref.call(null,G__36872));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__36876 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36876) : cljs.core.deref.call(null,G__36876));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__36885 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__36885) : targets.call(null,G__36885));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__36886 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__36886) : sources.call(null,G__36886));
})()));
});})(tp,td,ta))
;
var or__23544__auto__ = ((cljs.core.contains_QMARK_((function (){var G__36890 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__36890) : tp.call(null,G__36890));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__36891 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36891) : ta.call(null,G__36891));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__36892 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36892) : ta.call(null,G__36892));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__36899 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36899) : parentMap.call(null,G__36899));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__36900 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36900) : parentMap.call(null,G__36900));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__36893_SHARP_){
return cljs.core.cons(cljs.core.first(p1__36893_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__36893_SHARP_),cljs.core.second(p1__36893_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__36901 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36901) : parentMap.call(null,G__36901));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__36894_SHARP_,p2__36895_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__36894_SHARP_,p2__36895_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__36904 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36904) : cljs.core.deref.call(null,G__36904));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__36905 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36905) : cljs.core.deref.call(null,G__36905));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__36921 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36921) : cljs.core.deref.call(null,G__36921));
})().call(null,x);
var or__23544__auto__ = (cljs.core.truth_((function (){var and__23532__auto__ = xprefs;
if(cljs.core.truth_(and__23532__auto__)){
var G__36923 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__36923) : xprefs.call(null,G__36923));
} else {
return and__23532__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__36924 = cljs.core.rest(ps);
ps = G__36924;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__23544__auto____$1)){
return or__23544__auto____$1;
} else {
var or__23544__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__36925 = cljs.core.rest(ps);
ps = G__36925;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__23544__auto____$2)){
return or__23544__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__23544__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__23544__auto__)){
return or__23544__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__36939){
var vec__36940 = p__36939;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36940,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36940,(1),null);
var e = vec__36940;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36941 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36941) : cljs.core.deref.call(null,G__36941));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__23544__auto__ = (be == null);
if(or__23544__auto__){
return or__23544__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__36942 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36942) : cljs.core.deref.call(null,G__36942));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36943 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36943) : cljs.core.deref.call(null,G__36943));
})(),(function (){var G__36944 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36944) : cljs.core.deref.call(null,G__36944));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj36946 = {};
return obj36946;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__23532__auto__ = mf;
if(and__23532__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__23532__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24188__auto__ = (((mf == null))?null:mf);
return (function (){var or__23544__auto__ = (cljs.core._reset[(function (){var G__36950 = x__24188__auto__;
return goog.typeOf(G__36950);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._reset["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__23532__auto__ = mf;
if(and__23532__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__23532__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24188__auto__ = (((mf == null))?null:mf);
return (function (){var or__23544__auto__ = (cljs.core._add_method[(function (){var G__36954 = x__24188__auto__;
return goog.typeOf(G__36954);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._add_method["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__23532__auto__ = mf;
if(and__23532__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__23532__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24188__auto__ = (((mf == null))?null:mf);
return (function (){var or__23544__auto__ = (cljs.core._remove_method[(function (){var G__36958 = x__24188__auto__;
return goog.typeOf(G__36958);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._remove_method["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__23532__auto__ = mf;
if(and__23532__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__23532__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24188__auto__ = (((mf == null))?null:mf);
return (function (){var or__23544__auto__ = (cljs.core._prefer_method[(function (){var G__36962 = x__24188__auto__;
return goog.typeOf(G__36962);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__23532__auto__ = mf;
if(and__23532__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__23532__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24188__auto__ = (((mf == null))?null:mf);
return (function (){var or__23544__auto__ = (cljs.core._get_method[(function (){var G__36966 = x__24188__auto__;
return goog.typeOf(G__36966);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._get_method["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__23532__auto__ = mf;
if(and__23532__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__23532__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24188__auto__ = (((mf == null))?null:mf);
return (function (){var or__23544__auto__ = (cljs.core._methods[(function (){var G__36970 = x__24188__auto__;
return goog.typeOf(G__36970);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._methods["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__23532__auto__ = mf;
if(and__23532__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__23532__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24188__auto__ = (((mf == null))?null:mf);
return (function (){var or__23544__auto__ = (cljs.core._prefers[(function (){var G__36974 = x__24188__auto__;
return goog.typeOf(G__36974);
})()]);
if(or__23544__auto__){
return or__23544__auto__;
} else {
var or__23544__auto____$1 = (cljs.core._prefers["_"]);
if(or__23544__auto____$1){
return or__23544__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__36976 = this$__$1;
return goog.getUid(G__36976);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36977 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36977) : cljs.core.deref.call(null,G__36977));
})(),(function (){var G__36978 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36978) : cljs.core.deref.call(null,G__36978));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__36979 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36979) : cljs.core.deref.call(null,G__36979));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__36980 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36980) : cljs.core.deref.call(null,G__36980));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36981 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36981) : cljs.core.deref.call(null,G__36981));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36982 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36982) : cljs.core.deref.call(null,G__36982));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__37823 = null;
var G__37823__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__37823__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36983 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__36983) : self__.dispatch_fn.call(null,G__36983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36984 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__36984) : target_fn.call(null,G__36984));
});
var G__37823__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36985 = a;
var G__36986 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__36985,G__36986) : self__.dispatch_fn.call(null,G__36985,G__36986));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36987 = a;
var G__36988 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__36987,G__36988) : target_fn.call(null,G__36987,G__36988));
});
var G__37823__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36989 = a;
var G__36990 = b;
var G__36991 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__36989,G__36990,G__36991) : self__.dispatch_fn.call(null,G__36989,G__36990,G__36991));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36992 = a;
var G__36993 = b;
var G__36994 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__36992,G__36993,G__36994) : target_fn.call(null,G__36992,G__36993,G__36994));
});
var G__37823__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36995 = a;
var G__36996 = b;
var G__36997 = c;
var G__36998 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__36995,G__36996,G__36997,G__36998) : self__.dispatch_fn.call(null,G__36995,G__36996,G__36997,G__36998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36999 = a;
var G__37000 = b;
var G__37001 = c;
var G__37002 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__36999,G__37000,G__37001,G__37002) : target_fn.call(null,G__36999,G__37000,G__37001,G__37002));
});
var G__37823__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37003 = a;
var G__37004 = b;
var G__37005 = c;
var G__37006 = d;
var G__37007 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__37003,G__37004,G__37005,G__37006,G__37007) : self__.dispatch_fn.call(null,G__37003,G__37004,G__37005,G__37006,G__37007));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37008 = a;
var G__37009 = b;
var G__37010 = c;
var G__37011 = d;
var G__37012 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__37008,G__37009,G__37010,G__37011,G__37012) : target_fn.call(null,G__37008,G__37009,G__37010,G__37011,G__37012));
});
var G__37823__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37013 = a;
var G__37014 = b;
var G__37015 = c;
var G__37016 = d;
var G__37017 = e;
var G__37018 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__37013,G__37014,G__37015,G__37016,G__37017,G__37018) : self__.dispatch_fn.call(null,G__37013,G__37014,G__37015,G__37016,G__37017,G__37018));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37019 = a;
var G__37020 = b;
var G__37021 = c;
var G__37022 = d;
var G__37023 = e;
var G__37024 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__37019,G__37020,G__37021,G__37022,G__37023,G__37024) : target_fn.call(null,G__37019,G__37020,G__37021,G__37022,G__37023,G__37024));
});
var G__37823__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37025 = a;
var G__37026 = b;
var G__37027 = c;
var G__37028 = d;
var G__37029 = e;
var G__37030 = f;
var G__37031 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__37025,G__37026,G__37027,G__37028,G__37029,G__37030,G__37031) : self__.dispatch_fn.call(null,G__37025,G__37026,G__37027,G__37028,G__37029,G__37030,G__37031));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37032 = a;
var G__37033 = b;
var G__37034 = c;
var G__37035 = d;
var G__37036 = e;
var G__37037 = f;
var G__37038 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__37032,G__37033,G__37034,G__37035,G__37036,G__37037,G__37038) : target_fn.call(null,G__37032,G__37033,G__37034,G__37035,G__37036,G__37037,G__37038));
});
var G__37823__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37039 = a;
var G__37040 = b;
var G__37041 = c;
var G__37042 = d;
var G__37043 = e;
var G__37044 = f;
var G__37045 = g;
var G__37046 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__37039,G__37040,G__37041,G__37042,G__37043,G__37044,G__37045,G__37046) : self__.dispatch_fn.call(null,G__37039,G__37040,G__37041,G__37042,G__37043,G__37044,G__37045,G__37046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37047 = a;
var G__37048 = b;
var G__37049 = c;
var G__37050 = d;
var G__37051 = e;
var G__37052 = f;
var G__37053 = g;
var G__37054 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__37047,G__37048,G__37049,G__37050,G__37051,G__37052,G__37053,G__37054) : target_fn.call(null,G__37047,G__37048,G__37049,G__37050,G__37051,G__37052,G__37053,G__37054));
});
var G__37823__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37055 = a;
var G__37056 = b;
var G__37057 = c;
var G__37058 = d;
var G__37059 = e;
var G__37060 = f;
var G__37061 = g;
var G__37062 = h;
var G__37063 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__37055,G__37056,G__37057,G__37058,G__37059,G__37060,G__37061,G__37062,G__37063) : self__.dispatch_fn.call(null,G__37055,G__37056,G__37057,G__37058,G__37059,G__37060,G__37061,G__37062,G__37063));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37064 = a;
var G__37065 = b;
var G__37066 = c;
var G__37067 = d;
var G__37068 = e;
var G__37069 = f;
var G__37070 = g;
var G__37071 = h;
var G__37072 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__37064,G__37065,G__37066,G__37067,G__37068,G__37069,G__37070,G__37071,G__37072) : target_fn.call(null,G__37064,G__37065,G__37066,G__37067,G__37068,G__37069,G__37070,G__37071,G__37072));
});
var G__37823__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37073 = a;
var G__37074 = b;
var G__37075 = c;
var G__37076 = d;
var G__37077 = e;
var G__37078 = f;
var G__37079 = g;
var G__37080 = h;
var G__37081 = i;
var G__37082 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__37073,G__37074,G__37075,G__37076,G__37077,G__37078,G__37079,G__37080,G__37081,G__37082) : self__.dispatch_fn.call(null,G__37073,G__37074,G__37075,G__37076,G__37077,G__37078,G__37079,G__37080,G__37081,G__37082));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37083 = a;
var G__37084 = b;
var G__37085 = c;
var G__37086 = d;
var G__37087 = e;
var G__37088 = f;
var G__37089 = g;
var G__37090 = h;
var G__37091 = i;
var G__37092 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__37083,G__37084,G__37085,G__37086,G__37087,G__37088,G__37089,G__37090,G__37091,G__37092) : target_fn.call(null,G__37083,G__37084,G__37085,G__37086,G__37087,G__37088,G__37089,G__37090,G__37091,G__37092));
});
var G__37823__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37093 = a;
var G__37094 = b;
var G__37095 = c;
var G__37096 = d;
var G__37097 = e;
var G__37098 = f;
var G__37099 = g;
var G__37100 = h;
var G__37101 = i;
var G__37102 = j;
var G__37103 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__37093,G__37094,G__37095,G__37096,G__37097,G__37098,G__37099,G__37100,G__37101,G__37102,G__37103) : self__.dispatch_fn.call(null,G__37093,G__37094,G__37095,G__37096,G__37097,G__37098,G__37099,G__37100,G__37101,G__37102,G__37103));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37104 = a;
var G__37105 = b;
var G__37106 = c;
var G__37107 = d;
var G__37108 = e;
var G__37109 = f;
var G__37110 = g;
var G__37111 = h;
var G__37112 = i;
var G__37113 = j;
var G__37114 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__37104,G__37105,G__37106,G__37107,G__37108,G__37109,G__37110,G__37111,G__37112,G__37113,G__37114) : target_fn.call(null,G__37104,G__37105,G__37106,G__37107,G__37108,G__37109,G__37110,G__37111,G__37112,G__37113,G__37114));
});
var G__37823__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37115 = a;
var G__37116 = b;
var G__37117 = c;
var G__37118 = d;
var G__37119 = e;
var G__37120 = f;
var G__37121 = g;
var G__37122 = h;
var G__37123 = i;
var G__37124 = j;
var G__37125 = k;
var G__37126 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__37115,G__37116,G__37117,G__37118,G__37119,G__37120,G__37121,G__37122,G__37123,G__37124,G__37125,G__37126) : self__.dispatch_fn.call(null,G__37115,G__37116,G__37117,G__37118,G__37119,G__37120,G__37121,G__37122,G__37123,G__37124,G__37125,G__37126));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37127 = a;
var G__37128 = b;
var G__37129 = c;
var G__37130 = d;
var G__37131 = e;
var G__37132 = f;
var G__37133 = g;
var G__37134 = h;
var G__37135 = i;
var G__37136 = j;
var G__37137 = k;
var G__37138 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__37127,G__37128,G__37129,G__37130,G__37131,G__37132,G__37133,G__37134,G__37135,G__37136,G__37137,G__37138) : target_fn.call(null,G__37127,G__37128,G__37129,G__37130,G__37131,G__37132,G__37133,G__37134,G__37135,G__37136,G__37137,G__37138));
});
var G__37823__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37139 = a;
var G__37140 = b;
var G__37141 = c;
var G__37142 = d;
var G__37143 = e;
var G__37144 = f;
var G__37145 = g;
var G__37146 = h;
var G__37147 = i;
var G__37148 = j;
var G__37149 = k;
var G__37150 = l;
var G__37151 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__37139,G__37140,G__37141,G__37142,G__37143,G__37144,G__37145,G__37146,G__37147,G__37148,G__37149,G__37150,G__37151) : self__.dispatch_fn.call(null,G__37139,G__37140,G__37141,G__37142,G__37143,G__37144,G__37145,G__37146,G__37147,G__37148,G__37149,G__37150,G__37151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37152 = a;
var G__37153 = b;
var G__37154 = c;
var G__37155 = d;
var G__37156 = e;
var G__37157 = f;
var G__37158 = g;
var G__37159 = h;
var G__37160 = i;
var G__37161 = j;
var G__37162 = k;
var G__37163 = l;
var G__37164 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__37152,G__37153,G__37154,G__37155,G__37156,G__37157,G__37158,G__37159,G__37160,G__37161,G__37162,G__37163,G__37164) : target_fn.call(null,G__37152,G__37153,G__37154,G__37155,G__37156,G__37157,G__37158,G__37159,G__37160,G__37161,G__37162,G__37163,G__37164));
});
var G__37823__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37165 = a;
var G__37166 = b;
var G__37167 = c;
var G__37168 = d;
var G__37169 = e;
var G__37170 = f;
var G__37171 = g;
var G__37172 = h;
var G__37173 = i;
var G__37174 = j;
var G__37175 = k;
var G__37176 = l;
var G__37177 = m;
var G__37178 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__37165,G__37166,G__37167,G__37168,G__37169,G__37170,G__37171,G__37172,G__37173,G__37174,G__37175,G__37176,G__37177,G__37178) : self__.dispatch_fn.call(null,G__37165,G__37166,G__37167,G__37168,G__37169,G__37170,G__37171,G__37172,G__37173,G__37174,G__37175,G__37176,G__37177,G__37178));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37179 = a;
var G__37180 = b;
var G__37181 = c;
var G__37182 = d;
var G__37183 = e;
var G__37184 = f;
var G__37185 = g;
var G__37186 = h;
var G__37187 = i;
var G__37188 = j;
var G__37189 = k;
var G__37190 = l;
var G__37191 = m;
var G__37192 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__37179,G__37180,G__37181,G__37182,G__37183,G__37184,G__37185,G__37186,G__37187,G__37188,G__37189,G__37190,G__37191,G__37192) : target_fn.call(null,G__37179,G__37180,G__37181,G__37182,G__37183,G__37184,G__37185,G__37186,G__37187,G__37188,G__37189,G__37190,G__37191,G__37192));
});
var G__37823__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37193 = a;
var G__37194 = b;
var G__37195 = c;
var G__37196 = d;
var G__37197 = e;
var G__37198 = f;
var G__37199 = g;
var G__37200 = h;
var G__37201 = i;
var G__37202 = j;
var G__37203 = k;
var G__37204 = l;
var G__37205 = m;
var G__37206 = n;
var G__37207 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__37193,G__37194,G__37195,G__37196,G__37197,G__37198,G__37199,G__37200,G__37201,G__37202,G__37203,G__37204,G__37205,G__37206,G__37207) : self__.dispatch_fn.call(null,G__37193,G__37194,G__37195,G__37196,G__37197,G__37198,G__37199,G__37200,G__37201,G__37202,G__37203,G__37204,G__37205,G__37206,G__37207));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37208 = a;
var G__37209 = b;
var G__37210 = c;
var G__37211 = d;
var G__37212 = e;
var G__37213 = f;
var G__37214 = g;
var G__37215 = h;
var G__37216 = i;
var G__37217 = j;
var G__37218 = k;
var G__37219 = l;
var G__37220 = m;
var G__37221 = n;
var G__37222 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__37208,G__37209,G__37210,G__37211,G__37212,G__37213,G__37214,G__37215,G__37216,G__37217,G__37218,G__37219,G__37220,G__37221,G__37222) : target_fn.call(null,G__37208,G__37209,G__37210,G__37211,G__37212,G__37213,G__37214,G__37215,G__37216,G__37217,G__37218,G__37219,G__37220,G__37221,G__37222));
});
var G__37823__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37223 = a;
var G__37224 = b;
var G__37225 = c;
var G__37226 = d;
var G__37227 = e;
var G__37228 = f;
var G__37229 = g;
var G__37230 = h;
var G__37231 = i;
var G__37232 = j;
var G__37233 = k;
var G__37234 = l;
var G__37235 = m;
var G__37236 = n;
var G__37237 = o;
var G__37238 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__37223,G__37224,G__37225,G__37226,G__37227,G__37228,G__37229,G__37230,G__37231,G__37232,G__37233,G__37234,G__37235,G__37236,G__37237,G__37238) : self__.dispatch_fn.call(null,G__37223,G__37224,G__37225,G__37226,G__37227,G__37228,G__37229,G__37230,G__37231,G__37232,G__37233,G__37234,G__37235,G__37236,G__37237,G__37238));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37239 = a;
var G__37240 = b;
var G__37241 = c;
var G__37242 = d;
var G__37243 = e;
var G__37244 = f;
var G__37245 = g;
var G__37246 = h;
var G__37247 = i;
var G__37248 = j;
var G__37249 = k;
var G__37250 = l;
var G__37251 = m;
var G__37252 = n;
var G__37253 = o;
var G__37254 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__37239,G__37240,G__37241,G__37242,G__37243,G__37244,G__37245,G__37246,G__37247,G__37248,G__37249,G__37250,G__37251,G__37252,G__37253,G__37254) : target_fn.call(null,G__37239,G__37240,G__37241,G__37242,G__37243,G__37244,G__37245,G__37246,G__37247,G__37248,G__37249,G__37250,G__37251,G__37252,G__37253,G__37254));
});
var G__37823__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37255 = a;
var G__37256 = b;
var G__37257 = c;
var G__37258 = d;
var G__37259 = e;
var G__37260 = f;
var G__37261 = g;
var G__37262 = h;
var G__37263 = i;
var G__37264 = j;
var G__37265 = k;
var G__37266 = l;
var G__37267 = m;
var G__37268 = n;
var G__37269 = o;
var G__37270 = p;
var G__37271 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__37255,G__37256,G__37257,G__37258,G__37259,G__37260,G__37261,G__37262,G__37263,G__37264,G__37265,G__37266,G__37267,G__37268,G__37269,G__37270,G__37271) : self__.dispatch_fn.call(null,G__37255,G__37256,G__37257,G__37258,G__37259,G__37260,G__37261,G__37262,G__37263,G__37264,G__37265,G__37266,G__37267,G__37268,G__37269,G__37270,G__37271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37272 = a;
var G__37273 = b;
var G__37274 = c;
var G__37275 = d;
var G__37276 = e;
var G__37277 = f;
var G__37278 = g;
var G__37279 = h;
var G__37280 = i;
var G__37281 = j;
var G__37282 = k;
var G__37283 = l;
var G__37284 = m;
var G__37285 = n;
var G__37286 = o;
var G__37287 = p;
var G__37288 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__37272,G__37273,G__37274,G__37275,G__37276,G__37277,G__37278,G__37279,G__37280,G__37281,G__37282,G__37283,G__37284,G__37285,G__37286,G__37287,G__37288) : target_fn.call(null,G__37272,G__37273,G__37274,G__37275,G__37276,G__37277,G__37278,G__37279,G__37280,G__37281,G__37282,G__37283,G__37284,G__37285,G__37286,G__37287,G__37288));
});
var G__37823__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37289 = a;
var G__37290 = b;
var G__37291 = c;
var G__37292 = d;
var G__37293 = e;
var G__37294 = f;
var G__37295 = g;
var G__37296 = h;
var G__37297 = i;
var G__37298 = j;
var G__37299 = k;
var G__37300 = l;
var G__37301 = m;
var G__37302 = n;
var G__37303 = o;
var G__37304 = p;
var G__37305 = q;
var G__37306 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__37289,G__37290,G__37291,G__37292,G__37293,G__37294,G__37295,G__37296,G__37297,G__37298,G__37299,G__37300,G__37301,G__37302,G__37303,G__37304,G__37305,G__37306) : self__.dispatch_fn.call(null,G__37289,G__37290,G__37291,G__37292,G__37293,G__37294,G__37295,G__37296,G__37297,G__37298,G__37299,G__37300,G__37301,G__37302,G__37303,G__37304,G__37305,G__37306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37307 = a;
var G__37308 = b;
var G__37309 = c;
var G__37310 = d;
var G__37311 = e;
var G__37312 = f;
var G__37313 = g;
var G__37314 = h;
var G__37315 = i;
var G__37316 = j;
var G__37317 = k;
var G__37318 = l;
var G__37319 = m;
var G__37320 = n;
var G__37321 = o;
var G__37322 = p;
var G__37323 = q;
var G__37324 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__37307,G__37308,G__37309,G__37310,G__37311,G__37312,G__37313,G__37314,G__37315,G__37316,G__37317,G__37318,G__37319,G__37320,G__37321,G__37322,G__37323,G__37324) : target_fn.call(null,G__37307,G__37308,G__37309,G__37310,G__37311,G__37312,G__37313,G__37314,G__37315,G__37316,G__37317,G__37318,G__37319,G__37320,G__37321,G__37322,G__37323,G__37324));
});
var G__37823__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37325 = a;
var G__37326 = b;
var G__37327 = c;
var G__37328 = d;
var G__37329 = e;
var G__37330 = f;
var G__37331 = g;
var G__37332 = h;
var G__37333 = i;
var G__37334 = j;
var G__37335 = k;
var G__37336 = l;
var G__37337 = m;
var G__37338 = n;
var G__37339 = o;
var G__37340 = p;
var G__37341 = q;
var G__37342 = r;
var G__37343 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__37325,G__37326,G__37327,G__37328,G__37329,G__37330,G__37331,G__37332,G__37333,G__37334,G__37335,G__37336,G__37337,G__37338,G__37339,G__37340,G__37341,G__37342,G__37343) : self__.dispatch_fn.call(null,G__37325,G__37326,G__37327,G__37328,G__37329,G__37330,G__37331,G__37332,G__37333,G__37334,G__37335,G__37336,G__37337,G__37338,G__37339,G__37340,G__37341,G__37342,G__37343));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37344 = a;
var G__37345 = b;
var G__37346 = c;
var G__37347 = d;
var G__37348 = e;
var G__37349 = f;
var G__37350 = g;
var G__37351 = h;
var G__37352 = i;
var G__37353 = j;
var G__37354 = k;
var G__37355 = l;
var G__37356 = m;
var G__37357 = n;
var G__37358 = o;
var G__37359 = p;
var G__37360 = q;
var G__37361 = r;
var G__37362 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__37344,G__37345,G__37346,G__37347,G__37348,G__37349,G__37350,G__37351,G__37352,G__37353,G__37354,G__37355,G__37356,G__37357,G__37358,G__37359,G__37360,G__37361,G__37362) : target_fn.call(null,G__37344,G__37345,G__37346,G__37347,G__37348,G__37349,G__37350,G__37351,G__37352,G__37353,G__37354,G__37355,G__37356,G__37357,G__37358,G__37359,G__37360,G__37361,G__37362));
});
var G__37823__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__37363 = a;
var G__37364 = b;
var G__37365 = c;
var G__37366 = d;
var G__37367 = e;
var G__37368 = f;
var G__37369 = g;
var G__37370 = h;
var G__37371 = i;
var G__37372 = j;
var G__37373 = k;
var G__37374 = l;
var G__37375 = m;
var G__37376 = n;
var G__37377 = o;
var G__37378 = p;
var G__37379 = q;
var G__37380 = r;
var G__37381 = s;
var G__37382 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__37363,G__37364,G__37365,G__37366,G__37367,G__37368,G__37369,G__37370,G__37371,G__37372,G__37373,G__37374,G__37375,G__37376,G__37377,G__37378,G__37379,G__37380,G__37381,G__37382) : self__.dispatch_fn.call(null,G__37363,G__37364,G__37365,G__37366,G__37367,G__37368,G__37369,G__37370,G__37371,G__37372,G__37373,G__37374,G__37375,G__37376,G__37377,G__37378,G__37379,G__37380,G__37381,G__37382));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37383 = a;
var G__37384 = b;
var G__37385 = c;
var G__37386 = d;
var G__37387 = e;
var G__37388 = f;
var G__37389 = g;
var G__37390 = h;
var G__37391 = i;
var G__37392 = j;
var G__37393 = k;
var G__37394 = l;
var G__37395 = m;
var G__37396 = n;
var G__37397 = o;
var G__37398 = p;
var G__37399 = q;
var G__37400 = r;
var G__37401 = s;
var G__37402 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__37383,G__37384,G__37385,G__37386,G__37387,G__37388,G__37389,G__37390,G__37391,G__37392,G__37393,G__37394,G__37395,G__37396,G__37397,G__37398,G__37399,G__37400,G__37401,G__37402) : target_fn.call(null,G__37383,G__37384,G__37385,G__37386,G__37387,G__37388,G__37389,G__37390,G__37391,G__37392,G__37393,G__37394,G__37395,G__37396,G__37397,G__37398,G__37399,G__37400,G__37401,G__37402));
});
var G__37823__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__37823 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__37823__1.call(this,self__);
case 2:
return G__37823__2.call(this,self__,a);
case 3:
return G__37823__3.call(this,self__,a,b);
case 4:
return G__37823__4.call(this,self__,a,b,c);
case 5:
return G__37823__5.call(this,self__,a,b,c,d);
case 6:
return G__37823__6.call(this,self__,a,b,c,d,e);
case 7:
return G__37823__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__37823__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__37823__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__37823__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__37823__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__37823__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__37823__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__37823__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__37823__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__37823__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__37823__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__37823__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__37823__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__37823__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__37823__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__37823__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37823.cljs$core$IFn$_invoke$arity$1 = G__37823__1;
G__37823.cljs$core$IFn$_invoke$arity$2 = G__37823__2;
G__37823.cljs$core$IFn$_invoke$arity$3 = G__37823__3;
G__37823.cljs$core$IFn$_invoke$arity$4 = G__37823__4;
G__37823.cljs$core$IFn$_invoke$arity$5 = G__37823__5;
G__37823.cljs$core$IFn$_invoke$arity$6 = G__37823__6;
G__37823.cljs$core$IFn$_invoke$arity$7 = G__37823__7;
G__37823.cljs$core$IFn$_invoke$arity$8 = G__37823__8;
G__37823.cljs$core$IFn$_invoke$arity$9 = G__37823__9;
G__37823.cljs$core$IFn$_invoke$arity$10 = G__37823__10;
G__37823.cljs$core$IFn$_invoke$arity$11 = G__37823__11;
G__37823.cljs$core$IFn$_invoke$arity$12 = G__37823__12;
G__37823.cljs$core$IFn$_invoke$arity$13 = G__37823__13;
G__37823.cljs$core$IFn$_invoke$arity$14 = G__37823__14;
G__37823.cljs$core$IFn$_invoke$arity$15 = G__37823__15;
G__37823.cljs$core$IFn$_invoke$arity$16 = G__37823__16;
G__37823.cljs$core$IFn$_invoke$arity$17 = G__37823__17;
G__37823.cljs$core$IFn$_invoke$arity$18 = G__37823__18;
G__37823.cljs$core$IFn$_invoke$arity$19 = G__37823__19;
G__37823.cljs$core$IFn$_invoke$arity$20 = G__37823__20;
G__37823.cljs$core$IFn$_invoke$arity$21 = G__37823__21;
G__37823.cljs$core$IFn$_invoke$arity$22 = G__37823__22;
return G__37823;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args36975){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36975)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37403 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__37403) : self__.dispatch_fn.call(null,G__37403));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37404 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__37404) : target_fn.call(null,G__37404));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37405 = a;
var G__37406 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__37405,G__37406) : self__.dispatch_fn.call(null,G__37405,G__37406));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37407 = a;
var G__37408 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__37407,G__37408) : target_fn.call(null,G__37407,G__37408));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37409 = a;
var G__37410 = b;
var G__37411 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__37409,G__37410,G__37411) : self__.dispatch_fn.call(null,G__37409,G__37410,G__37411));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37412 = a;
var G__37413 = b;
var G__37414 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__37412,G__37413,G__37414) : target_fn.call(null,G__37412,G__37413,G__37414));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37415 = a;
var G__37416 = b;
var G__37417 = c;
var G__37418 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__37415,G__37416,G__37417,G__37418) : self__.dispatch_fn.call(null,G__37415,G__37416,G__37417,G__37418));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37419 = a;
var G__37420 = b;
var G__37421 = c;
var G__37422 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__37419,G__37420,G__37421,G__37422) : target_fn.call(null,G__37419,G__37420,G__37421,G__37422));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37423 = a;
var G__37424 = b;
var G__37425 = c;
var G__37426 = d;
var G__37427 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__37423,G__37424,G__37425,G__37426,G__37427) : self__.dispatch_fn.call(null,G__37423,G__37424,G__37425,G__37426,G__37427));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37428 = a;
var G__37429 = b;
var G__37430 = c;
var G__37431 = d;
var G__37432 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__37428,G__37429,G__37430,G__37431,G__37432) : target_fn.call(null,G__37428,G__37429,G__37430,G__37431,G__37432));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37433 = a;
var G__37434 = b;
var G__37435 = c;
var G__37436 = d;
var G__37437 = e;
var G__37438 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__37433,G__37434,G__37435,G__37436,G__37437,G__37438) : self__.dispatch_fn.call(null,G__37433,G__37434,G__37435,G__37436,G__37437,G__37438));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37439 = a;
var G__37440 = b;
var G__37441 = c;
var G__37442 = d;
var G__37443 = e;
var G__37444 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__37439,G__37440,G__37441,G__37442,G__37443,G__37444) : target_fn.call(null,G__37439,G__37440,G__37441,G__37442,G__37443,G__37444));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37445 = a;
var G__37446 = b;
var G__37447 = c;
var G__37448 = d;
var G__37449 = e;
var G__37450 = f;
var G__37451 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__37445,G__37446,G__37447,G__37448,G__37449,G__37450,G__37451) : self__.dispatch_fn.call(null,G__37445,G__37446,G__37447,G__37448,G__37449,G__37450,G__37451));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37452 = a;
var G__37453 = b;
var G__37454 = c;
var G__37455 = d;
var G__37456 = e;
var G__37457 = f;
var G__37458 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__37452,G__37453,G__37454,G__37455,G__37456,G__37457,G__37458) : target_fn.call(null,G__37452,G__37453,G__37454,G__37455,G__37456,G__37457,G__37458));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37459 = a;
var G__37460 = b;
var G__37461 = c;
var G__37462 = d;
var G__37463 = e;
var G__37464 = f;
var G__37465 = g;
var G__37466 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__37459,G__37460,G__37461,G__37462,G__37463,G__37464,G__37465,G__37466) : self__.dispatch_fn.call(null,G__37459,G__37460,G__37461,G__37462,G__37463,G__37464,G__37465,G__37466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37467 = a;
var G__37468 = b;
var G__37469 = c;
var G__37470 = d;
var G__37471 = e;
var G__37472 = f;
var G__37473 = g;
var G__37474 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__37467,G__37468,G__37469,G__37470,G__37471,G__37472,G__37473,G__37474) : target_fn.call(null,G__37467,G__37468,G__37469,G__37470,G__37471,G__37472,G__37473,G__37474));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37475 = a;
var G__37476 = b;
var G__37477 = c;
var G__37478 = d;
var G__37479 = e;
var G__37480 = f;
var G__37481 = g;
var G__37482 = h;
var G__37483 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__37475,G__37476,G__37477,G__37478,G__37479,G__37480,G__37481,G__37482,G__37483) : self__.dispatch_fn.call(null,G__37475,G__37476,G__37477,G__37478,G__37479,G__37480,G__37481,G__37482,G__37483));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37484 = a;
var G__37485 = b;
var G__37486 = c;
var G__37487 = d;
var G__37488 = e;
var G__37489 = f;
var G__37490 = g;
var G__37491 = h;
var G__37492 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__37484,G__37485,G__37486,G__37487,G__37488,G__37489,G__37490,G__37491,G__37492) : target_fn.call(null,G__37484,G__37485,G__37486,G__37487,G__37488,G__37489,G__37490,G__37491,G__37492));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37493 = a;
var G__37494 = b;
var G__37495 = c;
var G__37496 = d;
var G__37497 = e;
var G__37498 = f;
var G__37499 = g;
var G__37500 = h;
var G__37501 = i;
var G__37502 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__37493,G__37494,G__37495,G__37496,G__37497,G__37498,G__37499,G__37500,G__37501,G__37502) : self__.dispatch_fn.call(null,G__37493,G__37494,G__37495,G__37496,G__37497,G__37498,G__37499,G__37500,G__37501,G__37502));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37503 = a;
var G__37504 = b;
var G__37505 = c;
var G__37506 = d;
var G__37507 = e;
var G__37508 = f;
var G__37509 = g;
var G__37510 = h;
var G__37511 = i;
var G__37512 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__37503,G__37504,G__37505,G__37506,G__37507,G__37508,G__37509,G__37510,G__37511,G__37512) : target_fn.call(null,G__37503,G__37504,G__37505,G__37506,G__37507,G__37508,G__37509,G__37510,G__37511,G__37512));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37513 = a;
var G__37514 = b;
var G__37515 = c;
var G__37516 = d;
var G__37517 = e;
var G__37518 = f;
var G__37519 = g;
var G__37520 = h;
var G__37521 = i;
var G__37522 = j;
var G__37523 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__37513,G__37514,G__37515,G__37516,G__37517,G__37518,G__37519,G__37520,G__37521,G__37522,G__37523) : self__.dispatch_fn.call(null,G__37513,G__37514,G__37515,G__37516,G__37517,G__37518,G__37519,G__37520,G__37521,G__37522,G__37523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37524 = a;
var G__37525 = b;
var G__37526 = c;
var G__37527 = d;
var G__37528 = e;
var G__37529 = f;
var G__37530 = g;
var G__37531 = h;
var G__37532 = i;
var G__37533 = j;
var G__37534 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__37524,G__37525,G__37526,G__37527,G__37528,G__37529,G__37530,G__37531,G__37532,G__37533,G__37534) : target_fn.call(null,G__37524,G__37525,G__37526,G__37527,G__37528,G__37529,G__37530,G__37531,G__37532,G__37533,G__37534));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37535 = a;
var G__37536 = b;
var G__37537 = c;
var G__37538 = d;
var G__37539 = e;
var G__37540 = f;
var G__37541 = g;
var G__37542 = h;
var G__37543 = i;
var G__37544 = j;
var G__37545 = k;
var G__37546 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__37535,G__37536,G__37537,G__37538,G__37539,G__37540,G__37541,G__37542,G__37543,G__37544,G__37545,G__37546) : self__.dispatch_fn.call(null,G__37535,G__37536,G__37537,G__37538,G__37539,G__37540,G__37541,G__37542,G__37543,G__37544,G__37545,G__37546));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37547 = a;
var G__37548 = b;
var G__37549 = c;
var G__37550 = d;
var G__37551 = e;
var G__37552 = f;
var G__37553 = g;
var G__37554 = h;
var G__37555 = i;
var G__37556 = j;
var G__37557 = k;
var G__37558 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__37547,G__37548,G__37549,G__37550,G__37551,G__37552,G__37553,G__37554,G__37555,G__37556,G__37557,G__37558) : target_fn.call(null,G__37547,G__37548,G__37549,G__37550,G__37551,G__37552,G__37553,G__37554,G__37555,G__37556,G__37557,G__37558));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37559 = a;
var G__37560 = b;
var G__37561 = c;
var G__37562 = d;
var G__37563 = e;
var G__37564 = f;
var G__37565 = g;
var G__37566 = h;
var G__37567 = i;
var G__37568 = j;
var G__37569 = k;
var G__37570 = l;
var G__37571 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__37559,G__37560,G__37561,G__37562,G__37563,G__37564,G__37565,G__37566,G__37567,G__37568,G__37569,G__37570,G__37571) : self__.dispatch_fn.call(null,G__37559,G__37560,G__37561,G__37562,G__37563,G__37564,G__37565,G__37566,G__37567,G__37568,G__37569,G__37570,G__37571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37572 = a;
var G__37573 = b;
var G__37574 = c;
var G__37575 = d;
var G__37576 = e;
var G__37577 = f;
var G__37578 = g;
var G__37579 = h;
var G__37580 = i;
var G__37581 = j;
var G__37582 = k;
var G__37583 = l;
var G__37584 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__37572,G__37573,G__37574,G__37575,G__37576,G__37577,G__37578,G__37579,G__37580,G__37581,G__37582,G__37583,G__37584) : target_fn.call(null,G__37572,G__37573,G__37574,G__37575,G__37576,G__37577,G__37578,G__37579,G__37580,G__37581,G__37582,G__37583,G__37584));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37585 = a;
var G__37586 = b;
var G__37587 = c;
var G__37588 = d;
var G__37589 = e;
var G__37590 = f;
var G__37591 = g;
var G__37592 = h;
var G__37593 = i;
var G__37594 = j;
var G__37595 = k;
var G__37596 = l;
var G__37597 = m;
var G__37598 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__37585,G__37586,G__37587,G__37588,G__37589,G__37590,G__37591,G__37592,G__37593,G__37594,G__37595,G__37596,G__37597,G__37598) : self__.dispatch_fn.call(null,G__37585,G__37586,G__37587,G__37588,G__37589,G__37590,G__37591,G__37592,G__37593,G__37594,G__37595,G__37596,G__37597,G__37598));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37599 = a;
var G__37600 = b;
var G__37601 = c;
var G__37602 = d;
var G__37603 = e;
var G__37604 = f;
var G__37605 = g;
var G__37606 = h;
var G__37607 = i;
var G__37608 = j;
var G__37609 = k;
var G__37610 = l;
var G__37611 = m;
var G__37612 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__37599,G__37600,G__37601,G__37602,G__37603,G__37604,G__37605,G__37606,G__37607,G__37608,G__37609,G__37610,G__37611,G__37612) : target_fn.call(null,G__37599,G__37600,G__37601,G__37602,G__37603,G__37604,G__37605,G__37606,G__37607,G__37608,G__37609,G__37610,G__37611,G__37612));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37613 = a;
var G__37614 = b;
var G__37615 = c;
var G__37616 = d;
var G__37617 = e;
var G__37618 = f;
var G__37619 = g;
var G__37620 = h;
var G__37621 = i;
var G__37622 = j;
var G__37623 = k;
var G__37624 = l;
var G__37625 = m;
var G__37626 = n;
var G__37627 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__37613,G__37614,G__37615,G__37616,G__37617,G__37618,G__37619,G__37620,G__37621,G__37622,G__37623,G__37624,G__37625,G__37626,G__37627) : self__.dispatch_fn.call(null,G__37613,G__37614,G__37615,G__37616,G__37617,G__37618,G__37619,G__37620,G__37621,G__37622,G__37623,G__37624,G__37625,G__37626,G__37627));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37628 = a;
var G__37629 = b;
var G__37630 = c;
var G__37631 = d;
var G__37632 = e;
var G__37633 = f;
var G__37634 = g;
var G__37635 = h;
var G__37636 = i;
var G__37637 = j;
var G__37638 = k;
var G__37639 = l;
var G__37640 = m;
var G__37641 = n;
var G__37642 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__37628,G__37629,G__37630,G__37631,G__37632,G__37633,G__37634,G__37635,G__37636,G__37637,G__37638,G__37639,G__37640,G__37641,G__37642) : target_fn.call(null,G__37628,G__37629,G__37630,G__37631,G__37632,G__37633,G__37634,G__37635,G__37636,G__37637,G__37638,G__37639,G__37640,G__37641,G__37642));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37643 = a;
var G__37644 = b;
var G__37645 = c;
var G__37646 = d;
var G__37647 = e;
var G__37648 = f;
var G__37649 = g;
var G__37650 = h;
var G__37651 = i;
var G__37652 = j;
var G__37653 = k;
var G__37654 = l;
var G__37655 = m;
var G__37656 = n;
var G__37657 = o;
var G__37658 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__37643,G__37644,G__37645,G__37646,G__37647,G__37648,G__37649,G__37650,G__37651,G__37652,G__37653,G__37654,G__37655,G__37656,G__37657,G__37658) : self__.dispatch_fn.call(null,G__37643,G__37644,G__37645,G__37646,G__37647,G__37648,G__37649,G__37650,G__37651,G__37652,G__37653,G__37654,G__37655,G__37656,G__37657,G__37658));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37659 = a;
var G__37660 = b;
var G__37661 = c;
var G__37662 = d;
var G__37663 = e;
var G__37664 = f;
var G__37665 = g;
var G__37666 = h;
var G__37667 = i;
var G__37668 = j;
var G__37669 = k;
var G__37670 = l;
var G__37671 = m;
var G__37672 = n;
var G__37673 = o;
var G__37674 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__37659,G__37660,G__37661,G__37662,G__37663,G__37664,G__37665,G__37666,G__37667,G__37668,G__37669,G__37670,G__37671,G__37672,G__37673,G__37674) : target_fn.call(null,G__37659,G__37660,G__37661,G__37662,G__37663,G__37664,G__37665,G__37666,G__37667,G__37668,G__37669,G__37670,G__37671,G__37672,G__37673,G__37674));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37675 = a;
var G__37676 = b;
var G__37677 = c;
var G__37678 = d;
var G__37679 = e;
var G__37680 = f;
var G__37681 = g;
var G__37682 = h;
var G__37683 = i;
var G__37684 = j;
var G__37685 = k;
var G__37686 = l;
var G__37687 = m;
var G__37688 = n;
var G__37689 = o;
var G__37690 = p;
var G__37691 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__37675,G__37676,G__37677,G__37678,G__37679,G__37680,G__37681,G__37682,G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689,G__37690,G__37691) : self__.dispatch_fn.call(null,G__37675,G__37676,G__37677,G__37678,G__37679,G__37680,G__37681,G__37682,G__37683,G__37684,G__37685,G__37686,G__37687,G__37688,G__37689,G__37690,G__37691));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37692 = a;
var G__37693 = b;
var G__37694 = c;
var G__37695 = d;
var G__37696 = e;
var G__37697 = f;
var G__37698 = g;
var G__37699 = h;
var G__37700 = i;
var G__37701 = j;
var G__37702 = k;
var G__37703 = l;
var G__37704 = m;
var G__37705 = n;
var G__37706 = o;
var G__37707 = p;
var G__37708 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__37692,G__37693,G__37694,G__37695,G__37696,G__37697,G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706,G__37707,G__37708) : target_fn.call(null,G__37692,G__37693,G__37694,G__37695,G__37696,G__37697,G__37698,G__37699,G__37700,G__37701,G__37702,G__37703,G__37704,G__37705,G__37706,G__37707,G__37708));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37709 = a;
var G__37710 = b;
var G__37711 = c;
var G__37712 = d;
var G__37713 = e;
var G__37714 = f;
var G__37715 = g;
var G__37716 = h;
var G__37717 = i;
var G__37718 = j;
var G__37719 = k;
var G__37720 = l;
var G__37721 = m;
var G__37722 = n;
var G__37723 = o;
var G__37724 = p;
var G__37725 = q;
var G__37726 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__37709,G__37710,G__37711,G__37712,G__37713,G__37714,G__37715,G__37716,G__37717,G__37718,G__37719,G__37720,G__37721,G__37722,G__37723,G__37724,G__37725,G__37726) : self__.dispatch_fn.call(null,G__37709,G__37710,G__37711,G__37712,G__37713,G__37714,G__37715,G__37716,G__37717,G__37718,G__37719,G__37720,G__37721,G__37722,G__37723,G__37724,G__37725,G__37726));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37727 = a;
var G__37728 = b;
var G__37729 = c;
var G__37730 = d;
var G__37731 = e;
var G__37732 = f;
var G__37733 = g;
var G__37734 = h;
var G__37735 = i;
var G__37736 = j;
var G__37737 = k;
var G__37738 = l;
var G__37739 = m;
var G__37740 = n;
var G__37741 = o;
var G__37742 = p;
var G__37743 = q;
var G__37744 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__37727,G__37728,G__37729,G__37730,G__37731,G__37732,G__37733,G__37734,G__37735,G__37736,G__37737,G__37738,G__37739,G__37740,G__37741,G__37742,G__37743,G__37744) : target_fn.call(null,G__37727,G__37728,G__37729,G__37730,G__37731,G__37732,G__37733,G__37734,G__37735,G__37736,G__37737,G__37738,G__37739,G__37740,G__37741,G__37742,G__37743,G__37744));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37745 = a;
var G__37746 = b;
var G__37747 = c;
var G__37748 = d;
var G__37749 = e;
var G__37750 = f;
var G__37751 = g;
var G__37752 = h;
var G__37753 = i;
var G__37754 = j;
var G__37755 = k;
var G__37756 = l;
var G__37757 = m;
var G__37758 = n;
var G__37759 = o;
var G__37760 = p;
var G__37761 = q;
var G__37762 = r;
var G__37763 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__37745,G__37746,G__37747,G__37748,G__37749,G__37750,G__37751,G__37752,G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763) : self__.dispatch_fn.call(null,G__37745,G__37746,G__37747,G__37748,G__37749,G__37750,G__37751,G__37752,G__37753,G__37754,G__37755,G__37756,G__37757,G__37758,G__37759,G__37760,G__37761,G__37762,G__37763));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37764 = a;
var G__37765 = b;
var G__37766 = c;
var G__37767 = d;
var G__37768 = e;
var G__37769 = f;
var G__37770 = g;
var G__37771 = h;
var G__37772 = i;
var G__37773 = j;
var G__37774 = k;
var G__37775 = l;
var G__37776 = m;
var G__37777 = n;
var G__37778 = o;
var G__37779 = p;
var G__37780 = q;
var G__37781 = r;
var G__37782 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__37764,G__37765,G__37766,G__37767,G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781,G__37782) : target_fn.call(null,G__37764,G__37765,G__37766,G__37767,G__37768,G__37769,G__37770,G__37771,G__37772,G__37773,G__37774,G__37775,G__37776,G__37777,G__37778,G__37779,G__37780,G__37781,G__37782));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37783 = a;
var G__37784 = b;
var G__37785 = c;
var G__37786 = d;
var G__37787 = e;
var G__37788 = f;
var G__37789 = g;
var G__37790 = h;
var G__37791 = i;
var G__37792 = j;
var G__37793 = k;
var G__37794 = l;
var G__37795 = m;
var G__37796 = n;
var G__37797 = o;
var G__37798 = p;
var G__37799 = q;
var G__37800 = r;
var G__37801 = s;
var G__37802 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__37783,G__37784,G__37785,G__37786,G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797,G__37798,G__37799,G__37800,G__37801,G__37802) : self__.dispatch_fn.call(null,G__37783,G__37784,G__37785,G__37786,G__37787,G__37788,G__37789,G__37790,G__37791,G__37792,G__37793,G__37794,G__37795,G__37796,G__37797,G__37798,G__37799,G__37800,G__37801,G__37802));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37803 = a;
var G__37804 = b;
var G__37805 = c;
var G__37806 = d;
var G__37807 = e;
var G__37808 = f;
var G__37809 = g;
var G__37810 = h;
var G__37811 = i;
var G__37812 = j;
var G__37813 = k;
var G__37814 = l;
var G__37815 = m;
var G__37816 = n;
var G__37817 = o;
var G__37818 = p;
var G__37819 = q;
var G__37820 = r;
var G__37821 = s;
var G__37822 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__37803,G__37804,G__37805,G__37806,G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814,G__37815,G__37816,G__37817,G__37818,G__37819,G__37820,G__37821,G__37822) : target_fn.call(null,G__37803,G__37804,G__37805,G__37806,G__37807,G__37808,G__37809,G__37810,G__37811,G__37812,G__37813,G__37814,G__37815,G__37816,G__37817,G__37818,G__37819,G__37820,G__37821,G__37822));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__37824 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__37824);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24131__auto__,writer__24132__auto__,opt__24133__auto__){
return cljs.core._write(writer__24132__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__37829 = msg;
return Error(G__37829);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__37834 = x;
var G__37835 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37834,G__37835) : pred.call(null,G__37834,G__37835));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__37836 = y;
var G__37837 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37836,G__37837) : pred.call(null,G__37836,G__37837));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1425613921638