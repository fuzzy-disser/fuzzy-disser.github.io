{:name fuzzy.fzlogic, :doc nil, :excludes #{or and}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {and {:protocol-inline nil, :meta {:file "/Users/zarkone/Documents/school/fuzzy/src/cljs/fuzzy/fzlogic.cljs", :line 3, :column 7, :end-line 3, :end-column 10, :arglists (quote ([x & next])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x next)], :arglists ([x & next]), :arglists-meta (nil)}}, :name fuzzy.fzlogic/and, :variadic true, :file "/Users/zarkone/Documents/school/fuzzy/src/cljs/fuzzy/fzlogic.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x next)], :arglists ([x & next]), :arglists-meta (nil)}, :method-params [(x next)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists ([x & next])}, or {:protocol-inline nil, :meta {:file "/Users/zarkone/Documents/school/fuzzy/src/cljs/fuzzy/fzlogic.cljs", :line 6, :column 7, :end-line 6, :end-column 9, :arglists (quote ([x & next])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x next)], :arglists ([x & next]), :arglists-meta (nil)}}, :name fuzzy.fzlogic/or, :variadic true, :file "/Users/zarkone/Documents/school/fuzzy/src/cljs/fuzzy/fzlogic.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x next)], :arglists ([x & next]), :arglists-meta (nil)}, :method-params [(x next)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([x & next])}}}