// Compiled by ClojureScript 0.0-2850 {}
goog.provide('fuzzy.schema.accident');
goog.require('cljs.core');
goog.require('fuzzy.fzlogic');
fuzzy.schema.accident.human_factor = (function human_factor(vars){
var map__9887 = vars;
var map__9887__$1 = ((cljs.core.seq_QMARK_(map__9887))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9887):map__9887);
var map__9888 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9887__$1,cljs.core.constant$keyword$20);
var map__9888__$1 = ((cljs.core.seq_QMARK_(map__9888))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9888):map__9888);
var x1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9888__$1,cljs.core.constant$keyword$21);
var x1_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9888__$1,cljs.core.constant$keyword$22);
var map__9889 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9887__$1,cljs.core.constant$keyword$23);
var map__9889__$1 = ((cljs.core.seq_QMARK_(map__9889))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9889):map__9889);
var x2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9889__$1,cljs.core.constant$keyword$21);
var x2_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9889__$1,cljs.core.constant$keyword$22);
var map__9890 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9887__$1,cljs.core.constant$keyword$24);
var map__9890__$1 = ((cljs.core.seq_QMARK_(map__9890))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9890):map__9890);
var x4 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9890__$1,cljs.core.constant$keyword$21);
var x4_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9890__$1,cljs.core.constant$keyword$22);
var map__9891 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9887__$1,cljs.core.constant$keyword$25);
var map__9891__$1 = ((cljs.core.seq_QMARK_(map__9891))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9891):map__9891);
var x6 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9891__$1,cljs.core.constant$keyword$21);
var x6_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9891__$1,cljs.core.constant$keyword$22);
var map__9892 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9887__$1,cljs.core.constant$keyword$26);
var map__9892__$1 = ((cljs.core.seq_QMARK_(map__9892))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9892):map__9892);
var x7 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9892__$1,cljs.core.constant$keyword$21);
var x7_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9892__$1,cljs.core.constant$keyword$22);
return fuzzy.fzlogic.or.cljs$core$IFn$_invoke$arity$variadic((x1 * x1_w),cljs.core.array_seq([(x2 * x2_w),(x4 * x4_w),(x6 * x6_w),(x7 * x7_w)], 0));
});
fuzzy.schema.accident.electro_station = (function electro_station(vars){
var map__9900 = vars;
var map__9900__$1 = ((cljs.core.seq_QMARK_(map__9900))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9900):map__9900);
var map__9901 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9900__$1,cljs.core.constant$keyword$27);
var map__9901__$1 = ((cljs.core.seq_QMARK_(map__9901))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9901):map__9901);
var y4 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9901__$1,cljs.core.constant$keyword$21);
var y4_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9901__$1,cljs.core.constant$keyword$22);
var map__9902 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9900__$1,cljs.core.constant$keyword$28);
var map__9902__$1 = ((cljs.core.seq_QMARK_(map__9902))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9902):map__9902);
var y2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9902__$1,cljs.core.constant$keyword$21);
var y2_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9902__$1,cljs.core.constant$keyword$22);
var map__9903 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9900__$1,cljs.core.constant$keyword$29);
var map__9903__$1 = ((cljs.core.seq_QMARK_(map__9903))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9903):map__9903);
var y1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9903__$1,cljs.core.constant$keyword$21);
var y1_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9903__$1,cljs.core.constant$keyword$22);
var map__9904 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9900__$1,cljs.core.constant$keyword$30);
var map__9904__$1 = ((cljs.core.seq_QMARK_(map__9904))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9904):map__9904);
var y8 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9904__$1,cljs.core.constant$keyword$21);
var y8_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9904__$1,cljs.core.constant$keyword$22);
var map__9905 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9900__$1,cljs.core.constant$keyword$31);
var map__9905__$1 = ((cljs.core.seq_QMARK_(map__9905))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9905):map__9905);
var y7 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9905__$1,cljs.core.constant$keyword$21);
var y7_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9905__$1,cljs.core.constant$keyword$22);
var map__9906 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9900__$1,cljs.core.constant$keyword$32);
var map__9906__$1 = ((cljs.core.seq_QMARK_(map__9906))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9906):map__9906);
var y6 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9906__$1,cljs.core.constant$keyword$21);
var y6_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9906__$1,cljs.core.constant$keyword$22);
return fuzzy.fzlogic.or.cljs$core$IFn$_invoke$arity$variadic(fuzzy.fzlogic.and.cljs$core$IFn$_invoke$arity$variadic((y1 * y1_w),cljs.core.array_seq([fuzzy.fzlogic.or.cljs$core$IFn$_invoke$arity$variadic((y2 * y2_w),cljs.core.array_seq([(y4 * y4_w)], 0)),(y1 * y1_w)], 0)),cljs.core.array_seq([fuzzy.fzlogic.and.cljs$core$IFn$_invoke$arity$variadic(fuzzy.fzlogic.or.cljs$core$IFn$_invoke$arity$variadic((y6 * y6_w),cljs.core.array_seq([(y8 * y8_w)], 0)),cljs.core.array_seq([(y7 * y7_w)], 0))], 0));
});
fuzzy.schema.accident.environment = (function environment(vars){
var map__9912 = vars;
var map__9912__$1 = ((cljs.core.seq_QMARK_(map__9912))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9912):map__9912);
var map__9913 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9912__$1,cljs.core.constant$keyword$33);
var map__9913__$1 = ((cljs.core.seq_QMARK_(map__9913))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9913):map__9913);
var z1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9913__$1,cljs.core.constant$keyword$21);
var z1_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9913__$1,cljs.core.constant$keyword$22);
var map__9914 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9912__$1,cljs.core.constant$keyword$34);
var map__9914__$1 = ((cljs.core.seq_QMARK_(map__9914))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9914):map__9914);
var z2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9914__$1,cljs.core.constant$keyword$21);
var z2_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9914__$1,cljs.core.constant$keyword$22);
var map__9915 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9912__$1,cljs.core.constant$keyword$35);
var map__9915__$1 = ((cljs.core.seq_QMARK_(map__9915))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9915):map__9915);
var z3 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9915__$1,cljs.core.constant$keyword$21);
var z3_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9915__$1,cljs.core.constant$keyword$22);
var map__9916 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9912__$1,cljs.core.constant$keyword$36);
var map__9916__$1 = ((cljs.core.seq_QMARK_(map__9916))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9916):map__9916);
var z4 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9916__$1,cljs.core.constant$keyword$21);
var z4_w = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9916__$1,cljs.core.constant$keyword$22);
return fuzzy.fzlogic.or.cljs$core$IFn$_invoke$arity$variadic((z1 * z1_w),cljs.core.array_seq([(z2 * z2_w),(z3 * z3_w),(z4 * z4_w)], 0));
});
